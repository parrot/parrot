{"version":1,"ops":[{"type":1,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1246933527,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NTQ3","github-url":"https://github.com/parrot/parrot/issues/348","origin":"github"},"title":"PMC 'Undef' does not support logical_not","message":"This code in Close:\n\n```\n   ok(!(o.flat()), \"flat: New object (undef flat) is false\");\n```\n\ncompiles to:\n\n```\n    $P51 = o.\"flat\"()\n    not $P52, $P51\n    \"ok\"($P52, \"flat: New object (undef flat) is false\")\n```\n\nAnd then fails, with:\n\n```\nlogical_not() not implemented in class 'Undef'\n```\n\nGrepping for logical_not in *.pmc gives back only scalar.pmc.\n- While I know that Perl's Undef has 0/nil/false/\"\" behavior, is that right for Parrot? (To what extent is Undef just a safe Null?)\n- Should there even be a 'not' opcode? We've got isfalse.\n- Should other pmc types be implementing logical_not? \n- Should Undef be a subclass of scalar, and so inherit?\n\nOriginally http://trac.parrot.org/parrot/ticket/816","files":null}]}