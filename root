{"version":1,"ops":[{"type":1,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1350366604,"metadata":{"github-id":"MDU6SXNzdWU3NjE0ODAw","github-url":"https://github.com/parrot/parrot/issues/861","origin":"github"},"title":"Parrot readline sometimes requires more than one line","message":"Since the 4.8.0 release (and the io_rewrite branch merge), various Rakudo users have noticed that single-line reads often keep reading to EOF instead of stopping after a single line.  I now have a pure-parrot program that exhibits the bug:\n\n```\npmichaud@kiwi:~/p6/parrot$ git describe --tags\nRELEASE_4_8_0-133-g1101abb\npmichaud@kiwi:~/p6/parrot$ cat z.pir\n.sub 'main' :main\n    .local pmc stdin\n    stdin = getstdin\n    stdin.'encoding'('utf8')\n    sweep 1\n    $I0 = 1000\n  loop:\n    unless $I0 \u003e 0 goto done\n    $S0 = $I0\n    dec $I0\n    goto loop\n  done:\n    print \"Enter a line of text: \"\n    $S1 = stdin.'readline'()\n    print \"Your line is: \"\n    say $S1\n.end\n\npmichaud@kiwi:~/p6/parrot$ ./parrot z.pir\nEnter a line of text: hello\nworld\nI already entered a line of text\nYour line is: hello\nworld\nI already entered a line of text\n\npmichaud@kiwi:~/p6/parrot$ \n```\n\nNotice how only a single line of text is requested, but I entered several lines and ultimately had to send EOF (Ctrl-D on Linux) after the \"I already entered a line of text\" input in order to get the program to proceed, at which point it returned all of my input lines in $S1.\n\nThis may be related to issues #860 and #834.  \n\nIt is definitely a blocker for Rakudo -- Rakudo cannot use Parrot 4.8.0 or later until this bug is fixed.\n\nPm","files":null}]}