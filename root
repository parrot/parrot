{"version":1,"ops":[{"type":1,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1345196661,"metadata":{"github-id":"MDU6SXNzdWU2Mjg1NzQx","github-url":"https://github.com/parrot/parrot/issues/814","origin":"github"},"title":"MIME Base64 base64 encodes unicode codepoints when it should encode a binary unicode/utf8 etc encoding","message":"The following is output for Perl and parrot MIME::Base64 encodings of the unicode cents symbol, codepoint A2, from a utf8 buffer.  Please note that the results are different.\n\n05:01:15 ron-laptop:~/parrot$ perl ok_utf8_bas64.pl\nwqI=\n\n05:01:32 ron-laptop:~/parrot$ perl ok_utf8_bas64.pl | base64 -d | od -x\n0000000 a2c2\n0000002\n05:01:46 ron-laptop:~/parrot$ parrot bad_utf8_base64.pir \nog==\n05:01:58 ron-laptop:~/parrot$ parrot bad_utf8_base64.pir | base64 -d | od -x\n0000000 00a2\n0000001\n\nThe Perl encoding program is base64 encoding the utf8 encoding whereas the parrot MIME Base64 library is using the \"ord\" operator to convert a string to codepoints and then base64 encoding the codepoints.  Since parrot MIME Base64 decoding works on the same principle the encoding will decode correctly for parrot but base64 is a standard and an external base64 program like the gnu \"base64\" utility should decode our encoding to something that makes sense.  I believe that from this point of view the short Perl program below is doing the right encoding and the short parrot program below is not.\n\nfile: ok_utf8_bas64.pl\n\n``` Perl\nuse strict;\nuse MIME::Base64 qw(encode_base64);\nuse Encode qw(encode);\nmy $encoded = encode_base64(encode(\"UTF-8\", \"\\x{a2}\"));\nprint $encoded, $/;\n```\n\nfile: bad_utf8_base64.pir\n\n``` parrot\n.sub go :main\n    load_bytecode 'MIME/Base64.pbc'\n\n    .local pmc enc_sub\n    enc_sub = get_global [ \"MIME\"; \"Base64\" ], 'encode_base64'\n\n    .local string result_encode\n    result_encode = enc_sub(utf8:\"\\x{a2}\")\n\n    say result_encode\n.end\n```","files":null}]}