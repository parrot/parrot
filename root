{"version":1,"ops":[{"type":1,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1298237189,"metadata":{"github-id":"MDU6SXNzdWUyODQ4ODM5","github-url":"https://github.com/parrot/parrot/issues/630","origin":"github"},"title":"t/library/pcre.t: Not honoring '--without-pcre' configuration flag","message":"Poking around in Smolder reports, I noticed one from Coke where failures in multiple files included ''t/library/pcre.t''.  This was surprising, because in this run Parrot was configured without PCRE.\n\n```\nConfigure args\n  \"--cc=ccache cc\" \"--ccflags=-g\" \"--without-gettext\" \n  \"--without-gmp\" \"--without-libffi\" \"--without-extra-nci-thunks\" \n  \"--without-opengl\" \"--without-readline\" \"--without-pcre\" \n  \"--without-zlib\" \"--without-threads\" \"--without-icu\" \"--cc=g++\" \n  \"--link=g++\" \"--ld=g++\" \n  \"--prefix=/Users/coke/sandbox/parrot-smoker/installed_parrot\"\n```\n\nLooking at ''t/library/pcre.t'', I see that it never bothers to check `$PConfig{HAS_PCRE}` and so proceeds to run the tests.  There's a lot of code that appears to predate ''config/auto/pcre.pm'' which attempts to determine whether PCRE is present.\n\n```\n# if we keep pcre, we need a config test\nmy $cmd = ( $^O =~ /MSWin32/ )\n  ? \"pcregrep --version\" : \"pcre-config --version\";\nmy $has_pcre = !Parrot::Test::run_command( \n  $cmd, STDOUT =\u003e File::Spec-\u003edevnull ,\n  STDERR =\u003e File::Spec-\u003edevnull, );\nmy $pcre_libpath = '';\n\n# It's possible that libpcre is installed in \n# some non-standard path...\nif ($has_pcre \u0026\u0026 ($^O !~ /MSWin32/)) {\n    # Extract the library path for non-windows platforms \n    # (in case it isn't in\n    # the normal lookup locations)\n    my $outfile = 'pcre-config.out';\n    Parrot::Test::run_command('pcre-config --prefix', \n       STDOUT =\u003e $outfile);\n    my $out = Parrot::Test::slurp_file($outfile);\n    unlink $outfile;\n    chomp $out;\n    $pcre_libpath = \"$out/lib\";\n}\n```\n\nThe value of `$pcre_libpath` is set in this block and used subsequently in tests.  Not surprisingly, since no value is ever assigned when on Windows, the tests have to be skipped for Windows.\n\nThis is clearly not a satisfactory situation.  By the time we get this far into testing, we should unambiguously know whether we have PCRE or not.  If we need to know a library path, we should also determine that during configuration as well.\n\nQuestions:\n1. Is there anything of value in the way ''t/library/pcre.t'' tests for the presence of PCRE that ought to be incorporated into ''config/auto/pcre.pm''?\n2. The tests in this file presume we know the non-empty-string value of `$pcre_libpath`.  Should we be determining that during configuration time as well.\n\nAm cc-ing some people who helped with TT #1401.\n\nThank you very much.\n\nkid51\n\nOriginally http://trac.parrot.org/parrot/ticket/2024","files":null}]}