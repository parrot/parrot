{"version":1,"ops":[{"type":1,"author":{"id":"59fd68f3741dd67ff82af0d63e044216a986b680"},"timestamp":1248795310,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NjI0","github-url":"https://github.com/parrot/parrot/issues/418","origin":"github"},"title":"isa does not take (correctly) namespace, pmcarray,stringarray","message":"When running this code isa returns true while it should return false\n\n$P1 = #object of type 'FOO::BAR::TEST'\n\n$P3 = get_hll_namespace [ 'FOO';'BAR2';'Object']\n\n$I1 = isa $P1,$P3\n\nreturns true must be false\n\n$P3 = string array with elements \"FOO\",\"BAR\",\"TEST\"\n\n$I1 = isa $P1,$P3\n\nreturns fasle must be true\n\nI solved this problem by replacing the    \n\n VTABLE INTVAL isa_pmc(PMC *lookup) \n\nfunction with the following code\n\n```\nVTABLE INTVAL isa_pmc(PMC *lookup) {\n\n   Hash   * const isa_hash = SELF-\u003evtable-\u003eisa_hash;\n```\n- ```\n   PMC    *classobj;\n  ```\n  \n     STRING *pmc_name;\n  \n     if (PMC_IS_NULL(lookup))\n  \n  ```\n      return 0;\n  ```\n- ```\n   classobj = Parrot_oo_get_class(interp, lookup);\n  ```\n- ```\n   if (PMC_IS_NULL(classobj))\n  ```\n- ```\n      return 0;\n  ```\n\n-+     pmc_name = VTABLE_get_string(interp, classobj);\n\n```\n   if (!isa_hash)\n\n     return Parrot_str_equal(interp, SELF-\u003evtable-\u003ewhoami, pmc_name);\n\n   /* RT #46665 - walk mro */\n\n   return parrot_hash_exists(INTERP, isa_hash, (void*)pmc_name);\n\n}\n```\n\nI'am not sure it's completely correct, because i do not know how the mro isa_hash is build up.\n\nAdding this code will make 2 test failing in the t/tests/objects.t test set, because there are more bugs present, I made seperate ticket for that one\n\nOriginally http://trac.parrot.org/parrot/ticket/879","files":null}]}