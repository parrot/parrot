{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1235182242,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NjIx","github-url":"https://github.com/parrot/parrot/issues/415","origin":"github"},"title":"ptr_alignment 8 not honored, sparc 64bit broken","message":"Sparc 64bit with strict ptr_alignment=8 breaks when reading frozen pmc's because of misalignment.\n\nAny 64bit big-endian cpu with strict alignment is broken without '''-xmemalign=4s''' (the immediate workaround)\nThe default for all v9 architectures is '''-xmemalign=8s'''.\n\nHowever, our goal should be to allow fast aligned code and not to skip this with a compiler relaxement.\n\n```\nt@1 (l@1) stopped in PF_fetch_integer at line 1076 in file \"pf_items.c\"\n 1076       ASSERT_ARGS(PF_fetch_integer)\n(dbx) step\nt@1 (l@1) stopped in PF_fetch_integer at line 1078 in file \"pf_items.c\"\n 1078       if (!pf || pf-\u003efetch_iv == NULL)\n(dbx) print *(*stream)\n**stream = 4\n(dbx) step\nt@1 (l@1) stopped in PF_fetch_integer at line 1079 in file \"pf_items.c\"\n 1079           return *(*stream)++;\n(dbx) print *(*stream) \n**stream = 4\n(dbx) step\nt@1 (l@1) signal BUS (invalid address alignment) in PF_fetch_integer at line 1079 in file \"pf_items.c\"\n 1079           return *(*stream)++;\n(dbx) print *(*stream) \n**stream = 35\n(dbx) print *stream\n*stream = 0x100000dec\n```\n\n'''0x100000dec''' is not properly aligned. It must be '''0x100000df0'''.\n\nSparc cc manpage:[[BR]]\n-xmemalign[=\u003ca\u003e\u003cb\u003e] Controls memory alignment, \u003ca\u003e={1|2|4|8|16}, b={f|i|s}.[[BR]]\nAccepted values for b are:[[BR]]\ni Interpret access and continue execution.[[BR]]\ns Raise signal SIGBUS. [[BR]]\nf For variants of -xarch=v9 only. [reduced i] [[BR]]\n\nThanks to Rolf Grossmann for coming up with all this info and debugging, and to Andy Dougherty for correcting my wrong first analysis.\n\nThe fix for 1.0 will be a hints file update to add -xmemalign=4s to cc_flags, the goal for 2.6 will be a --64bitcompat argument to parrot to create 8-byte aligned values on 32-bit, not 4-byte as now.\n\nOriginally http://trac.parrot.org/parrot/ticket/364","files":null}]}