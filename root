{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1336153503,"metadata":{"github-id":"MDU6SXNzdWU0NDI4MTI3","github-url":"https://github.com/parrot/parrot/issues/765","origin":"github"},"title":"With --leak-test at the final interp-\u003eexit_handler_list = NULL; interp is already freed ","message":"With --leak-test at the final interp-\u003eexit_handler_list = NULL; interp is already freed\n\nI see two problems with --leak-test:\n1. invalid write interp-\u003eexit_handler_list = NULL;\n2. invalid call Parrot_x_jump_out with freed interp\n\ngdb --args ./parrot --leak-test first.pir\n\nBreakpoint 1, 0x000000000041a8c0 in __asan_report_error ()\n(gdb) bt\n#0  0x000000000041a8c0 in __asan_report_error ()\n#1  0x000000000041ace7 in __asan_report_load8 ()\n#2  0x00007ffff6c72539 in Parrot_x_jump_out (interp=\u003coptimized out\u003e, status=\u003coptimized out\u003e)\n\n```\nat src/exit.c:71\n```\n#3  0x00007ffff6c72657 in Parrot_x_exit (interp=0x7ffff2f4be80, status=0) at src/exit.c:124\n#4  0x00007ffff6c2bbfd in Parrot_api_destroy_interpreter (interp_pmc=\u003coptimized out\u003e)\n\n```\nat src/embed/api.c:320\n```\n#5  0x00000000004070e6 in main (argc=\u003coptimized out\u003e, argv=\u003coptimized out\u003e)\n\n```\nat frontend/parrot2/main.c:175\n```\n\n$ ./parrot --leak-test first.pir\n# first\n\n==15822== ERROR: AddressSanitizer heap-use-after-free on address 0x7f18877aafe8 at pc 0x7f188b4d1539 bp 0x7fff0710fd90 sp 0x7fff0710fd88\nREAD of size 8 at 0x7f18877aafe8 thread T0\n    #0 0x7f188b4d1539 (/home/rurban/Perl/parrot/parrot-git/blib/lib/libparrot.so.4.3.0+0x40c539)\n    #1 0x7f188b4d1657 (/home/rurban/Perl/parrot/parrot-git/blib/lib/libparrot.so.4.3.0+0x40c657)\n    #2 0x7f188b48abfd (/home/rurban/Perl/parrot/parrot-git/blib/lib/libparrot.so.4.3.0+0x3c5bfd)\n    #3 0x4070e6 (/home/rurban/Perl/parrot/parrot-git/parrot+0x4070e6)\n    #4 0x7f1888118ead (/lib/x86_64-linux-gnu/libc-2.13.so+0x1eead)\n0x7f18877aafe8 is located 360 bytes inside of 384-byte region [0x7f18877aae80,0x7f18877ab000)\nfreed by thread T0 here:\npreviously allocated by thread T0 here:\n==15822== ABORTING\nStats: 1M malloced (1M for red zones) by 1561 calls\nStats: 0M realloced by 82 calls\nStats: 0M freed by 474 calls\nStats: 0M really freed by 0 calls\nStats: 44M (11271 full pages) mmaped in 11 calls\n  mmaps   by size class: 8:16383; 9:8191; 10:4095; 11:2047; 12:1024; 13:512; 14:256; 15:128; 16:64; 17:32; 18:16; \n  mallocs by size class: 8:1147; 9:20; 10:17; 11:204; 12:57; 13:109; 14:2; 15:1; 16:1; 17:1; 18:2; \n  frees   by size class: 8:230; 9:10; 10:7; 11:190; 12:30; 13:4; 15:1; 16:1; 17:1; \n  rfrees  by size class: \nStats: malloc large: 3 small slow: 21\nShadow byte and word:\n  0x1fe310ef55fd: fd\n  0x1fe310ef55f8: fd fd fd fd fd fd fd fd\nMore shadow bytes:\n  0x1fe310ef55d8: fd fd fd fd fd fd fd fd\n  0x1fe310ef55e0: fd fd fd fd fd fd fd fd\n  0x1fe310ef55e8: fd fd fd fd fd fd fd fd\n  0x1fe310ef55f0: fd fd fd fd fd fd fd fd\n=\u003e0x1fe310ef55f8: fd fd fd fd fd fd fd fd\n  0x1fe310ef5600: fa fa fa fa fa fa fa fa\n  0x1fe310ef5608: fa fa fa fa fa fa fa fa\n  0x1fe310ef5610: 00 00 00 00 00 00 00 00\n  0x1fe310ef5618: 00 00 00 00 00 00 00 00","files":null}]}