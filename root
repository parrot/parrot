{"version":1,"ops":[{"type":1,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1350216737,"metadata":{"github-id":"MDU6SXNzdWU3NTcyOTUy","github-url":"https://github.com/parrot/parrot/issues/860","origin":"github"},"title":"Rakudo cannot read lines from stdin","message":"GDB session showing the issue:\n\n```\n$ gdb ./perl6\n[...]\n(gdb) break Parrot_io_readline_s\nFunction \"Parrot_io_readline_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 1 (Parrot_io_readline_s) pending.\n(gdb) run -e '$*IN.get'\nStarting program: /devel/rakudo/install/bin/perl6 -e '$*IN.get'\n[New Thread 4116.0xf64]\n[New Thread 4116.0x102c]\n\nBreakpoint 1, Parrot_io_readline_s (interp=0x80039b18, handle=0x800ee614,\n    terminator=0x81245a54) at src/io/api.c:940\n940 ASSERT_ARGS(Parrot_io_readline_s)\n(gdb) print terminator-\u003estrstart\n$1 = 0xfe689d48 \"1745786907\"\n```\n\n`\"1745786907\"` is not a legitimate line terminator.\n\nThe problem occurs when invoking the PIR directly from Rakudo as well\n\n```\n$ gdb ./perl6\n[...]\n(gdb) break Parrot_io_readline_s\nFunction \"Parrot_io_readline_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 1 (Parrot_io_readline_s) pending.\n(gdb) run -e 'pir::print__is(pir::getstdin__P.readline)'\nStarting program: /devel/rakudo/install/bin/perl6 -e 'pir::print__is(pir::getstdin__P.readline)'\n[New Thread 4956.0xf28]\n[New Thread 4956.0xe70]\n\nBreakpoint 1, Parrot_io_readline_s (interp=0x80039ad0, handle=0x800ee5cc,\n    terminator=0x812523e4) at src/io/api.c:940\n940 ASSERT_ARGS(Parrot_io_readline_s)\n(gdb) print terminator-\u003estrstart\n$1 = 0xfe68946c \"cuid_48_1350162742.96173_nfa\"\n```\n\nbut not when using NQP\n\n```\n$ gdb ./nqp\n[...]\n(gdb) break Parrot_io_readline_s\nFunction \"Parrot_io_readline_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 1 (Parrot_io_readline_s) pending.\n(gdb) run -e 'pir::print__is(pir::getstdin__P.readline)'\nStarting program: /devel/rakudo/install/bin/nqp -e 'pir::print__is(pir::getstdin__P.readline)'\n[New Thread 4020.0x1274]\n[New Thread 4020.0xedc]\n\nBreakpoint 1, Parrot_io_readline_s (interp=0x80039ac0, handle=0x800ee5bc,\n    terminator=0x800804a8) at src/io/api.c:940\n940 ASSERT_ARGS(Parrot_io_readline_s)\n(gdb) print terminator-\u003estrstart\n$1 = 0x6f9e7570 \"\\n\"\n```\n\nor PIR\n\n```\n$ cat readline.pir\n.sub test :main\n    .local pmc stdin\n    .local string line\n    stdin = getstdin\n    line = stdin.'readline'()\n    print line\n.end\n\n$ gdb ./parrot\n[...]\n(gdb) break Parrot_io_readline_s\nFunction \"Parrot_io_readline_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 1 (Parrot_io_readline_s) pending.\n(gdb) run readline.pir\nStarting program: /devel/rakudo/install/bin/parrot readline.pir\n[New Thread 1076.0x534]\n[New Thread 1076.0xf30]\n\nBreakpoint 1, Parrot_io_readline_s (interp=0x80039ad0, handle=0x800ee5cc,\n    terminator=0x800804b8) at src/io/api.c:940\n940 ASSERT_ARGS(Parrot_io_readline_s)\n(gdb) print terminator-\u003estrstart\n$1 = 0x6f9e7570 \"\\n\"\n```\n\nWhile STDIN gets initialized correctly, somehow the `record_separator` (and possibly other fields)  in the `Parrot_Handle_attributes` structure gets overwritten:\n\n```\n$ gdb ./perl6\n[...]\n(gdb) break Parrot_api_run_bytecode\nBreakpoint 1 at 0x401778\n(gdb) break Parrot_io_readline_s\nFunction \"Parrot_io_readline_s\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 2 (Parrot_io_readline_s) pending.\n(gdb) run -e 'pir::print__is(pir::getstdin__P.readline)'\nStarting program: /devel/rakudo/install/bin/perl6 -e 'pir::print__is(pir::getstdin__P.readline)'\n[New Thread 2752.0x125c]\n[New Thread 2752.0x9a4]\n\nBreakpoint 1, 0x00401778 in Parrot_api_run_bytecode ()\n(gdb) s\nSingle stepping until exit from function Parrot_api_run_bytecode,\nwhich has no line number information.\nParrot_api_run_bytecode (interp_pmc=0x800e8978, pbc=0x800b8540,\n    args=0x800f660c) at src/embed/bytecode.c:150\n150 {\n(gdb) print ((Parrot_Handle_attributes*)((Parrot_Interp*)interp_pmc-\u003edata)-\u003epiodata-\u003etable[0]-\u003edata)\n$1 = (Parrot_Handle_attributes *) 0x8009d3d8\n(gdb) print ((Parrot_Handle_attributes*)((Parrot_Interp*)interp_pmc-\u003edata)-\u003epiodata-\u003etable[0]-\u003edata)-\u003erecord_separator\n$2 = (STRING *) 0x800805a8\n(gdb) print ((Parrot_Handle_attributes*)((Parrot_Interp*)interp_pmc-\u003edata)-\u003epiodata-\u003etable[0]-\u003edata)-\u003erecord_separator-\u003estrstart\n$3 = 0x6f9e7570 \"\\n\"\n(gdb) c\nContinuing.\n\nBreakpoint 1, Parrot_api_run_bytecode (interp_pmc=0x800e8978, pbc=0x800b8540,\n    args=0x800f660c) at src/embed/bytecode.c:151\n151 ASSERT_ARGS(Parrot_api_run_bytecode)\n(gdb) c\nContinuing.\n\nBreakpoint 2, Parrot_io_readline_s (interp=0x80039bc0, handle=0x800ee6bc,\n    terminator=0x81250824) at src/io/api.c:940\n940 ASSERT_ARGS(Parrot_io_readline_s)\n(gdb) print ((Parrot_Handle_attributes*)interp-\u003epiodata-\u003etable[0]-\u003edata)\n$4 = (Parrot_Handle_attributes *) 0x8009d3d8\n(gdb) print ((Parrot_Handle_attributes*)interp-\u003epiodata-\u003etable[0]-\u003edata)-\u003erecord_separator\n$5 = (STRING *) 0x81250824\n(gdb) print ((Parrot_Handle_attributes*)interp-\u003epiodata-\u003etable[0]-\u003edata)-\u003erecord_separator-\u003estrstart\n$6 = 0x82fdbe64 \"-763724221\"\n```\n\nIt is not clear if the problem lies with the Rakudo or Parrot codebase as downgrading to Parrot 4.4.0 fixes (or at least hides) the issue.","files":null}]}