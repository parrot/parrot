{"version":1,"ops":[{"type":1,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1259623438,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NTY0","github-url":"https://github.com/parrot/parrot/issues/363","origin":"github"},"title":"Parrot may end up calling dlclose() twice with the same handle, ref. t/pmc/threads.t test 14","message":"I have been puzzled by why the last test in t/pmc/threads.t (number 14 at last count) fails on all the NetBSD systems I'm testing on.\n\nIt turns out that the reason is that this particular test causes parrot to call dlclose() twice with the same handle value, and ld.elf_so has a check for whether the given handle is \"valid\", which it isn't in the second instance, causing spurious output from the test, which in turns causes the test to fail, like so:\n\n```\nnot ok 14 - CLONE_CODE|CLONE_GLOBALS|CLONE_HLL|CLONE_LIBRARIES - TT \\# 1250\n#   Failed test 'CLONE_CODE|CLONE_GLOBALS|CLONE_HLL|CLONE_LIBRARIES - TT \\# 1250'\n#   at t/pmc/threads.t line 831.\n#          got: 'in thread:\n#0\n# ok (equal)\n#42\n# in main:\n#0\n# ok (equal)\n#42\n# Invalid shared object handle 0xeffed600\n# '\n#     expected: 'in thread:\n#0\n# ok (equal)\n#42\n# in main:\n#0\n# ok (equal)\n#42\n# '\n# Looks like you failed 1 test of 14.\n```\n\nThe following GDB session shows that this is the problem:\n\n```\ngranny-smith: {130} gdb ./parrot\nGNU gdb 6.5\nCopyright (C) 2006 Free Software Foundation, Inc.\nGDB is free software, covered by the GNU General Public License, and you are\nwelcome to change it and/or distribute copies of it under certain conditions.\nType \"show copying\" to see the conditions.\nThere is absolutely no warranty for GDB.  Type \"show warranty\" for details.\nThis GDB was configured as \"powerpc--netbsd\"...\n(gdb) b dlclose\nFunction \"dlclose\" not defined.\nMake breakpoint pending on future shared library load? (y or [n]) y\n\nBreakpoint 1 (dlclose) pending.\n(gdb) r t/pmc/threads_14.pir\nStarting program: /usr/users/he/parrot/parrot t/pmc/threads_14.pir\nBreakpoint 2 at 0xefff594c\nPending breakpoint \"dlclose\" resolved\nin thread:\n0\nok (equal)\n42\n\nBreakpoint 2, 0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n(gdb) where\n#0  0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n#1  0xefd65f30 in Parrot_dlclose (handle=0xeffed600)\n    at config/gen/platform/generic/dl.c:96\n#2  0xefe6e274 in Parrot_ParrotLibrary_destroy (interp=0xee8031e0, \n    pmc=0xee7d3e60) at ./src/pmc/parrotlibrary.pmc:65\n#3  0xefd6a204 in Parrot_pmc_destroy (interp=0xee8031e0, pmc=0xee7d3e60)\n    at src/pmc.c:116\n#4  0xefd092d0 in free_pmc_in_pool (interp=0xee8031e0, pool_unused=0xee710150, \n    p=0xee7d3e60) at src/gc/mark_sweep.c:602\n#5  0xefd083d8 in Parrot_gc_sweep_pool (interp=0xee8031e0, pool=0xee710150)\n    at src/gc/mark_sweep.c:331\n#6  0xefd071f0 in gc_ms_finalize (interp=0xee8031e0, mem_pools=0xee807f60)\n    at src/gc/gc_ms.c:232\n#7  0xefd07490 in gc_ms_mark_and_sweep (interp=0xee8031e0, flags=4)\n    at src/gc/gc_ms.c:161\n#8  0xefd03e74 in Parrot_gc_mark_and_sweep (interp=0xee8031e0, flags=4)\n    at src/gc/api.c:856\n#9  0xefd1aab8 in Parrot_really_destroy (interp=0xee8031e0, \n    exit_code_unused=0, arg_unused=0x0) at src/interp/inter_create.c:337\n#10 0xefd79e58 in pt_thread_join (parent=0xee803100, tid=1)\n    at src/thread.c:1383\n#11 0xeff16fc8 in Parrot_ParrotRunningThread_nci_join (interp=0xee803100, \n    pmc=0xee8afbac) at ./src/pmc/parrotrunningthread.pmc:108\n#12 0xefe7d4a0 in Parrot_NCI_invoke (interp=0xee803100, pmc=0xee8afbac, \n    next=0xee7193d0) at ./src/pmc/nci.pmc:338\n#13 0xefc5719c in Parrot_callmethodcc_p_sc (cur_opcode=0xee7193c4, \n    interp=0xee803100) at src/ops/object.ops:74\n#14 0xefd6e3f4 in runops_slow_core (interp=0xee803100, runcore=0xee8ee5c0, \n    pc=0xee7193c4) at src/runcore/cores.c:848\n#15 0xefd6bae8 in runops_int (interp=0xee803100, offset=64)\n    at src/runcore/main.c:546\n#16 0xefd1c8bc in runops (interp=0xee803100, offs=64) at src/call/ops.c:99\n#17 0xefd1225c in Parrot_pcc_invoke_from_sig_object (interp=0xee803100, \n    sub_obj=0xee8b1d94, call_object=0xee8b1dbc) at src/call/pcc.c:297\n#18 0xefd123c4 in Parrot_pcc_invoke_sub_from_c_args (interp=0xee803100, \n    sub_obj=0xee8b1d94, sig=0xeff83ea0 \"P-\u003e\") at src/call/pcc.c:76\n#19 0xefceba2c in Parrot_runcode (interp=0xee803100, argc=1, argv=0xffffd870)\n    at src/embed.c:825\n#20 0xeff51a58 in imcc_run_pbc (interp=0xee803100, obj_file=0, \n    output_file=0x0, argc=1, argv=0xffffd870) at compilers/imcc/main.c:790\n#21 0xeff51e10 in imcc_run (interp=0xee803100, \n    sourcefile=0xffffe998 \"t/pmc/threads_14.pir\", argc=1, argv=0xffffd870)\n    at compilers/imcc/main.c:1073\n#22 0x01800be8 in main (argc=1, argv=0xffffd870) at src/main.c:60\n(gdb) c\nContinuing.\nin main:\n0\nok (equal)\n42\n\nBreakpoint 2, 0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n(gdb) where\n#0  0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n#1  0xefd65f30 in Parrot_dlclose (handle=0xeffed600)\n    at config/gen/platform/generic/dl.c:96\n#2  0xefe6e274 in Parrot_ParrotLibrary_destroy (interp=0xee803100, \n    pmc=0xee8e5ec4) at ./src/pmc/parrotlibrary.pmc:65\n#3  0xefd6a204 in Parrot_pmc_destroy (interp=0xee803100, pmc=0xee8e5ec4)\n    at src/pmc.c:116\n#4  0xefd092d0 in free_pmc_in_pool (interp=0xee803100, pool_unused=0xee84c150, \n    p=0xee8e5ec4) at src/gc/mark_sweep.c:602\n#5  0xefd083d8 in Parrot_gc_sweep_pool (interp=0xee803100, pool=0xee84c150)\n    at src/gc/mark_sweep.c:331\n#6  0xefd071f0 in gc_ms_finalize (interp=0xee803100, mem_pools=0xee807080)\n    at src/gc/gc_ms.c:232\n#7  0xefd07490 in gc_ms_mark_and_sweep (interp=0xee803100, flags=4)\n    at src/gc/gc_ms.c:161\n#8  0xefd03e74 in Parrot_gc_mark_and_sweep (interp=0xee803100, flags=4)\n    at src/gc/api.c:856\n#9  0xefd1aab8 in Parrot_really_destroy (interp=0xee803100, \n    exit_code_unused=0, arg_unused=0x0) at src/interp/inter_create.c:337\n#10 0xefcf1038 in Parrot_exit (interp=0xee803100, status=0) at src/exit.c:90\n#11 0x01800c04 in main (argc=1, argv=0xffffd870) at src/main.c:65\n(gdb) c\nContinuing.\nInvalid shared object handle 0xeffed600\n\nProgram exited normally.\n(gdb) \n```\n\nNote that the handle= value in the call preceding dlclose() is the same in the two cases.\n\nParrot should not be calling dlclose() with the same handle value in a row, without the second one being the result of a dlopen(), which isn't the case here.  OK, that's not proven by the above, but this one does:\n\n```\n(gdb) b dlopen\nBreakpoint 3 at 0xefff5d60\n(gdb) r\nStarting program: /usr/users/he/parrot/parrot t/pmc/threads_14.pir\n...\nBreakpoint 3, 0xefff5d60 in dlopen () from /usr/libexec/ld.elf_so\n(gdb) c\nContinuing.\nin thread:\n0\nok (equal)\n42\n\nBreakpoint 2, 0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n(gdb) c\nContinuing.\nin main:\n0\nok (equal)\n42\n\nBreakpoint 2, 0xefff594c in dlclose () from /usr/libexec/ld.elf_so\n(gdb) c\nContinuing.\nInvalid shared object handle 0xeffed600\n\nProgram exited normally.\n(gdb) \n```\n\nOriginally http://trac.parrot.org/parrot/ticket/1340 by heidnes","files":null}]}