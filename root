{"version":1,"ops":[{"type":1,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1326481402,"metadata":{"github-id":"MDU6SXNzdWUyODM1MTAw","github-url":"https://github.com/parrot/parrot/issues/240","origin":"github"},"title":"cond_eval in Parrot::Configure::Compiler is broken","message":"Using `NOT` in compound expressions leads to garbage results.\n\nAs an example, take the expression\n\n```\nfoo AND NOT bar\n```\n\nfor dummy configuration values `foo` and `bar` (or any other values which evaluate to false).\n\nAssuming my understanding of the code is correct, after the first iteration of `LOOP`, the parser state should be\n\n```\n$truth = 0;\n$prevtruth = 0;\n$key = ' NOT';\n$op = 'AND';\n```\n\nThe very first statement of the next iteration will set `$op` to `'NOT'`, and the code paths for `$op eq 'AND'` will never be reached.\n\nEffectively, the expression will be reduced to\n\n```\nNOT bar\n```\n\nIncidentally, the value of `$prevtruth` is never used, which strongly suggests that the underlying algorithm was never implemented completely or incorrectly refactored.","files":null}]}