{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1380772176,"metadata":{"github-id":"MDU6SXNzdWUyMDQzNjAyNg==","github-url":"https://github.com/parrot/parrot/issues/994","origin":"github"},"title":"Anonymous subclasses not as documented","message":"Reported by: zefram@fysh.org\n\nThe documentation for the subclass ops says\n\n\u003e $3, if available and not null, is the name of the new class--if\n\u003e not, the subclass is an anonymous subclass.\n\nIn fact, if $3 is an empty string or null PMC then an exception is generated:\n\n```\n$ cat t28a.pir\n.sub main :main\n        $P0 = newclass \"Foo\"\n        $P1 = null\n        $P2 = subclass $P0, $P1\n.end\n$ ./parrot t28a.pir\nNull PMC access in type()\ncurrent instr.: 'main' pc 5 (t28a.pir:4)\n```\n\n```\n$ cat t28b.pir\n.sub main :main\n        $P0 = newclass \"Foo\"\n        $P2 = subclass $P0, \"\"\n.end\n$ ./parrot t28b.pir\nFailed to set name for class.\ncurrent instr.: 'main' pc 3 (t28b.pir:3)\n```\n\nThe third option, the subclass op that doesn't take a third operand, seems to work.\n\nI expect this is a documentation bug, rather than an implementation bug.\n\n-zefram\n\n```\nSummary of my parrot 5.5.0 configuration:\n  configdate='Sun Sep 22 18:01:32 2013 GMT'\n  Platform:\n    osname=linux, archname=x86_64-linux-gnu-thread-multi\n```","files":null}]}