{"version":1,"ops":[{"type":1,"author":{"id":"76484e451c8adcf68d1a41e60ab7fdf43d921282"},"timestamp":1365932447,"metadata":{"github-id":"MDU6SXNzdWUxMzE2OTkwMQ==","github-url":"https://github.com/parrot/parrot/issues/956","origin":"github"},"title":"sprintf counts bytes when it should be counting characters","message":"Consider this code, which on my machine produces `16`aus output:\n\n```\n.sub main :main\n    $S0 = unicode:\"mäöüØ€p\"\n    $P0 = new 'ResizablePMCArray'\n    push $P0, $S0\n    $S1 = sprintf unicode:\"[%20s]\", $P0\n    $I0 = length $S1\n    say $I0\n.end\n```\n\nThe resulting string should be always at least 22 characters long, but here it produces only 16 chars, presumably because %20s counts the number of bytes when it should be counting the number of characters.\n\nIn Rakudo, this manifests as this bug: https://rt.perl.org/rt3/Ticket/Display.html?id=117547","files":null}]}