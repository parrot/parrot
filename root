{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1383419519,"metadata":{"github-id":"MDU6SXNzdWUyMjAwNzUzMw==","github-url":"https://github.com/parrot/parrot/issues/1023","origin":"github"},"title":"Threads cripple BigInt","message":"Reported by: zefram@fysh.org\n\nIf a BigInt is shared between threads, assigning from it across thread boundaries doesn't work:\n\n```\n$ cat t63.pir\n.sub foo\n        push_eh carp\n        say \"A\"\n        $P0 = get_global \"a\"\n        $P1 = new \"BigInt\"\n        assign $P1, $P0\n        say \"B\"\n        .return ()\n        carp:\n        pop_eh\n        $P1 = peek_exception\n        say $P1\n        .return ()\n.end\n.sub main :main\n        $P0 = new \"BigInt\"\n        assign $P0, \"7777777777777777777777777777777777777777\"\n        $P1 = new \"BigInt\"\n        assign $P1, $P0\n        set_global \"a\", $P0\n        .const \"Sub\" foo = \"foo\"\n        $P3 = new \"Task\", foo\n        schedule $P3\n        sleep 0.1\n.end\n```\n\n```\n$ ./parrot t63.pir\nA\nbigint_get_long: number too big\n```\n\n-zefram\n\n```\nSummary of my parrot 5.7.0 configuration:\n  configdate='Sat Oct  5 12:42:43 2013 GMT'\n  Platform:\n    osname=linux, archname=x86_64-linux-gnu-thread-multi\n    perl=/usr/bin/perl\n```","files":null}]}