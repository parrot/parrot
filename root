{"version":1,"ops":[{"type":1,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1254773024,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NDk0","github-url":"https://github.com/parrot/parrot/issues/297","origin":"github"},"title":"Unify VTABLE_invoke semantics between PMC types","message":"For most subs it simply sets up the environment for invocation, and selects the first opcode instruction of the sub as the next 'opcode_t _' for 'runops'. For NCI subs it actually invokes the function pointer. The disjoint means that NCI subs can't be invoked from C argument lists the same way as all the other subs (because the regular C argument list passing can only happen *after_ VTABLE_invoke has been called to set up the environment, but NCI requires the arguments to be passed _before_ the call to VTABLE_invoke).\n\nSee also the CallingConventionsTasklist\n\nOriginally http://trac.parrot.org/parrot/ticket/1094","files":null}]}