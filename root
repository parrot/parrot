{"version":1,"ops":[{"type":1,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1250347661,"metadata":{"github-id":"MDU6SXNzdWUyODQ4Njk4","github-url":"https://github.com/parrot/parrot/issues/490","origin":"github"},"title":"OpenGL examples not working on OS X","message":"```\n$ ./parrot examples/opengl/shapes.pir\nCould not find a suitable GL shared library!\ncurrent instr.: 'parrot;OpenGL;_load_lib_with_fallbacks' pc 172 (runtime/parrot/library/OpenGL.pir:176)\ncalled from Sub 'parrot;OpenGL;_load_opengl_libs' pc 57 (runtime/parrot/library/OpenGL.pir:117)\ncalled from Sub 'parrot;OpenGL;_opengl_init' pc 9 (runtime/parrot/library/OpenGL.pir:92)\ncalled from Sub 'init_glut' pc 131 (examples/opengl/shapes.pir:71)\ncalled from Sub 'main' pc 26 (examples/opengl/shapes.pir:40)\n```\n\nThis is after OpenGL is detected by Configure.pl :\n\n```\n$ perl Configure.pl \nParrot Version 1.4.0 Configure 2.0\nCopyright (C) 2001-2009, Parrot Foundation.\n\nHello, I'm Configure. My job is to poke and prod your system to figure out\nhow to build Parrot. The process is completely automated, unless you passed in\nthe `--ask' flag on the command line, in which case I'll prompt you for a few\npieces of info.\n\nSince you're running this program, you obviously have Perl 5--I'll be pulling\nsome defaults from its configuration.\n\ninit::manifest -      Check MANIFEST.....................................done.\ninit::defaults -      Set Configure's default values.....................done.\ninit::install -       Set up installation paths..........................done.\ninit::hints -         Load platform and local hints files................done.\ninit::headers -       Find header files distributed with Parrot..........done.\ninter::progs -        Determine what C compiler and linker to use........done.\ninter::make -         Is make installed...................................yes.\ninter::lex -          Is lex installed................................skipped.\ninter::yacc -         Is yacc installed...............................skipped.\nauto::gcc -           Is your C compiler actually gcc................yes, 4.0.\nauto::glibc -         Is GNU libc installed................................no.\nauto::backtrace -     Does libc have the backtrace* functions.............yes.\nauto::msvc -          Is your C compiler actually Visual C++..........skipped.\nauto::attributes -    Detect compiler attributes.........................done.\nauto::warnings -      Detect supported compiler warnings..........set for gcc.\ninit::optimize -      Enable optimization..................................no.\ninter::shlibs -       Determine flags for building shared libraries......done.\ninter::libparrot -    Should parrot link against a shared library.........yes.\ninter::charset -      Which charset files should be compiled in..........done.\ninter::encoding -     Which encoding files should be compiled in.........done.\ninter::types -        What types should Parrot use.......................done.\nauto::ops -           Which opcode files should be compiled in...........done.\nauto::pmc -           Which pmc files should be compiled in..............done.\nauto::alignptrs -     Determine your minimum pointer alignment........ 1 byte.\nauto::headers -       Probe for C headers................................done.\nauto::sizes -         Determine some sizes...............................done.\nauto::byteorder -     Compute native byteorder for wordsize.....little-endian.\nauto::va_ptr -        Test the type of va_ptr...........................stack.\nauto::format -        What formats should be used for sprintf............done.\nauto::isreg -         Does your C library have a working S_ISREG..........yes.\nauto::arch -          Determine CPU architecture and OS..................done.\nauto::jit -           Determine JIT capability.............................no.\nauto::cpu -           Generate CPU specific stuff........................done.\nauto::funcptr -       Does compiler support function pointer casts.......done.\nauto::cgoto -         Does your compiler support computed goto............yes.\nauto::inline -        Does your compiler support inline...................yes.\nauto::gc -            Determine allocator to use.........................done.\nauto::memalign -      Does your C library support memalign........already set.\nauto::signal -        Determine some signal stuff........................done.\nauto::socklen_t -     Determine whether there is socklen_t................yes.\nauto::neg_0 -         Determine whether negative zero can be printed......yes.\nauto::env -           Does your C library have setenv / unsetenv.........both.\nauto::thread -        Does your system has thread.........................yes.\nauto::gmp -           Does your platform support GMP......................yes.\nauto::readline -      Does your platform support readline.................yes.\nauto::gdbm -          Does your platform support gdbm....................done.\nauto::pcre -          Does your platform support pcre................yes, 7.7.\nauto::opengl -        Does your platform support OpenGL....yes, MacOSX_GLUT 5.\nauto::crypto -        Does your platform support crypto...........yes, 0.9.8h.\nauto::gettext -       Does your configuration include gettext.............yes.\nauto::snprintf -      Test snprintf......................................done.\nauto::perldoc -       Is perldoc installed................................yes.\nauto::pod2man -       Is pod2man installed................................yes.\nauto::ctags -         Is (exuberant) ctags installed......................yes.\nauto::revision -      Determine Parrot's revision......................r40554.\nauto::icu -           Is ICU installed....................................yes.\ngen::config_h -       Generate C headers.................................done.\ngen::core_pmcs -      Generate core pmc list.............................done.\ngen::crypto -         Generate Digest PMC files..........................done.\ngen::parrot_include - Generate runtime/parrot/include....................done.\ngen::opengl -         Generating OpenGL bindings.........................done.\ngen::call_list -      Generate NCI signature list........................done.\ngen::makefiles -      Generate makefiles and other build files...........done.\ngen::platform -       Move platform files into place.....................done.\ngen::config_pm -      Record configuration data for later retrieval......done.\nOkay, we're done!\n\nYou can now use `gmake' to build your Parrot.\nAfter that, you can use `gmake test' to run the test suite.\n\nHappy Hacking,\n        The Parrot Team\n```\n\nOriginally http://trac.parrot.org/parrot/ticket/924","files":null}]}