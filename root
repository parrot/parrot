{"version":1,"ops":[{"type":1,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1269168620,"metadata":{"github-id":"MDU6SXNzdWUyODQ4ODg5","github-url":"https://github.com/parrot/parrot/issues/680","origin":"github"},"title":"P6metaclass cannot derive from already-`register`ed PMC type","message":"Registering a PMC-proxy seems to be enough to prevent its use as a parent class.\n\n```\naustin@andLinux:~/kakapo$ cat test.nqp\nINIT {\n    P6metaclass.register('Hash');\n}\n\nclass Foo is Hash {\n    INIT { say(\"Hello, Foo\"); }\n}\naustin@andLinux:~/kakapo$ parrot-nqp test.nqp\nCould not build C3 linearization: ambiguous hierarchy\ncurrent instr.: 'parrot;P6metaclass;register' pc 532 (runtime/parrot/library/P6object.pir:408)\ncalled from Sub '' pc -1 ((unknown file):-1)\ncalled from Sub 'parrot;PCT;HLLCompiler;evalpmc' pc 972 (compilers/pct/src/PCT/HLLCompiler.pir:538)\n... call repeated 1 times\ncalled from Sub 'parrot;PCT;HLLCompiler;compile' pc 388 (compilers/pct/src/PCT/HLLCompiler.pir:287)\ncalled from Sub 'parrot;PCT;HLLCompiler;eval' pc 992 (compilers/pct/src/PCT/HLLCompiler.pir:556)\ncalled from Sub 'parrot;PCT;HLLCompiler;evalfiles' pc 1303 (compilers/pct/src/PCT/HLLCompiler.pir:707)\ncalled from Sub 'parrot;PCT;HLLCompiler;command_line' pc 1489 (compilers/pct/src/PCT/HLLCompiler.pir:794)\ncalled from Sub 'parrot;NQP;Compiler;main' pc -1 ((unknown file):-1)\n```\n\nI suspect (based on scanning a trace, but not based on ''poring over'' the trace) that the problem lies in the `get_parrotclass` method.\n\nThe '''major''' impact for me is interoperation between the Kakapo library, which registers a large collection of PMC types, and the PCT/PGE tools, which build many of their classes as subtypes of Hash.\n\nOriginally http://trac.parrot.org/parrot/ticket/1520","files":null}]}