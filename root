{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1381128425,"metadata":{"github-id":"MDU6SXNzdWUyMDU5NTAwMw==","github-url":"https://github.com/parrot/parrot/issues/1010","origin":"github"},"title":"Object PMC class can't be instantiated","message":"Reported by: zefram@fysh.org\n\nPDD 15 gives the impression that Object is a standard superclass for user classes, to the extent that one might expect user classes to have Object as a parent by default. In fact Object doesn't enter the inheritance hierarchy unless it is explicitly added, and furthermore inheriting from it actually makes a class unusable:\n\n```\n$ cat t49.pir \n.sub main :main\n       $P0 = subclass \"Object\", \"Foo\"\n       $P1 = new $P0\n.end\n```\n\n```\n$ ./parrot t49.pir \nObject must be created by a class.\ncurrent instr.: 'main' pc 4 (t49.pir:3)\n```\n\nObject cripples the init vtable methods, apparently with the intent that classes will create object PMCs by other means. But the instantiate vtable method of Class just uses the ordinary PMC creation mechanism, running straight into the crippled initialisation. $P0.\"new\"() isn't any better, as the named method on Class is just a wrapper for the instantiate vtable method.\n\nIf the class is defined without mentioning Object as a parent ('newclass \"Foo\"' instead of 'subclass \"Object\", \"Foo\"') then object creation works fine. Evidently the object doesn't get the Object vtable in this case, but I think it must be getting the Object PMC layout.\n\n-zefram\n\n```\nSummary of my parrot 5.7.0 configuration:\n configdate='Sat Oct  5 12:42:43 2013 GMT'\n Platform:\n   osname=linux, archname=x86_64-linux-gnu-thread-multi\n   perl=/usr/bin/perl\n```","files":null}]}