{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1353633411,"metadata":{"github-id":"MDU6SXNzdWU4NTkwNTY1","github-url":"https://github.com/parrot/parrot/issues/870","origin":"github"},"title":"Export pmc types in header","message":"pmc's need to know more about each other.\n\n`pmc2c` generates a library file with dynamically generated pmc types as return values for `Parrot_pmc_register_new_type(interp, classname)`\n\nThe core pmc types are globals as `enum_class_Classname`, but a dynpmc can only look at it's own `vtable-\u003ebase_type` as reflection method, and a static pmc in a library also.\n\nWhat is missing is the export of the return value in the generated library header file, similar to the `enum_class_Classname` variables.\n\nI propose as name prefix `dynpmc_class_Classname`.\nImplemented in Parrot::Pmc2c::UtilFunctions::dynext_load_code()\n\nProblem:\nnqplexpad.pmc needs to know if the lexinfo attribute holds a NQPLexInfo or a \nProxy or a Parrot LexInfo class.\nThe generated types are in random order, generated by `each %classes`.\nnqp_group.h needs to export these dynpmc_class_\\* types.\n\nWork is done in the branch `rurban/gh870-pmc_class`","files":null}]}