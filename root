{"version":1,"ops":[{"type":1,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1316494624,"metadata":{"github-id":"MDU6SXNzdWUyODQ4ODA0","github-url":"https://github.com/parrot/parrot/issues/596","origin":"github"},"title":"tailcall to Class.new fails with overriden init","message":"Looking at winxed issue 7 in github:\n\nhttps://github.com/NotFound/winxed/issues/7\n\nI've found that the problem lies in parrot, as this pure pir code shows:\n\n```\n.namespace ['Foo']\n\n.sub 'init' :method :vtable\n    say 'Foo.init'\n.end\n\n.sub 'init_pmc' :method :vtable\n    .param pmc value\n    say 'Foo.init'\n.end\n\n.sub hello :method\n    say 'Foo.hello'\n.end\n\n.sub attrs1\n    .param pmc clazz\n    say 'attrs1'\n    .local pmc at\n    at = clazz.'attributes'()\n    .return(at)\n.end\n\n.sub attrs2\n    .param pmc clazz\n    say 'attrs2'\n    .tailcall clazz.'attributes'()\n.end\n\n.sub newinstance1\n    .param pmc clazz\n    say 'newinstance1'\n    .local pmc instance\n    instance = clazz.'new'()\n    .return(instance)\n.end\n\n.sub newinstance2\n    .param pmc clazz\n    say 'newinstance2'\n    .tailcall clazz.'new'()\n.end\n\n.sub main :main\n    .local pmc clazz, at1, at2, instance1, instance2\n    newclass clazz, ['Foo']\n    addattribute clazz, 'bar'\n\n    null at1\n    at1 = attrs1(clazz)\n    at1 = at1['bar']\n    at1 = at1['name']\n    say at1\n    null instance1\n    instance1 = newinstance1(clazz)\n    instance1.'hello'()\n\n    null at2\n    at2 = attrs2(clazz)\n    at2 = at2['bar']\n    at2 = at2['name']\n    say at2\n    null instance2\n    instance2 = newinstance2(clazz)\n    instance2.'hello'()\n\n.end\n```\n\nTailcall to other method in Class (attributes in this example) works, but tailcall to new fails, it gets null instead of the newly created instance.\n\nIf the class does not override the 'init' vtable, it works.\n\nThe same happens with init_pmc tailcalling new with non empty argument list.\n\nOriginally http://trac.parrot.org/parrot/ticket/2193","files":null}]}