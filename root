{"version":1,"ops":[{"type":1,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1266403675,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NzQ2","github-url":"https://github.com/parrot/parrot/issues/538","origin":"github"},"title":"Improve \u003cnull\u003e handling in Test::More.pir","message":"I had occasion to pass some null values to Test::More's `is()` multisub, and got an unexpected fault - NULL pmc access, etc.\n\nBacek mentioned in the commit comments to cs# [43660] that discussion was needed on how Test::More handles null, so I have created this ticket to host that discussion.\n\nTo get started, I am committing a patch (cs# [44058]) that adds `is_null` as a test assertion, as well as adding support for null values to the various `is()` multisub elements.\n\nI think that \"null happens\", which is especially vexing when calling from NQP to PIR. So I think that any assertion that accepts a PMC type must support the possibility that the PMC type will be null.\n\nI have implemented \"null equivalence\" -- that is, null==null, for the assertions. I know this can be argued both ways.\n\nObvious leftovers include the creation of `isnt_null` and adding null support to the `isnt` assertions, as well as devising a null policy for the other assertions. The `is_deeply` seems to do something with null, but that's about it.\n\nOriginally http://trac.parrot.org/parrot/ticket/1453","files":null}]}