{"version":1,"ops":[{"type":1,"author":{"id":"e6ebaecce565c58b3e91ddb32c09e93c5f646822"},"timestamp":1330978162,"metadata":{"github-id":"MDU6SXNzdWUzNTEyOTMy","github-url":"https://github.com/parrot/parrot/issues/729","origin":"github"},"title":"Memory leak with hop_buckets in ops","message":"compilers/opsc/src/Ops/Trans/C.pm creates boilerplate code for a number of ops files:\n\nsrc/dynoplibs/bit_ops.c\nsrc/dynoplibs/debug_ops.c\nsrc/dynoplibs/io_ops.c\nsrc/dynoplibs/math_ops.c\nsrc/dynoplibs/obscure_ops.c\nsrc/dynoplibs/sys_ops.c\nsrc/dynoplibs/trans_ops.c\nsrc/ops/core_ops.c\n\nIn each of these, there's a `static HOP *hop_buckets` at the top of each file.  Then, in `hop_init()` an automatic variable `hop_buckets` gets big chunks of memory allocated.  Then in `hop_deinit()`, the static `hop_buckets` is freed, which does nothing because the static has never been set.\n\nThanks to GCC's -Wshadow argument for finding the local `hop_buckets` that shadows the static `hop_buckets`.","files":null}]}