{"version":1,"ops":[{"type":1,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1255491007,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NTAx","github-url":"https://github.com/parrot/parrot/issues/304","origin":"github"},"title":"Subs in \"built-in PMC\" namespaces are treated as PMC methods","message":"A sub that is declared in a namespace that matches the name of a builtin PMC is automatically dispatched as a method:\n\n```\n$ cat x.pir\n.sub main\n    $P0 = new 'Integer'\n    $P0.'foo'()\n.end\n\n.namespace ['Integer']\n\n.sub 'foo'\n    say 'foo'\n.end\n\n$ ./parrot x.pir\nfoo\n$ \n```\n\nWhile this _does_ make it possible to override builtin methods,\nit also makes it impossible to write \"class methods\" that translate behaviors, since the presence or absence of the `:method` attribute on the sub is ignored.\n\nThis behavior does not happen with non-builtin classes:\n\n```\n$ cat y.pir\n.sub main\n    $P1 = newclass ['XYZ']\n    $P0 = new ['XYZ']\n    $P0.'foo'()\n.end\n\n.namespace ['XYZ']\n\n.sub 'foo'\n    say 'foo'\n.end\n\n$ ./parrot y.pir\nMethod 'foo' not found for invocant of class 'XYZ'\ncurrent instr.: 'main' pc 11 (y.pir:4)\n$ \n```\n\nOriginally http://trac.parrot.org/parrot/ticket/1108","files":null}]}