{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1381168210,"metadata":{"github-id":"MDU6SXNzdWUyMDYyNzQ0Ng==","github-url":"https://github.com/parrot/parrot/issues/1012","origin":"github"},"title":"\"print\" method API inconsistency","message":"Reported by: zefram@fysh.org\n\nPDD 22 indicates that the \"print\" method on an I/O handle PMC is meant to return one value, a status object. In fact, while the method on FileHandle does return one value, the corresponding method on StringHandle returns _two_ values:\n\n```\n$ cat t50.pir \n.sub main :main\n       $P0 = getstdout\n       $S0 = typeof $P0\n       say $S0\n       ($P1 :slurpy) = $P0.\"print\"(\"(foo)\\n\")\n       $I0 = $P1\n       say $I0\n       $P2 = new \"StringHandle\"\n       $S1 = typeof $P2\n       say $S1\n       $P2.\"open\"(\"\u003cfake\u003e\", \"rw\")\n       ($P3 :slurpy) = $P2.\"print\"(\"(foo)\\n\")\n       $I1 = $P3\n       say $I1\n.end\n```\n\n```\n$ ./parrot t50.pir \nFileHandle\n(foo)\n1\nStringHandle\n2\n```\n\nThere also doesn't seem to be any consistency in what the values returned are. On FileHandle, the returned value is an integer, the number of characters printed. On StringHandle, the first return value is the StringHandle invocant, and the second return value is the string being printed. These are both inconsistent with each other, and inconsistent with PDD 22's promise of a status object.\n\n-zefram\n\n```\nSummary of my parrot 5.7.0 configuration:\n configdate='Sat Oct  5 12:42:43 2013 GMT'\n Platform:\n   osname=linux, archname=x86_64-linux-gnu-thread-multi\n   perl=/usr/bin/perl\n```","files":null}]}