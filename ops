{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1264852384,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NjE=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3503861"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/1046\" title=\"bug: Configure.pl allows sizeof(INTVAL) != sizeof(void *), but parrot requires ... (new)\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n See \u003ca   href=\"http://rt.perl.org/rt3/Ticket/Display.html?id=56484\"\u003e\u003cspan class=\"icon\"\u003eÂ \u003c/span\u003eOriginal RT\u003c/a\u003e\n for more details.\n On Linux/x86, the problem can be reproduced by running\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n {{{\n perl Configure.pl --intval=\"long long int\" --opcode=\"long long int\"\n }}}\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI reproduced this tonight.  \u003ci\u003eConfigure.pl\u003c/i\u003e told me:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003eauto::sizes -         Determine some sizes...\nHmm, I see your chosen INTVAL isn't the same size as your pointers.\nParrot should still compile and run, but you may see a ton of warnings.\n............................done.\n\u003c/pre\u003e\u003cp\u003e\n... and I did indeed get a ton of warnings.  But then Parrot failed to build:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e./parrot -o runtime/parrot/library/PCT/HLLCompiler.pbc\n  compilers/pct/src/PCT/HLLCompiler.pir\n/usr/local/bin/perl -e \"\" \u0026gt; compilers/pge/PGE/builtins_gen.pir\n./parrot -o runtime/parrot/library/PGE.pbc compilers/pge/PGE.pir\n./parrot runtime/parrot/library/PGE/Perl6Grammar.pir\n  --output=compilers/pge/PGE/builtins_gen.pir compilers/pge/PGE/builtins.pg\nmake: **\\* [runtime/parrot/library/PGE.pbc] Segmentation fault\nmake: **\\* Deleting file `runtime/parrot/library/PGE.pbc'\nFinished\n\u003c/pre\u003e\u003cp\u003e\n(Of course, the build failure may have been due to the inappropriateness of those command-line options for my box.)\n\u003c/p\u003e\n\n\u003cp\u003e\nSo, would the proper course of action be to require that \u003ctt\u003esizeof(INTVAL) == sizeof(void *)\u003c/tt\u003e?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1276589081,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NjI=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3503862"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1046#comment:1\" title=\"Comment 1 for Ticket #1046\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Replying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/1046\" title=\"bug: Configure.pl allows sizeof(INTVAL) != sizeof(void *), but parrot requires ... (new)\"\u003edoughera\u003c/a\u003e:\n [snip]\n So, would the proper course of action be to require that \u003ctt\u003esizeof(INTVAL) == sizeof(void *)\u003c/tt\u003e?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nCan anyone shed any light on the issues raised in this ticket?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1276635034,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NjM=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3503863"},"message":"\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Can anyone shed any light on the issues raised in this ticket?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI suspect it could go either way.  Either Configure.pl could be altered to require those sizes to be the same, or parrot could be altered to allow them to be different.  I suspect sentiment leans towards altering Configure.pl, but I think it would be wise to check whether sizeof(long) == sizeof(void *) on all target platforms (including Win64) before proceeding.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bbd4d30061de10095711e4b50c199671231129a5"},"timestamp":1276652710,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NjQ=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3503864"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1046#comment:3\" title=\"Comment 3 for Ticket #1046\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Can anyone shed any light on the issues raised in this ticket?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n I suspect it could go either way.  Either Configure.pl could be altered to require those sizes to be the same, or parrot could be altered to allow them to be different.  I suspect sentiment leans towards altering Configure.pl, but I think it would be wise to check whether sizeof(long) == sizeof(void *) on all target platforms (including Win64) before proceeding.\n\u003c/p\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI agree that it can go either way and I think we should put some thought into making sure we pick the right way now, so we don't have to go back later. As an extra data-point, this is what auto::sizes has to say about this.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003eHmm, I see your chosen INTVAL isn't the same size as your pointers.  Parrot\nshould still compile and run, but you may see a ton of warnings.\n\u003c/pre\u003e\u003cp\u003e\nIt's quite easy to miss in the midst of the Configure output, but to me, indicates the original intent clearly. Is this something we still want to support?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1287292410,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NjU=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3503865"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1046#comment:3\" title=\"Comment 3 for Ticket #1046\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n I suspect it could go either way.  Either Configure.pl could be altered to require those sizes to be the same, or parrot could be altered to allow them to be different.  I suspect sentiment leans towards altering Configure.pl, but I think it would be wise to check whether sizeof(long) == sizeof(void *) on all target platforms (including Win64) before proceeding.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nAny win64 users who could comment here?\n\u003c/p\u003e\n\n\u003cp\u003e\nThanks.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1327148659,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTU5MTQ=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-3595914"},"message":"On Win64, we have\n\n```\nsizeof (int) == sizeof (long) != sizeof (void *)\nsizeof (long long) == sizeof (void *)\n```\n\nI recently sent pull request #242 to determine the pointer-sized integer type in `auto::memalign`, but it could easily be moved to `auto::sizes`","files":null},{"type":3,"author":{"id":"3771fd696fba286f6d0b9544dc89da489f0c740e"},"timestamp":1338546816,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNTc2NzE=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-6057671"},"message":"Pull Request #704 has been merged, close this issue.","files":null},{"type":4,"author":{"id":"3771fd696fba286f6d0b9544dc89da489f0c740e"},"timestamp":1338546871,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTY3MzU3NzY="},"status":2},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1338587751,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYwNzE2Mzg=","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-6071638"},"message":"Andy Dougherty wrote on parrot-dev on June 1 2012:\n\n\"[This issue] should be reopened.  The sample command line given in that issue:\n\n```\nperl Configure.pl --intval=\"long long int\" --opcode=\"long long int\"\n```\n\nstill fails to produce a working parrot on a system where \n`sizeof(long long) \u003e sizeof(void *)`.\"\n\nAndy, assuming that we addressed this issue, do you have a system where you could demonstrate that we have achieved a \"working parrot\"?  What type of system would that be?\n\nThank you very much.\nJim Keenan","files":null},{"type":4,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1338587762,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQxNjc4OTY5Mg=="},"status":1},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416743262,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTE1MjM0","github-url":"https://github.com/parrot/parrot/issues/642#issuecomment-64115234"},"message":"Follow fixes done in #1145 with the right ptr casts.\nOn ptr truncation we need to die in auto::sizes, as nci, pointer and more PMCs need to store function pointers, and esp. need to pass them in registers.\nBut when we have enough room for pointers in an INTVAL, we can continue and all tests pass.","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416743262,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTk3MzA2MTAw"},"status":2}]}