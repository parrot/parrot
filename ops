{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1412489297,"metadata":{"github-id":"MDU6SXNzdWU0NDkwNjE2NQ==","github-url":"https://github.com/parrot/parrot/issues/1093","origin":"github"},"title":"set PIO_NR_OPEN from 256 to 3","message":"PIO_NR_OPEN is now the number of statically allocated interpreter std handles for stdin, stdout and stderr only. It is only used in api.c:\n\n```\nParrot_io_stdhandle(PARROT_INTERP, INTVAL fileno, ARGIN_NULLOK(PMC *newhandle))\n{\n    ASSERT_ARGS(Parrot_io_stdhandle)\n    PMC * result = PMCNULL;\n    if (fileno == PIO_STDIN_FILENO || fileno == PIO_STDOUT_FILENO ||\n            fileno == PIO_STDERR_FILENO) {\n        result = interp-\u003epiodata-\u003etable[fileno];\n        if (! PMC_IS_NULL(newhandle))\n            interp-\u003epiodata-\u003etable[fileno] = newhandle;\n    }\n    return result;\n}\n```\n\nand\n\n```\nsrc/io/io_private.h:#define _PIO_STDIN(i)   ((i)-\u003epiodata-\u003etable[PIO_STDIN_FILENO])\nsrc/io/io_private.h:#define _PIO_STDOUT(i)  ((i)-\u003epiodata-\u003etable[PIO_STDOUT_FILENO])\nsrc/io/io_private.h:#define _PIO_STDERR(i)  ((i)-\u003epiodata-\u003etable[PIO_STDERR_FILENO])\n```\n\nthus can be safely changed from 256 to 3, thus a small memory optimization, 253 less words for each interpreter.","files":null}]}