{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1302988114,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTM=","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-3502553"},"message":"\u003cp\u003e\nSome relevant links:\n\u003c/p\u003e\n\n\u003cp\u003e\nTT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/1829\" title=\"bug: Recent changes impeded building and testing on smaller boxes (closed: fixed)\"\u003e#1829\u003c/a\u003e -- particularly last 3 or 4 posts\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ca   href=\"http://stackoverflow.com/questions/583736/determine-physical-mem-size-programmatically-on-osx\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ea stackoverflow discussion\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ca   href=\"http://www.mail-archive.com/checkin-list@monetdb.org/msg03887.html\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ea monetdb discussion\u003c/a\u003e\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1302988225,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTQ=","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-3502554"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/2090\" title=\"bug: Parrot underestimates memory on OS X (new)\"\u003ebenabik\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Does anyone know what version of Darwin MEMSIZE was introduced in?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI haven't been able to find this out.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Perhaps we should check if the HW_MEMSIZE macro exists and only use PHYSMEM if it doesn't?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nCan you prepare a patch?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1302991443,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTU=","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-3502555"},"message":"There is a possibility that we could revert to HW_MEMSIZE.\n\nOn Darwin/PPC, I made this change:\n\n```\n$ git diff\ndiff --git a/src/platform/darwin/sysmem.c b/src/platform/darwin/sysmem.c\nindex cb2f0f4..6b05ca3 100644\n--- a/src/platform/darwin/sysmem.c\n+++ b/src/platform/darwin/sysmem.c\n@@ -45,7 +45,8 @@ Parrot_sysmem_amount(PARROT_INTERP)\n     char         *err_msg;\n     unsigned long length = sizeof (memsize) ;\n-    int selection[2] = { CTL_HW, HW_PHYSMEM } ;\n+/*    int selection[2] = { CTL_HW, HW_PHYSMEM } ; */\n+    int selection[2] = { CTL_HW, HW_MEMSIZE } ;\n     err = sysctl(selection, 2, \u0026memsize, \u0026length, NULL, 0) ;\n```\n\nI was able to build and test, failing only the same test in \u003ci\u003et/src/extend_vtable.t\u003c/i\u003e that has been failing regularly (cf. TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/2084\" title=\"bug: t/src/extend_vtable.t fails all tests with g++ build (closed: fixed)\"\u003e#2084\u003c/a\u003e).\n\nI didn't time these tests, nor did I attempt to build Rakudo.  We'd need results on Darwin/i386 on more recent versions of OS X before reverting.\n\nI can't keep track of which GC system we're using as default these days, but perhaps changes we've made elsewhere in Parrot since last October now permit us to use HW_MEMSIZE.\n\nThank you very much.\nkid51","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1305508140,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTY=","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-3502556"},"message":"Replying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/2090#comment:3\" title=\"Comment 3 for Ticket #2090\"\u003ejkeenan\u003c/a\u003e:\n\n\u003cblockquote class=\"citation\"\u003e\n There is a possibility that we could revert to HW_MEMSIZE.\n\u003c/blockquote\u003e\n\n\nThat possibility is now dubious.  Testing with \u003ctt\u003eHW_MEMSIZE\u003c/tt\u003e today, \u003ci\u003emake\u003c/i\u003e failed with this error:\n\n```\n./miniparrot -Iruntime/parrot/include config_lib.pir \u0026gt;\n  runtime/parrot/include/config.fpmc\nsrc/string/api.c:653: failed assertion 'encoding'\nmake: *** [runtime/parrot/include/config.fpmc] Error 134\n/usr/local/bin/perl tools/build/parrot_config_c.pl \u0026gt; \\\n    src/parrot_config.c\n'runtime/parrot/include/config.fpmc' is truncated.\n  Remove it and rerun make\nmake: *** [src/parrot_config.c] Error 255\n```\n\nReverting to \u003ctt\u003eHW_PHYSMEM\u003c/tt\u003e avoids this build error.\nkid51","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1355293400,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMjc4MjE3","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-11278217"},"message":"Can anybody comment on the status of this issue?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1358785545,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyNTA1MDU0","github-url":"https://github.com/parrot/parrot/issues/268#issuecomment-12505054"},"message":"I'll add a HW_MEMSIZE check.","files":null}]}