{"version":1,"ops":[{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1266622953,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0OTU=","github-url":"https://github.com/parrot/parrot/issues/531#issuecomment-3503495"},"message":"\u003cpre class=\"wiki\"\u003eOn Tue, Feb 16, 2010 at 01:10:16AM -0000, Parrot wrote:\n\u0026gt;  Presently, the throw opcode creates and sets a resume continuation on the\n\u0026gt;  exception being thrown.\n\u0026gt;\n\u0026gt;  Since 'resume' is an attribute of the Exception, throw should check first\n\u0026gt;  for a preconfigured continuation, and if one exists should preserve it.\nOOC, how does this differ from 'rethrow'?\nPm\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284714142,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0OTY=","github-url":"https://github.com/parrot/parrot/issues/531#issuecomment-3503496"},"message":"\u003cp\u003e\nAustin,\n\u003c/p\u003e\n\n\u003cp\u003e\nCan you respond to pmichaud's query or indicate whether this is still a concern?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1319485783,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0OTc=","github-url":"https://github.com/parrot/parrot/issues/531#issuecomment-3503497"},"message":"\u003cp\u003e\nJust because rethrow happens to have a certain signature and semantic now doesn't mean that rethrow will always be usable as a \"throw plus a new resume continuation\" in the future. In fact, rethrow doesn't have exactly that semantic right now, though the differences are subtle.\n\u003c/p\u003e\n\n\u003cp\u003e\nI would much rather call a throw a throw, and call a rethrow a rethrow, and not rely on using one op to perform the other operation just because it happens to work that way in a particular revision of Parrot.\n\u003c/p\u003e\n\n\u003cp\u003e\nAdding a new variant of the throw op which takes a resume continuation would be a good experiment to run. I think the current throw op automatically sets the resume continuation in the exception, so we need to evaluate that behavior to see if it's what we really want. For instance, if an exception already has a resume continuation set, maybe we don't want to blindly overwrite that.\n\u003c/p\u003e","files":null}]}