{"version":1,"ops":[{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714007,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MzY=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503736"},"message":"\u003cp\u003e\nNothing has happened on this ticket since it was introduced in 2006. Do\nwe need MIN/MAX macros? If so, why, or where do we expect them to be used?\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714026,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Mzc=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503737"},"message":"\u003cp\u003e\nDefining them on a 2's complement machine would be easy as pie:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e\n#define MAX_UINTVAL (UINTVAL)((INTVAL)-1)\n#define MIN_UINTVAL (UINTVAL)0\n#define MAX_INTVAL (((INTVAL)-1) / 2)\n#define MIN_INTVAL ((~MAX_INTVAL) + 1)\n\u003c/pre\u003e\u003cp\u003e\n...and repeat for any other integral typedefs we have.\n\u003c/p\u003e\n\n\u003cp\u003e\nI do we even support any architecture that isn't 2's complement-based?\n\u003c/p\u003e\n\n\u003cp\u003e\n--Andrew Whitworth\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714046,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Mzg=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503738"},"message":"\u003cp\u003e\n+1 to apply and resolve.\n\u003c/p\u003e\n\n\u003cp\u003e\ncotto\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714070,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Mzk=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503739"},"message":"\u003cp\u003e\nI think that that would be better defined in terms of ~0\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n #define MIN_UINTVAL (UINTVAL)0\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThis one, I think is correct.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n #define MAX_INTVAL (((INTVAL)-1) / 2)\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nEh? -1/2 is 0 for signed integer arithmetic.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n #define MIN_INTVAL ((~MAX_INTVAL) + 1)\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nEven with the correct definition of MAX_INTVAL, that's going to be out by 1.\nFor a two's complement system, it doesn't need the + 1.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe logic that Perl 5 uses to do this is described here:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003ehttp://perl5.git.perl.org/perl.git/blob/HEAD:/perl.h#l2178\n\u003c/pre\u003e\u003cp\u003e\nI suspect it's portable.\n\u003c/p\u003e\n\n\u003cp\u003e\nNicholas Clark\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714083,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NDA=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503740"},"message":"\u003cp\u003e\nThe current intended names for that macros are PARROT_INTVAL_MAX,\nPARROT_INTVAL_MIN, and so on.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe last work in this matter is: include/parrot/platform_limits.h\n\u003c/p\u003e\n\n\u003cp\u003e\n--\nSalu2\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714099,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NDE=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503741"},"message":"\u003cp\u003e\nIt looks like those comments in platform_limits.h are out-of-place.\nPARROT_INTVAL_MIN and PARROT_INTVAL_MAX are defined in\ninclude/parrot/config.h, although the definition may not be as flexible\nas the macros in perl.h that Nicholas mentioned. It might be beneficial\nto incorporate them into what we're currently using, but I'm not a good\njudge of that.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe definitions in parrot's config.h come, as one would expect, from\nconfig/auto/format.pm. (TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/530\" title=\"bug: Failure of atan2 in jit core - ref TT #38 (closed: wontfix)\"\u003e#530\u003c/a\u003e addresses this.) It should be pretty\nsimple to add the code needed to figure out which macros to use for the\nmissing min/max values. The min/max are currently defined for INTVAL\nand FLOATVAL, so definitions are needed for UINTVAL, HUGEINTVAL,\nUHUGEINTVAL and HUGEFLOATVAL. Once those are in place, this ticket can\ngo away.\n\u003c/p\u003e\n\n\u003cp\u003e\ncotto\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257714111,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NDI=","github-url":"https://github.com/parrot/parrot/issues/612#issuecomment-3503742"},"message":"\u003cp\u003e\nplatform_limits.h is intended for platforms where there is no limits.h\nand the macros must be taken from another include file, or explicitly\ndefined. Also, when someone wants to build with different integer\ntypes and the detection of appropriate limit values for that types\nfails.\n\u003c/p\u003e\n\n\u003cp\u003e\nconfig.h conditionally does his own definitions after including\nplatform_limits. If that definitions do the right thing\nplatform_limits does not need to do nothing. Consequently, the generic\nversion does nothing.\n\u003c/p\u003e\n\n\u003cp\u003e\n--\nSalu2\n\u003c/p\u003e","files":null}]}