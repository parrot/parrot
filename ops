{"version":1,"ops":[{"type":1,"author":{"id":"c16eb74d82b49d6895509951834e12a05587f8f1"},"timestamp":1281061703,"metadata":{"github-id":"MDU6SXNzdWUyODQ4ODM2","github-url":"https://github.com/parrot/parrot/issues/627","origin":"github"},"title":"Assumption made about buffer header alignment","message":"Various memory management routines (e.g., `gc_ms_allocate_buffer_storage`) assume that the size of a buffer header is equal to the size of a pointer. This is probably true throughout the system as it stands, but those same routines take pains not to make that assumption in other places.\n\nHere is a line from the above routine:\n\n```\n    Buffer_buflen(buffer)   = new_size - sizeof (void *);\n```\n\nIf the size of a pointer is less than the buffer header size, the value stored in `buflen` will be too big. `new_size` includes the entire size of the buffer header, which may include alignment padding in addition to the pointer.\n\nOriginally http://trac.parrot.org/parrot/ticket/1731","files":null}]}