{"version":1,"ops":[{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1294991236,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODQ=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503584"},"message":"\u003cp\u003e\nFirst off, I can't imagine that this works at all. Looking through the code, it makes pervasive use of the Parrot_Sub_attributes* structure and the PMC_get_sub() macro. This is why derived types like Closure and Coroutine would probably not work well, and why other user-defined subclasses would stand no chance in hell of working.\n\u003c/p\u003e\n\n\u003cp\u003e\nRather than making this feature work in IMCC/PIR at this point, I suggest we rip it out instead. We remove a feature that  I suspect people aren't using now (because I suspect it's unusable), and we clean up IMCC just a tinsey-weensy little bit.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1295006994,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODU=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503585"},"message":"\u003cp\u003e\nThe reason this was discovered was because plobsing mentioned it in response to a question by jnthn about how to use a non-Sub invokable PMC in place of PIR-level subs without an hllmap.  I also doubt that this would be a good solution for him in its current state, but it might be worth cleaning up depending on how important it is to his work.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306055968,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODY=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503586"},"message":"\u003cp\u003e\nwhiteknight, cotto:\n\u003c/p\u003e\n\n\u003cp\u003e\nDo we know what we want to do here?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1306188343,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODc=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503587"},"message":"\u003cp\u003e\nI strongly suggest we deprecate it. The current implementation through IMCC is inextricably linked to the internals of the Sub PMC, and changing that situation would almost be a larger task than removing and replacing IMCC completely.\n\u003c/p\u003e\n\n\u003cp\u003e\nIt's worth noting that at the PBC level this should be very possible to do. However, IMCC makes it almost impossible to do as-is. An alternate assembler (or an alternate tool for generating PBC without PIR/IMCC) should give us new possibilities in this area.\n\u003c/p\u003e\n\n\u003cp\u003e\nI suggest we deprecate this feature, but keep it on the roadmap so we can keep it in mind when we work on new things.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1306203425,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODg=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503588"},"message":"\u003cpre class=\"wiki\"\u003eOn Mon, May 23, 2011 at 03:05:43PM -0000, Parrot wrote:\n\u0026gt; #1962: :instanceof('Foo') is untested\n\u0026gt; Comment(by whiteknight):\n\u0026gt;\n\u0026gt;  I strongly suggest we deprecate it. The current implementation through\n\u0026gt;  IMCC is inextricably linked to the internals of the Sub PMC, and changing\n\u0026gt;  that situation would almost be a larger task than removing and replacing\n\u0026gt;  IMCC completely.\nFWIW, as far as I know :instanceof has always been listed as an\n\"experimental feature\" (pdd19), so deprecation might not even be\nneeded.  It was implemented as an early attempt at creating\nHLL-derived Sub types (needed by Rakudo) that quickly failed, but\nthe code was never removed.\n\u0026gt;  It's worth noting that at the PBC level this should be very possible to\n\u0026gt;  do. However, IMCC makes it almost impossible to do as-is. An alternate\n\u0026gt;  assembler (or an alternate tool for generating PBC without PIR/IMCC)\n\u0026gt;  should give us new possibilities in this area.\nFrom Rakudo's perspective, the problem with :instanceof was that it\ncould only be used with PMCs (which had to exist and be loaded at\ncompilation time); it could not be used to create Subs that were\ndefined in Parrot's Object/Class type hierarchy (e.g., as a HLL-derived\ntype).\nPm\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1306232880,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM1ODk=","github-url":"https://github.com/parrot/parrot/issues/560#issuecomment-3503589"},"message":"\u003cp\u003e\nI also don't think that even a deprecation notice is necessary for an explicitly experimental and fairly broken feature like this.  As far as I'm concerned, a branch removing :instanceof could be merged into master today, if such a branch existed.\n\u003c/p\u003e","files":null}]}