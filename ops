{"version":1,"ops":[{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393477617,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDk3Mjg5Nzcw"},"added":["Pri-major"],"removed":[]},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393477617,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDk3Mjg5Nzcx"},"added":["Component-imcc"],"removed":[]},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393514698,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM2MjUyODI5","github-url":"https://github.com/parrot/parrot/issues/1037#issuecomment-36252829"},"message":"```\nm -s parrot_old \u0026\u0026 ./parrot_old -d61 -O1 -o t/pmc/nci_39-O1.pbc t/pmc/nci_39.pir\n\nopt1 0x123b3f0 set sleep_cnt, 0\n  =\u003e 0x123d210 null sleep_cnt\nopt1 0x123b660 add sleep_cnt, 1\n  =\u003e 0x123b3f0 inc sleep_cnt\nloop LOOP -\u003e FINISHED converted to post-test, added label LOOP_post1\nblock 1 label LOOP deleted\n```\n\nIt is doing a `branch_cond_loop_swap`, converts conditional loops to post-test\n\n./pbc_disassemble -b pure pbc vs -O1 pbc =\u003e\n\n```\n    set_args_pc PMC_CONST(1), P3, P5\n    invokecc_p P2\n    get_results_pc PMC_CONST(0)\n-   set_i_ic I0,0\n-L3:    add_i_ic I0,1\n+   null_i I0\n+   inc_i I0\n    get_global_p_sc P4,\"cb_done\"\n    if_p_ic P4,L1\n-   lt_ic_i_ic 10000,I0,L2\n-   branch_ic L3\n+L3:    lt_ic_i_ic 10000,I0,L2\n+   inc_i I0\n+   get_global_p_sc P4,\"cb_done\"\n+   unless_p_ic P4,L3\n L1:    print_sc \"the callback has run\"\n    end \n L2:    print_sc \"the callback didnt r\"\n```","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393520140,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM2MjYzNzA4","github-url":"https://github.com/parrot/parrot/issues/1037#issuecomment-36263708"},"message":"branch_cond_loop_swap essentially converts in t/pmc/nci_39.pir\n\n```\n    .local int sleep_cnt\n    sleep_cnt = 0\nLOOP:\n    sleep_cnt += 1\n    .local pmc callback_has_run\n    callback_has_run = get_global \"cb_done\"\n    if callback_has_run goto FINISHED\n    if sleep_cnt \u003e 10000 goto ERROR\n    goto LOOP\nFINISHED:\n    print \"the callback has run\\n\"\n    end\nERROR:\n    print \"the callback didnt run\\n\"\n    end\n```\n\nto \n\n```\n    .local int sleep_cnt\n    sleep_cnt = 1\n    .local pmc callback_has_run\n    callback_has_run = get_global \"cb_done\"\n    if callback_has_run goto FINISHED\nLOOP_post:\n    if sleep_cnt \u003e 10000 goto ERROR\n    inc sleep_cnt\n    callback_has_run = get_global \"cb_done\"\n    unless callback_has_run goto LOOP_post\nFINISHED:\n    print \"the callback has run\\n\"\n    end\nERROR:\n    print \"the callback didnt run\\n\"\n    end\n```\n\nThis optimization looks good to me. I fail to see the problem, which seems to be nci specific.","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393524775,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50OTc1MDI4NzE="},"status":2},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393525899,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM2Mjc0NTI0","github-url":"https://github.com/parrot/parrot/issues/1037#issuecomment-36274524"},"message":"-O1 benchmarks / time make test vs make testO1\n\nthis includes the longer compile times:\n`time perl t/harness t/benchmark/\\*.t; time perl t/harness -O1 t/benchmark/\\*.t;`\n\n`0m33.498s` - `0m32.306s`\n\nwithout compile-time:\n\n```\nfor t in t/benchmark/*.pir; do \n  ./parrot -O2 -o $t.O2.pbc $t; \n  ./parrot -O1 -o $t.O1.pbc $t; \n  ./parrot -o $t.O0.pbc $t;\ndone\n$ time for t in t/benchmark/*.O0.pbc; do ./parrot $t \u003e/dev/null; done\nreal    0m17.428s\n$ time for t in t/benchmark/*.O1.pbc; do ./parrot $t \u003e/dev/null; done\nreal    0m16.269s\n$ time for t in t/benchmark/*.O2.pbc; do ./parrot $t \u003e/dev/null; done\nreal    0m16.235s\n```\n\n---\n\nperl t/harness --gc-debug --runcore-tests\n`1m17.267s`\n\nperl t/harness --gc-debug -O1 --runcore-tests\n`1m18.012s`\n\nperl t/harness -f --runcore-tests\n`1m16.640s`\n\nperl t/harness -f -O1 --runcore-tests\n`1m17.022s`\n\nperl t/harness -f -O2 --runcore-tests # with lot of SEGVs\n`1m16.902s`","files":null}]}