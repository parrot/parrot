{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1332807988,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3MDc0NTY=","github-url":"https://github.com/parrot/parrot/issues/750#issuecomment-4707456"},"message":"Notwithstanding the diagnosis I provided, I say \"-1\" to a new coding standards test aimed at guaranteeing proper tab placements in our makefile templates.  Reason:  YAGNI.\n\nI cannot recall any other times in the past six years when the build was broken because of \"hard tabs vs. wordspaces.\"  This build problem got fixed within 36 hours of its first being noticed.  So if the harm caused by the error was small, the benefit to preventing the error's recurrence will also be small.\n\nWe have to balance that modest benefit against the effort it will take to (a) agree, before writing a coding standards test, on how to modify the coding standards document; (b) write the new test file; and, most crucially, (c) guarantee that it works across 'gmake', 'bsdmake', 'nmake' and all the other variants are users/developers are likely to want to use.  I don't think the potential benefit warrants that effort.\n\nTo the best of my recollection, most of our current coding standards existed at the time I joined the Parrot project 5-1/2 years ago.  Though I'm often cast in the role of coding standards enforcer, I didn't make the standards up.  In very few cases did I write the Perl code in the test files.  Mostly, I've just refactored them as needed.\n\nMore to the point, what we would really benefit from is to have our developers who work on our .c, .h and .pmc source code files:\n\n(a)  run 'make nocritic_codetest' before committing; and\n\n(b) better still, work in branches rather than directly on master.\n\nI don't mind doing cage cleaning, but sometimes even I get tired of having to clean up after people who develop directly in master and who are perfectly capable of running 'make codetest' but fail to do so.  If someone posts that they've been working in a branch and want to merge it soon, I am perfectly agreeable to helping bring that branch up to coding standards before it gets merged into master.\n\nIn short, I think our best course of action is to have more self-enforcement of the existing coding standards rather than imposing additional standards whose benefits are small.\n\nThank you very much.\nJim Keenan","files":null},{"type":3,"author":{"id":"e6ebaecce565c58b3e91ddb32c09e93c5f646822"},"timestamp":1332825309,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ3MTAxMzE=","github-url":"https://github.com/parrot/parrot/issues/750#issuecomment-4710131"},"message":"I'm all for self-enforcement (including and especially me).\n\nAs to my original question, I understand it might be YAGNI, but if the cost is small, I don't mind paying it as a one-time cost.","files":null},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1394553093,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDEwMDkxNjM2MQ=="},"added":["Sev-low"],"removed":[]},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1394553098,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDEwMDkxNjM5NA=="},"added":["Step-test"],"removed":[]}]}