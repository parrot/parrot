{"version":1,"ops":[{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284943434,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTk=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502519"},"message":"653 byte attachment from ronaldxs\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1795/pcre.pir.patch\n\n```\nIndex: runtime/parrot/library/pcre.pir\n===================================================================\n--- runtime/parrot/library/pcre.pir (revision 49024)\n+++ runtime/parrot/library/pcre.pir (working copy)\n@@ -108,7 +108,7 @@\n     # pcre *pcre_compile(const char *pattern, int options,\n     #            const char **errptr, int *erroffset,\n     #            const unsigned char *tableptr\n-    dlfunc pcre_function, libpcre, 'pcre_compile', 'ptiB3P'\n+    dlfunc pcre_function, libpcre, 'pcre_compile', 'ptiV3P'\n     set_hll_global ['PCRE'; 'NCI'], 'PCRE_compile', pcre_function\n\n     #int pcre_exec(const pcre *code, const pcre_extra *extra,\n```","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284943595,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjA=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502520"},"message":"2831 byte attachment from ronaldxs\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1795/extra_thunks.c.patch\n\n```\nIndex: src/nci/extra_thunks.c\n===================================================================\n--- src/nci/extra_thunks.c  (revision 49092)\n+++ src/nci/extra_thunks.c  (working copy)\n@@ -2640,9 +2640,9 @@\n\n }\n static void\n-pcf_p_tiB3P(PARROT_INTERP, PMC *nci, SHIM(PMC *self))\n+pcf_p_tiV3P(PARROT_INTERP, PMC *nci, SHIM(PMC *self))\n {\n-    typedef void *(* func_t)(char *, int, char **, int *, PMC *);\n+    typedef void *(* func_t)(char *, int, void **, int *, PMC *);\n     func_t fn_pointer;\n     void *orig_func;\n     PMC * const ctx         = CURRENT_CONTEXT(interp);\n@@ -2653,15 +2653,15 @@\n\n     char *t_0; STRING *ts_0;\n     INTVAL t_1;\n-    char *t_2; STRING *ts_2;\n+    PMC *t_2; void *v_2;\n     PMC *t_3; int i_3;\n     PMC * t_4;\n     UNUSED(return_data); /* Potentially unused, at least */\n-    Parrot_pcc_fill_params_from_c_args(interp, call_object, \"SISPP\", \u0026ts_0, \u0026t_1, \u0026ts_2, \u0026t_3, \u0026t_4);\n-    t_0 = STRING_IS_NULL(ts_0) ? (char *)NULL : Parrot_str_to_cstring(interp, ts_0);t_2 = STRING_IS_NULL(ts_2) ? (char *) NULL : Parrot_str_to_cstring(interp, ts_2);i_3 = VTABLE_get_integer(interp, t_3);\n+    Parrot_pcc_fill_params_from_c_args(interp, call_object, \"SIPPP\", \u0026ts_0, \u0026t_1, \u0026t_2, \u0026t_3, \u0026t_4);\n+    t_0 = STRING_IS_NULL(ts_0) ? (char *)NULL : Parrot_str_to_cstring(interp, ts_0);v_2 = VTABLE_get_pointer(interp, t_2);i_3 = VTABLE_get_integer(interp, t_3);\n     GETATTR_NCI_orig_func(interp, nci, orig_func);\n     fn_pointer = (func_t)D2FPTR(orig_func);\n-    return_data =  (void *)(*fn_pointer)(t_0, t_1, \u0026t_2, \u0026i_3, t_4);\n+    return_data =  (void *)(*fn_pointer)(t_0, t_1, \u0026v_2, \u0026i_3, t_4);\n     if (return_data != NULL) {\n                              final_destination = Parrot_pmc_new(interp, enum_class_UnManagedStruct);\n                              VTABLE_set_pointer(interp, final_destination, return_data);\n@@ -2669,7 +2669,7 @@\n                           ret_object = Parrot_pcc_build_call_from_c_args(interp, call_object, \"P\", final_destination);\n     if (!STRING_IS_NULL(ts_0)) Parrot_str_free_cstring(t_0);\n\n-if (!STRING_IS_NULL(ts_2)) Parrot_str_free_cstring(t_2);\n+VTABLE_set_pointer(interp, t_2, v_2);\n VTABLE_set_integer_native(interp, t_3, i_3);\n\n }\n@@ -7121,8 +7121,8 @@\n     VTABLE_set_pmc_keyed_str(interp, nci_funcs, CONST_STRING(interp, \"ppttttitl\"), temp_pmc);\n\n     temp_pmc = Parrot_pmc_new(interp, enum_class_UnManagedStruct);\n-    VTABLE_set_pointer(interp, temp_pmc, (void *)pcf_p_tiB3P);\n-    VTABLE_set_pmc_keyed_str(interp, nci_funcs, CONST_STRING(interp, \"ptiB3P\"), temp_pmc);\n+    VTABLE_set_pointer(interp, temp_pmc, (void *)pcf_p_tiV3P);\n+    VTABLE_set_pmc_keyed_str(interp, nci_funcs, CONST_STRING(interp, \"ptiV3P\"), temp_pmc);\n\n     temp_pmc = Parrot_pmc_new(interp, enum_class_UnManagedStruct);\n     VTABLE_set_pointer(interp, temp_pmc, (void *)pcf_p_tip3P);\n```","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284943740,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjE=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502521"},"message":"368 byte attachment from ronaldxs\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1795/extra_thunks.nci.patch\n\n```\nIndex: src/nci/extra_thunks.nci\n===================================================================\n--- src/nci/extra_thunks.nci    (revision 49024)\n+++ src/nci/extra_thunks.nci    (working copy)\n@@ -269,7 +269,7 @@\n #                               unsigned long clientflag)\n\n # Used by library/pcre.pir\n-p    tiB3P\n+p    tiV3P\n p    tip3P\n i    pPtiiipi\n i    tpiibi\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284949396,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjI=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502522"},"message":"1208 byte attachment from jkeenan\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1795/libpcre.pir.patch\n\n```\nIndex: runtime/parrot/library/libpcre.pir\n===================================================================\n--- runtime/parrot/library/libpcre.pir  (revision 49024)\n+++ runtime/parrot/library/libpcre.pir  (working copy)\n@@ -19,36 +19,31 @@\n     .param string pat\n     .param int options\n\n-    .local string error\n     .local pmc PCRE_NCI_compile\n-    .local int error_size\n\n     .local pmc NULL\n     null NULL\n\n+    .local pmc errstr_p\n+    errstr_p = new ['Pointer']\n+\n     .local pmc errptr\n     errptr= new 'Integer'\n\n-    ## error message string size\n-    error_size= 500\n-\n-    ## allocate space in string for error message\n-    repeat error, \" \", error_size\n-\n     PCRE_NCI_compile = get_hll_global ['PCRE'; 'NCI'], 'PCRE_compile'\n\n     .local pmc code\n\n-    code = PCRE_NCI_compile( pat, options, error, errptr, NULL )\n+    code = PCRE_NCI_compile( pat, options, errstr_p, errptr, NULL )\n\n     .local int is_code_defined\n+    .local string errstr\n     is_code_defined = defined code\n-    unless is_code_defined goto RETURN\n+    if is_code_defined goto RETURN\n+    errstr = errstr_p\n\n-    error = \"\"\n-\n RETURN:\n-    .return( code, error, errptr )\n+    .return( code, errstr, errptr )\n .end\n\n\n\n```","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284961434,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjM=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502523"},"message":"\u003cp\u003e\npcre nci interface file with small change to interface signature\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284961595,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjQ=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502524"},"message":"\u003cp\u003e\nOutput file from extra_thunks.nci and nci_thunk_gen.pir.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284961740,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjU=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502525"},"message":"\u003cp\u003e\nPatch file for extra_thunks.nci whcih provides nci signatures\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1284961928,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MjY=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502526"},"message":"\u003cp\u003e\nAttaching extra_thunks.nci was unintentional (could someone delete it from here?).  Just use extra_thunks.nci.patch.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284965031,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Mjc=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502527"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1795#comment:1\" title=\"Comment 1 for Ticket #1795\"\u003eronaldws\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Attaching extra_thunks.nci was unintentional (could someone delete it from here?).  Just use extra_thunks.nci.patch.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nDone.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284967396,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Mjg=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502528"},"message":"\u003cp\u003e\npcre nci interface implementation with changed compile function for new signatur.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284967438,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Mjk=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502529"},"message":"\u003cp\u003e\nCorrected two instances of trailing whitespace in libpcre.pir.patch.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284967927,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MzA=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502530"},"message":"\u003cp\u003e\nI applied these patches to my checkouts on Linux/i386 and Darwin/PPC.  On Linux, I got PASS on \u003ctt\u003emake test\u003c/tt\u003e and got some codingstd errors on \u003ctt\u003emake fulltest\u003c/tt\u003e.  I corrected the trailing space errors in the patch, which means that, once applied, \u003ctt\u003emake fulltest\u003c/tt\u003e should PASS as well.  On Darwin, I got PASS on \u003ctt\u003emake test\u003c/tt\u003e.\n\u003c/p\u003e\n\n\u003cp\u003e\nSo, from a testing point of view, these 4 patches look good to me.  But, given discussion on IRC referred to, I would like these reviewed by people who know more about NCI than I do.  If the other reviewers are satisfied, we can apply these patches after this week's release.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1285040893,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MzE=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502531"},"message":"2093 byte attachment from ronaldxs\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1795/pcre.t.patch\n\n```\nIndex: t/library/pcre.t\n===================================================================\n--- t/library/pcre.t    (revision 49188)\n+++ t/library/pcre.t    (working copy)\n@@ -99,10 +99,8 @@\n CODE\n Loaded\n OUT\n-\n-## 2\n     my @todo;\n-    @todo = ( todo =\u003e '3..5 fail on Win32' ) if $^O =~ /MSWin32/;\n+    @todo = ( todo =\u003e '4..6 fail on Win32 (maybe)' ) if $^O =~ /MSWin32/;\n     pir_output_is( \u003c\u003c\"CODE\", \u003c\u003c'OUT', 'soup to nuts', @todo );\n\n .include 'iglobals.pasm'\n@@ -139,37 +137,54 @@\n OK2:\n     say 'ok 2'\n\n-\n-    .local string s\n     .local string pat\n+    pat= '(a'\n+    func= get_global ['PCRE'], 'compile'\n\n-    s= '--a--'\n-    pat= 'a'\n-\n     .local pmc code\n-    .local string error\n+    .local pmc error\n     .local int errptr\n+     error= new ['String']\n\n     func= get_global ['PCRE'], 'compile'\n     ( code, error, errptr )= func( pat, 0 )\n\n-    .local int is_code_defined\n-    is_code_defined= defined code\n-    if is_code_defined goto OK3\n+    # expecting error like 'missing )'\n+    .local int error_end\n+    .local int found_paren\n+    error_end = elements error\n+    dec error_end\n+    found_paren = error.'reverse_index'(')', error_end)\n+    ne found_paren, -1, OK3\n     print 'not '\n OK3:\n     say 'ok 3'\n\n+    pat= 'a'\n+\n+    func= get_global ['PCRE'], 'compile'\n+    ( code, error, errptr )= func( pat, 0 )\n+\n+    .local int is_code_defined\n+    is_code_defined= defined code\n+    if is_code_defined goto OK4\n+    print 'not '\n+OK4:\n+    say 'ok 4'\n+\n     .local int ok\n     .local pmc result\n\n+    .local string s\n+    s= '--a--'\n+\n     func= get_global ['PCRE'], 'match'\n     ( ok, result )= func( code, s, 0, 0 )\n\n-    unless ok \u003c 0 goto OK4\n+    unless ok \u003c 0 goto OK5\n     print 'not '\n-OK4:\n-    say 'ok 4'\n+OK5:\n+    say 'ok 5'\n\n     .local int i\n     i = 0\n@@ -177,10 +192,10 @@\n\n     func = get_global ['PCRE'], 'dollar'\n     match = func( s, ok, result, i )\n-    if 'a' == match goto OK5\n+    if 'a' == match goto OK6\n     print 'not '\n-OK5:\n-    say 'ok 5'\n+OK6:\n+    say 'ok 6'\n\n .end\n CODE\n@@ -189,6 +204,7 @@\n ok 3\n ok 4\n ok 5\n+ok 6\n OUT\n\n }\n```","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1285058893,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MzI=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502532"},"message":"\u003cp\u003e\nPatch to add test for returned error string\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"e7ab5189123b7e95617e8f8ef8dc5de0f0eb9b46"},"timestamp":1285059192,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MzM=","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-3502533"},"message":"\u003cp\u003e\nJust added one more patch that verifies that the other patches are working properly and the compile nci/pcre function really returns error strings from pcre_compile.  Patch modifies t/library/pcre.t adding one more test step to test 2.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455638807,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE4NDc0NzQyOQ==","github-url":"https://github.com/parrot/parrot/issues/258#issuecomment-184747429"},"message":"Obsolete patches since the nci rewrite, which does not take strings of chars anymore.\nBut we take the improved test. See the branch `smoke-me/pcre_nci-gh258`","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455640797,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NTUyMjgxOTA4"},"status":2}]}