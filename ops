{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1276420621,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NDQ=","github-url":"https://github.com/parrot/parrot/issues/635#issuecomment-3503844"},"message":"\u003cp\u003e\nSlogging through old tickets, tonight I came upon this one.  On Linux/i386, I ran:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003eperl Configure.pl --test --parrot_is_shared=0 --configure_trace\n\u003c/pre\u003e\u003cp\u003e\nMy setting of \u003ctt\u003e0\u003c/tt\u003e on that option was duly recorded:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003elib/Parrot/Config/Generated.pm:320:  'parrot_is_shared' =\u0026gt; '0',\nconfig_lib.pir:222:    set $P0[\"parrot_is_shared\"], \"0\"\n\u003c/pre\u003e\u003cp\u003e\nWhen I ran \u003ctt\u003emake\u003c/tt\u003e, I got a failure here:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e./miniparrot -Iruntime/parrot/include config_lib.pir \u0026gt;\n  runtime/parrot/include/config.fpmc\n./miniparrot: error while loading shared libraries:\n  libparrot.so.2.4.0: cannot open shared object file:\n  No such file or directory\nmake: **\\* [runtime/parrot/include/config.fpmc] Error 127\n/usr/local/bin/perl tools/build/parrot_config_c.pl \u0026gt; \\\n    src/parrot_config.c\n'runtime/parrot/include/config.fpmc' is truncated.\n  Remove it and rerun make\nmake: **\\* [src/parrot_config.c] Error 255\nFinished\n\u003c/pre\u003e\u003cp\u003e\nSo this seems to me to be more of a build failure than a configuration failure.\n\u003c/p\u003e\n\n\u003cp\u003e\nIn contrast, when I modified my standard configuration command on Darwin/PPC to include this option, I built successfully:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e#!/bin/sh\necho \"MACOSX_DEPLOYMENT_TARGET is $MACOSX_DEPLOYMENT_TARGET\"\nCC=\"/usr/bin/gcc\"\nCX=\"/usr/bin/g++\"\n/usr/local/bin/perl Configure.pl --cc=\"$CC\" --cxx=\"$CX\" --link=\"$CX\" \\\n    --ld=\"$CX\" \\\n    --parrot_is_shared=0 \\\n    --configure_trace \\\n    $@\n\u003c/pre\u003e\u003cp\u003e\nSo there is something OS-specific going on here.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1276552412,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NDU=","github-url":"https://github.com/parrot/parrot/issues/635#issuecomment-3503845"},"message":"\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n So this seems to me to be more of a build failure than a configuration failure.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nFair enough.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n In contrast, when I modified my standard configuration command on Darwin/PPC to include this option, I built successfully: [ . . . ]\n So there is something OS-specific going on here.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nIt's also possible to get a false success if there's a compatible previously-built libparrot already installed somewhere that will get picked up by the runtime dynamic loader.  For example, on Solaris, you can get a false positive by installing a compatible version of parrot and then\nre-running Configure with the LD_LIBRARY_PATH environment variable set to include the installation directory.  Or, you can get the same effect by installing parrot to a place where ldd automatically looks.\n\u003c/p\u003e\n\n\u003cp\u003e\nI suspect something like that is part of what's happening here.\n\u003c/p\u003e\n\n\u003cp\u003e\nI'd imagine there is also the possibility for OS-specific issues to arise. Even with --parrot_is_shared=0, the root Makefile still builds both libparrot.a and libparrot.so, and then links against -lparrot.  Which one gets used by the link editor in the final compilation step?  I don't know that there's any guaranteed unique answer.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1276588458,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NDY=","github-url":"https://github.com/parrot/parrot/issues/635#issuecomment-3503846"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1045#comment:3\" title=\"Comment 3 for Ticket #1045\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n It's also possible to get a false success if there's a\n compatible previously-built libparrot already installed\n somewhere that will get picked up by the runtime dynamic loader.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nToday I configured, built and tested Parrot on a Linux box where I know it has never been installed.  I got most of the same error as previously reported for Linux.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e./miniparrot -Iruntime/parrot/include config_lib.pir \u0026gt;\n  runtime/parrot/include/config.fpmc\n./miniparrot: error while loading shared libraries:\n  libparrot.so.2.4.0: cannot open shared object file:\n  No such file or directory\nmake: **\\* [runtime/parrot/include/config.fpmc] Error 127\n\u003c/pre\u003e\u003cp\u003e\nI did not get the part about \u003ci\u003econfig.fpmc\u003c/i\u003e being truncated.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1299404659,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4NDc=","github-url":"https://github.com/parrot/parrot/issues/635#issuecomment-3503847"},"message":"\u003cp\u003e\nRe-examining this old ticket tonight, I grepped for \u003ctt\u003eparrot_is_shared\u003c/tt\u003e once I had built parrot without \u003ctt\u003e--parrot_is_shared=0\u003c/tt\u003e.  My search excludes files in the configuration system.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$ find . -type f | xargs grep -n parrot_is_shared | \\\n  grep -vE '(./config/|steps|ports|Configure/Options|Configure.pl|ports|Parrot/Test)'\n./lib/Parrot/Config/Generated.pm:338:  'parrot_is_shared' =\u0026gt; 1,\nBinary file ./runtime/parrot/include/config.fpmc matches\n./runtime/parrot/library/distutils.pir:1156:    $I0 = config['parrot_is_shared']\n./runtime/parrot/library/distutils.pir:1421:    $I0 = config['parrot_is_shared']\n./runtime/parrot/library/distutils.pir:1465:    $I0 = config['parrot_is_shared']\nBinary file ./runtime/parrot/library/distutils.pbc matches\nBinary file ./src/parrot_config.o matches\nBinary file ./src/install_config.o matches\n./config_lib.pir:239:    set $P0[\"parrot_is_shared\"], \"1\"\nBinary file ./parrot matches\nBinary file ./pbc_to_exe matches\nBinary file ./parrot_nci_thunk_gen matches\nBinary file ./parrot_config matches\nBinary file ./pbc_merge matches\nBinary file ./parrot_debugger matches\nBinary file ./parrot-nqp matches\nBinary file ./ops2c matches\nBinary file ./install_config.fpmc matches\n\u003c/pre\u003e\u003cp\u003e\nNote that while we \u003cstrong\u003erecord\u003c/strong\u003e a setting for \u003ctt\u003eparrot_is_shared\u003c/tt\u003e we never make reference to that value in any source code files.  I would infer from that that the \u003ctt\u003e--parrot_is_shared\u003c/tt\u003e option is (currently) completely irrelevant.  And that would explain why we can't build with a \u003ctt\u003e0\u003c/tt\u003e setting of it.\n\u003c/p\u003e\n\n\u003cp\u003e\nIs that inference correct?\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null}]}