{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1383419441,"metadata":{"github-id":"MDU6SXNzdWUyMjAwNzUwOA==","github-url":"https://github.com/parrot/parrot/issues/1021","origin":"github"},"title":"Can modify inheritance after instantiation","message":"Reported by: zefram@fysh.org\n\nInstantiating a class directly sets its \"instantiated\" flag, which prevents further changes to its parentage, but _indirectly_ instantiating it doesn't set the flag. The result is that the class hierarchy behind an existing object can be modified:\n\n```\n$ cat t56.pir\n.sub main :main\n        $P0 = newclass \"Foo\"\n        $P1 = newclass \"Bar\"\n        $P2 = subclass \"Bar\", \"Baz\"\n        $P3 = new \"Baz\"\n        $I0 = isa $P3, \"Foo\"\n        say $I0\n        $P1.\"add_parent\"($P0)\n        $I1 = isa $P3, \"Foo\"\n        say $I1\n.end\n```\n\n```\n$ ./parrot t56.pir\n0\n0\n```\n\nNote that caching of inheritance relationships means that the second isa check gives the wrong answer.\n\n-zefram\n\n```\nSummary of my parrot 5.7.0 configuration:\n  configdate='Sat Oct  5 12:42:43 2013 GMT'\n  Platform:\n    osname=linux, archname=x86_64-linux-gnu-thread-multi\n    perl=/usr/bin/perl\n```","files":null}]}