{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1415610663,"metadata":{"github-id":"MDU6SXNzdWU0ODI0MzYwMw==","github-url":"https://github.com/parrot/parrot/issues/1126","origin":"github"},"title":"shorten and harmonize error messages","message":"Performance:\nI would like to propose to decrease our error message entropy, which would lead to shared constant strings and a much smaller library size.\ni.e. \"FixedIntegerArray: index out of bounds!\" =\u003e \"index out of bounds\"\n\nRemove all context prefixes, remove exclamation points and only use 3-4 error messages for the array pmc's:\n- `index out of bounds`, \n- `illegal argument` (for illegal negative args), \n- `can't resize` (for fixed*pmcs or size=0 arguments)\n- `StopIteration`\n\nThe context is clear from within the program by looking at the object, and for the user by looking at the code or the backtrace.\n\nDo not end the exception string with `.`, `!` or `\\n`.\n\nI'd like also to add a simplier exception thrower from c_noargs for constant strings, without var args handling.\n\n```\nParrot_ex_throw_from_c_noargs(PARROT_INTERP, int exitcode, ARGIN(const char *msg))\n{\n    PMC *exception = build_exception(interp, exitcode, msg);\n    Parrot_ex_throw_from_c(interp, exception);\n}\n```","files":null}]}