{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1309669260,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5MjQ=","github-url":"https://github.com/parrot/parrot/issues/655#issuecomment-3503924"},"message":"\u003cp\u003e\nHere are our current uses of \u003ctt\u003estrerror\u003c/tt\u003e:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$ ack strerror *\ndocs/pdds/pdd23_exceptions.pod\n263:Message is the return value of the standard C function C\u0026lt;strerror()\u0026gt;.\ninclude/parrot/platform_interface.h\n60:STRING *Parrot_platform_strerror(PARROT_INTERP, INTVAL error);\nsrc/dynpmc/file.pmc\n175:                const char * const errmsg = strerror(errno);\n182:            const char * const errmsg = strerror(errno);\nsrc/dynpmc/file.c\n311:            const char * const errmsg = strerror(errno);\n318:        const char * const errmsg = strerror(errno);\nsrc/ops/core_ops.c\n21487:    const char  * const  tmp = strerror(errno);\n21496:    const char  * const  tmp = strerror(IREG(2));\n21505:    const char  * const  tmp = strerror(ICONST(2));\nsrc/ops/sys.ops\n73:    const char * const tmp = strerror(errno);\n79:    const char * const tmp = strerror($2);\nsrc/pmc/mappedbytearray.pmc\n144:                        \"mmap failed: %s\", strerror(errno));\n329:                    \"mmap failed: %s\", strerror(errno));\nsrc/pmc/mappedbytearray.c\n332:                \"mmap failed: %s\", strerror(errno));\n595:                    \"mmap failed: %s\", strerror(errno));\nsrc/platform/darwin/sysmem.c\n53:        err_msg = strerror(err);\nsrc/platform/generic/exec.c\n289:        \"Error executing process: %s\", strerror(errno));\nsrc/platform/generic/io.c\n362:                    \"Read error: %s\", strerror(errno));\n404:                        \"Write error: %s\", strerror(errno));\nsrc/platform/generic/socket.c\n267:                Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n477:                Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n516:                    Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n539:                Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n559:                Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n590:                Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n639:                    Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n674:                    Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\n724:                        Parrot_platform_strerror(interp, PIO_SOCK_ERRNO));\nsrc/platform/generic/file.c\n27:/* TT #1050 apparently, strerror_r is thread-safe and should be used instead.*/\n29:    EXCEPTION_EXTERNAL_ERROR, \"%s failed: %s\", (msg), strerror(errno))\nsrc/platform/generic/sysmem.c\n85:        const char * const err_msg = strerror(err);\nsrc/platform/generic/error.c\n29:=item C\u0026lt;STRING * Parrot_platform_strerror(PARROT_INTERP, INTVAL error)\u0026gt;\n39:Parrot_platform_strerror(PARROT_INTERP, INTVAL error)\n41:    const char *msg = strerror(error);\nsrc/platform/win32/io.c\n325:                    Parrot_platform_strerror(interp, err));\n385:            \"Write error: %Ss\", Parrot_platform_strerror(interp, err));\n420:                    Parrot_platform_strerror(interp, err));\n450:                    Parrot_platform_strerror(interp, err));\nsrc/platform/win32/error.c\n31:=item C\u0026lt;STRING * Parrot_platform_strerror(PARROT_INTERP, INTVAL error)\u0026gt;\n40:Parrot_platform_strerror(PARROT_INTERP, INTVAL error)\nsrc/platform/win32/file.c\n33:    Parrot_platform_strerror(interp, GetLastError()))\ntools/dev/lib_deps.pl\n596:strerror    string.h\n\u003c/pre\u003e","files":null}]}