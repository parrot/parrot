{"version":1,"ops":[{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293215700,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTI=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503312"},"message":"314 byte attachment from plobsing\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1903/test.winxed\n\n```class A {\n  function a() {\n    say(\"a\");\n    throw Error(\"erra\");\n    return 0;\n  }\n}\n\nfunction b() {\n  say(\"b\");\n  throw Error(\"errb\");\n  return 0;\n}\n\nfunction main[main](var argv) {\n  try {\n    if (argv[1])\n      return (new A).a();\n    else\n      return b();\n  } catch (e) {\n    say(\"caught exception\");\n  }\n}\n\n```\n```","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293215729,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTM=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503313"},"message":"1393 byte attachment from plobsing\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1903/test.pir\n\n```# Begin generated code\n\n.namespace [ 'A' ]\n\n.sub 'a' :method\n\n.annotate 'file', 'test.winxed'\n.annotate 'line', 2\n\n# Body\n\n# {\n\n# predefined say\n\n.annotate 'line', 3\nsay \"a\"\n\n# predefined Error\n\n.annotate 'line', 4\nroot_new $P1, ['parrot';'Exception']\n$P1['message'] = \"erra\"\nthrow $P1\n.annotate 'line', 5\n.return(0)\n\n# }\n\n.annotate 'line', 6\n\n.end # a\n\n.sub Winxed_class_init :anon :load :init\nnewclass $P0, [ 'A' ]\n.end\n.namespace [ ]\n\n.sub 'b'\n\n.annotate 'line', 9\n\n# Body\n\n# {\n\n# predefined say\n\n.annotate 'line', 10\nsay \"b\"\n\n# predefined Error\n\n.annotate 'line', 11\nroot_new $P1, ['parrot';'Exception']\n$P1['message'] = \"errb\"\nthrow $P1\n.annotate 'line', 12\n.return(0)\n\n# }\n\n.annotate 'line', 13\n\n.end # b\n\n.sub 'main' :main\n.param pmc __ARG_1\n\n.annotate 'line', 15\n\n# Body\n\n# {\n\n.annotate 'line', 16\n\n# try: create handler\n\nnew $P2, 'ExceptionHandler'\nset_label $P2, __label_0\npush_eh $P2\n\n# try: begin\n\n# {\n\n.annotate 'line', 17\n$P3 = __ARG_1[1]\nif_null $P3, __label_2\nunless $P3 goto __label_2\n.annotate 'line', 18\nnew $P4, [ 'A' ]\n.tailcall $P4.'a'()\ngoto __label_3\n__label_2: # else\n.annotate 'line', 20\n.tailcall 'b'()\n__label_3: # endif\n\n# }\n\n# try: end\n\npop_eh\ngoto __label_1\n.annotate 'line', 16\n\n# catch\n\n__label_0:\n.get_results($P1)\nfinalize $P1\npop_eh\n\n# {\n\n# predefined say\n\n.annotate 'line', 22\nsay \"caught exception\"\n\n# }\n\n# catch end\n\n__label_1:\n\n# }\n\n.annotate 'line', 24\n\n.end # main\n\n# End generated code\n\n```\n```","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293215743,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTQ=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503314"},"message":"1393 byte attachment from plobsing\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1903/test.2.pir\n\n```# Begin generated code\n\n.namespace [ 'A' ]\n\n.sub 'a' :method\n\n.annotate 'file', 'test.winxed'\n.annotate 'line', 2\n\n# Body\n\n# {\n\n# predefined say\n\n.annotate 'line', 3\nsay \"a\"\n\n# predefined Error\n\n.annotate 'line', 4\nroot_new $P1, ['parrot';'Exception']\n$P1['message'] = \"erra\"\nthrow $P1\n.annotate 'line', 5\n.return(0)\n\n# }\n\n.annotate 'line', 6\n\n.end # a\n\n.sub Winxed_class_init :anon :load :init\nnewclass $P0, [ 'A' ]\n.end\n.namespace [ ]\n\n.sub 'b'\n\n.annotate 'line', 9\n\n# Body\n\n# {\n\n# predefined say\n\n.annotate 'line', 10\nsay \"b\"\n\n# predefined Error\n\n.annotate 'line', 11\nroot_new $P1, ['parrot';'Exception']\n$P1['message'] = \"errb\"\nthrow $P1\n.annotate 'line', 12\n.return(0)\n\n# }\n\n.annotate 'line', 13\n\n.end # b\n\n.sub 'main' :main\n.param pmc __ARG_1\n\n.annotate 'line', 15\n\n# Body\n\n# {\n\n.annotate 'line', 16\n\n# try: create handler\n\nnew $P2, 'ExceptionHandler'\nset_label $P2, __label_0\npush_eh $P2\n\n# try: begin\n\n# {\n\n.annotate 'line', 17\n$P3 = __ARG_1[1]\nif_null $P3, __label_2\nunless $P3 goto __label_2\n.annotate 'line', 18\nnew $P4, [ 'A' ]\n.tailcall $P4.'a'()\ngoto __label_3\n__label_2: # else\n.annotate 'line', 20\n.tailcall 'b'()\n__label_3: # endif\n\n# }\n\n# try: end\n\npop_eh\ngoto __label_1\n.annotate 'line', 16\n\n# catch\n\n__label_0:\n.get_results($P1)\nfinalize $P1\npop_eh\n\n# {\n\n# predefined say\n\n.annotate 'line', 22\nsay \"caught exception\"\n\n# }\n\n# catch end\n\n__label_1:\n\n# }\n\n.annotate 'line', 24\n\n.end # main\n\n# End generated code\n\n```\n```","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293237300,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTU=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503315"},"message":"\u003cp\u003e\nWinxed test file demonstrating the issue.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293237329,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTY=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503316"},"message":"\u003cp\u003e\nPIR resulting from compiling test.winxed\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1293237343,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMTc=","github-url":"https://github.com/parrot/parrot/issues/476#issuecomment-3503317"},"message":"\u003cp\u003e\nPIR resulting from compiling test.winxed\n\u003c/p\u003e","files":null}]}