{"version":1,"ops":[{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1357847399,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyMTE1MjA1","github-url":"https://github.com/parrot/parrot/issues/923#issuecomment-12115205"},"message":"clang 3.1 miscompiles src/platform/cygwin/math.c also","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1357855034,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyMTIwOTI3","github-url":"https://github.com/parrot/parrot/issues/923#issuecomment-12120927"},"message":"If this is a genuine bug in clang, we should report it to them. @rurban, which versions of clang have you noticed this on?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1357857214,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyMTIyNDY3","github-url":"https://github.com/parrot/parrot/issues/923#issuecomment-12122467"},"message":"Currently there is only one official clang for cygwin: \n\n```\nclang version 3.1 (branches/release_31)\nTarget: i386-pc-cygwin\nThread model: posix\n```\n\nI hope the update to 3.2 or 3.3 will fix that. But for the meantime I want to check how to fix it.\n\nReference: http://cygwin.com/ml/cygwin/2013-01/msg00130.html","files":null},{"type":3,"author":{"id":"92ca5c6fc2b01a289feca0b5e46f2df1a89ec1f2"},"timestamp":1358642044,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyNDYzODgy","github-url":"https://github.com/parrot/parrot/issues/923#issuecomment-12463882"},"message":"I don't think `_X86_` is a standard detection macro for i386 (insomuch as there is such a thing). Is there a reason you can't use `__i386__` on GCC/clang or `_M_X86` on MSVC?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1358990754,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyNjMyNjYy","github-url":"https://github.com/parrot/parrot/issues/923#issuecomment-12632662"},"message":"@jckarter: It has nothing to do i386 detection. It was a clang internal problem, when including w32api headers, which was easy to workaround.\n\nFixed upstream with clang-3.1-2 http://cygwin.com/ml/cygwin-announce/2013-01/msg00022.html","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1358990754,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzU0MDYxMTI="},"status":2}]}