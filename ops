{"version":1,"ops":[{"type":1,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336921782,"metadata":{"github-id":"MDU6SXNzdWU0NTUzMTI5","github-url":"https://github.com/parrot/parrot/issues/770","origin":"github"},"title":"PARROT_EXPORT must appear first in modifiers list","message":"When we have a bunch of function modifiers in our C source like PARROT_EXPORT, PARROT_COLD, PARROT_CANNOT_RETURN_NULL, etc, the PARROT_EXPORT modifier must come first in the list. We are going to need a test to prove this.\n\nWhen we compile with g++,  this example:\n\n```\nPARROT_EXPORT\nPARROT_COLD\n...\n```\n\n...translates to this code:\n\n```\nextern \"C\"  __attribute__ ((visibility(\"default\")))\n__attribute__((__cold__))\n```\n\nReversing the order gives us this instead:\n\n```\n__attribute__((__cold__))\nextern \"C\"  __attribute__ ((visibility(\"default\")))\n```\n\nHaving the 'extern \"C\"' between attribute definitions is a syntax error for g++. To avoid this, we probably want a test to ensure PARROT_EXPORT always comes first. This bug hasn't bitten us before, I think, because we've been doing this order correctly by convention. However having a test is a good, easy way to ensure it never can come back.","files":null}]}