{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1355424654,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMzQ3NDM0","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11347434"},"message":"One issue is that @rpath is not supported in 10.4 or older. Is that a concern? I still have a 10.4 box laying around (as I am sure others do), but not even Apple supports that anymore. Should we?\n\nCan we make it so that @rpath is only used on 10.5 or newer?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1355436646,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMzU1OTAy","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11355902"},"message":"We can provide fallbacks to @executable_path based on the darwin version. \n\nWe don't yet support fancy relocatable installations anyway, but we should. For darwin and windows at least. \nTicket GH #800.","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1355455193,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMzYzODUx","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11363851"},"message":"On 12/13/12 1:51 PM, leto wrote:\n\n\u003e One issue is that @rpath is not supported in 10.4 or older. Is that a concern?\n\u003e I still have a 10.4 box laying around (as I am sure others do), but \n\u003e not even Apple supports that anymore. Should we?\n\nThe Darwin/PPC machine on which I have always tested Parrot is 10.4.11.\n\nIn general, I'm skeptical of the \"\u003cVendor\u003e no longer supports \n\u003csoftware\u003e\" argument.  Vendors have a vested financial interest in \nminimizing the number of older versions of their products they support. \n  Apple is, IMO, much worse than that Redmond, WA company in this \nregard.  \"Buy the new, shiny\" is their gospel.\n\nI've always felt that the virtue of continuing to try to build and test \nParrot (or Perl 5, or ..., for that matter) on older OSes is that when \nthings break, the breakage tends to expose some fallacious assumption we \nmade about newly introduced code.  When I, for instance, have reported \nbreakages on 10.4.11, it has often inspired bacek, Reini, ... to look \nmore closely at the code and come up with even better solutions!\n\nIn the Perl 5 (Porters) world, the question of whether a given platform \n\"continues to be supported\" or not hinges much less on whether the \nvendor supports the platform than on whether we can find people who are \nwilling to try to configure, build and test blead on those platforms -- \nand file bug reports.  I think that's a good approach for open-source, \ncommunity-based projects.\n\n\u003e Can we make it so that @rpath is only used on 10.5 or newer?\n\nSounds like a reasonable approach.\n\nThank you very much.\nJim Keenan","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1355496795,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMzc4NzI3","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11378727"},"message":"On Thu, Dec 13, 2012 at 10:19 PM, James E Keenan\nnotifications@github.comwrote:\n\n\u003e On 12/13/12 1:51 PM, leto wrote:\n\u003e \n\u003e \u003e One issue is that @rpath is not supported in 10.4 or older. Is that a\n\u003e \u003e concern?\n\u003e \u003e I still have a 10.4 box laying around (as I am sure others do), but\n\u003e \u003e not even Apple supports that anymore. Should we?\n\u003e \n\u003e The Darwin/PPC machine on which I have always tested Parrot is 10.4.11.\n\u003e \n\u003e In general, I'm skeptical of the \"\u003cVendor\u003e no longer supports\n\u003e \u003csoftware\u003e\" argument. Vendors have a vested financial interest in\n\u003e minimizing the number of older versions of their products they support.\n\u003e Apple is, IMO, much worse than that Redmond, WA company in this\n\u003e regard. \"Buy the new, shiny\" is their gospel.\n\nYes, but this requires us to expend energy on platforms that we don't\nnecessarily have a lot of good coverage on.\n\nWhile ongoing support of older platforms is nice, and as you say, can help\nus test our assumptions - it comes at a cost. If developers like Reini are\nwilling to pay that cost (in time, and in this particular case, hardware),\nthat's fine.\n\nKeep in mind that p5p requires not just people to test, but also willing to\ncode fixes for those platforms, and parrot seems to be starved of tuits in\ngeneral lately.\n\n\u003e I've always felt that the virtue of continuing to try to build and test\n\u003e Parrot (or Perl 5, or ..., for that matter) on older OSes is that when\n\u003e things break, the breakage tends to expose some fallacious assumption we\n\u003e made about newly introduced code. When I, for instance, have reported\n\u003e breakages on 10.4.11, it has often inspired bacek, Reini, ... to look\n\u003e more closely at the code and come up with even better solutions!\n\u003e \n\u003e In the Perl 5 (Porters) world, the question of whether a given platform\n\u003e \"continues to be supported\" or not hinges much less on whether the\n\u003e vendor supports the platform than on whether we can find people who are\n\u003e willing to try to configure, build and test blead on those platforms --\n\u003e and file bug reports. I think that's a good approach for open-source,\n\u003e community-based projects.\n\u003e \n\u003e \u003e Can we make it so that @rpath is only used on 10.5 or newer?\n\u003e \n\u003e Sounds like a reasonable approach.\n\u003e \n\u003e Thank you very much.\n\u003e Jim Keenan\n\u003e \n\u003e â€”\n\u003e Reply to this email directly or view it on GitHubhttps://github.com/parrot/parrot/issues/883#issuecomment-11363851.\n\n## \n\nWill \"Coke\" Coleda","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1355753288,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExNDQyNjkw","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11442690"},"message":"I've implemented `@executable_path` for all darwin versions, and made a new `blib/lib/installable_libparrot-4.10.0.dylib` target to contain the final install_name in branch `rurban/darwin-rpath-gh883`\n\nReady to be merged.\n\n`@rpath` would allow a single `libparrot.dylib` to be used for the build and installed version, but for now I choose the simplier `@executable_path` solution.","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1355788606,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExNDY3OTM3","github-url":"https://github.com/parrot/parrot/issues/883#issuecomment-11467937"},"message":"```\n$ gitcurr\nrurban/darwin-rpath-gh883\n```\n\nThis branch failed for me today on Darwin/x86_64 with many errors.  (Am now trying it on Darwin/PPC.)\n\nTypical error output:\n\n```\n#   Failed test 'hello world'\n#   at t/src/basic.t line 32.\n# dyld: Library not loaded: @executable_path/blib/lib/libparrot.4.10.0.dylib\n#   Referenced from: /Users/jkeenan/gitwork/parrot/./t/src/basic_1\n#   Reason: image not found\n# \n# Looks like you failed 1 test of 1.\nt/src/basic.t ............................... \nDubious, test returned 1 (wstat 256, 0x100)\nFailed 1/1 subtests \nt/src/checkdepend.t ......................... ok\n\n#   Failed test 'Minimal embed, create multiple interps'\n#   at t/src/embed.t line 76.\n# dyld: Library not loaded: @executable_path/blib/lib/libparrot.4.10.0.dylib\n#   Referenced from: /Users/jkeenan/gitwork/parrot/./t/src/embed_1\n#   Reason: image not found\n# \n\n#   Failed test 'Minimal embed, create multiple interps \n#     without giving 1st interp to Parrot_interp_new '\n#   at t/src/embed.t line 113.\n# dyld: Library not loaded: @executable_path/blib/lib/libparrot.4.10.0.dylib\n#   Referenced from: /Users/jkeenan/gitwork/parrot/./t/src/embed_2\n#   Reason: image not found\n# \n# Looks like you failed 2 tests of 13.\nt/src/embed.t ............................... \n\n\n\nTest Summary Report\n-------------------\nt/src/basic.t                             (Wstat: 256 Tests: 1 Failed: 1)\n  Failed test:  1\n  Non-zero exit status: 1\nt/src/embed.t                             (Wstat: 512 Tests: 13 Failed: 2)\n  Failed tests:  1-2\n  Non-zero exit status: 2\nt/src/exit.t                              (Wstat: 256 Tests: 1 Failed: 1)\n  Failed test:  1\n  Non-zero exit status: 1\nt/src/extend.t                            (Wstat: 4096 Tests: 19 Failed: 16)\n  Failed tests:  1-14, 17-18\n  Non-zero exit status: 16\nt/src/misc.t                              (Wstat: 768 Tests: 4 Failed: 3)\n  Failed tests:  1-2, 4\n  Non-zero exit status: 3\nt/src/pointer_array.t                     (Wstat: 512 Tests: 2 Failed: 2)\n  Failed tests:  1-2\n  Non-zero exit status: 2\nt/src/warnings.t                          (Wstat: 512 Tests: 2 Failed: 2)\n  Failed tests:  1-2\n  Non-zero exit status: 2\nt/src/embed/api.t                         (Wstat: 2304 Tests: 9 Failed: 9)\n  Failed tests:  1-9\n  Non-zero exit status: 9\nt/src/embed/pmc.t                         (Wstat: 2304 Tests: 9 Failed: 9)\n  Failed tests:  1-9\n  Non-zero exit status: 9\nt/src/embed/strings.t                     (Wstat: 256 Tests: 1 Failed: 1)\n  Failed test:  1\n  Non-zero exit status: 1\nt/src/extend_vtable.t                     (Wstat: 34304 Tests: 134 Failed: 134)\n  Failed tests:  1-134\n  Non-zero exit status: 134\nt/perl/Parrot_Test.t                      (Wstat: 0 Tests: 112 Failed: 4)\n  Failed tests:  73-76\next/nqp-rx/t/nqp/46-charspec.t            (Wstat: 256 Tests: 0 Failed: 0)\n  Non-zero exit status: 1\n  Parse errors: No plan found in TAP output\nFiles=451, Tests=14396, 159 wallclock secs\n    ( 3.98 usr  1.13 sys + 208.09 cusr 52.25 csys = 265.45 CPU)\nResult: FAIL\nmake: *** [test_core] Error 1\nFinished\n```\n\nSo, I don't think the branch is ready for merging yet.","files":null}]}