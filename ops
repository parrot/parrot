{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1239755922,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTE=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503451"},"message":"1136 byte attachment from heidnes\nat http://trac.parrot.org/parrot/raw-attachment/ticket/555/patch-ad\n\n``` $NetBSD$\n\nAllow parrot to detect perldoc when run as root.  Perldoc changes\nuid to 'nobody', 'nouser' or uid -2 when run as root, so it won't\nbe able to write files created by root with mode 0600 (or create new\nfiles in directories owned by root mode 0755).\n\n--- config/auto/perldoc.pm.orig 2009-03-08 21:32:47.000000000 +0100\n+++ config/auto/perldoc.pm\n@@ -38,7 +38,9 @@ sub runstep {\n\n     my $cmd = $conf-\u003edata-\u003eget_p5('scriptdirexp') . q{/perldoc};\n     my ( $fh, $filename ) = tempfile( UNLINK =\u003e 1 );\n-    my $content = capture_output(\"$cmd -ud $filename perldoc\") || undef;\n+    my($stdout, $stderr, $retval) = \n+   capture_output(\"$cmd -u perldoc \u003e $filename\");\n+    my($content) = $retval ? undef : $stderr;\n\n     return 1 unless defined( $self-\u003e_initial_content_check($conf, $content) );\n\n@@ -68,7 +70,7 @@ E_NOTE\n         if ( $new_perldoc ) {\n             $TEMP_pod_build .= \u003c\u003c\"END\"\n ops$slash$pod: ..${slash}src${slash}ops${slash}$ops\n-\\t\\$(PERLDOC) -ud ops${slash}$pod ..${slash}src${slash}ops${slash}$ops\n+\\t\\$(PERLDOC) -u ..${slash}src${slash}ops${slash}$ops \u003e ops${slash}$pod \n \\t\\$(CHMOD) 0644 ops${slash}$pod\n\n END\n```","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1239756307,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTI=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503452"},"message":"461 byte attachment from heidnes\nat http://trac.parrot.org/parrot/raw-attachment/ticket/555/patch-ae\n\n``` $NetBSD$\n\nPerldoc's -d is incompatible with doing the build as root.\n\n--- config/gen/makefiles/docs.in.orig   2009-03-09 05:41:01.000000000 +0100\n+++ config/gen/makefiles/docs.in\n@@ -37,7 +37,7 @@ doc-prep:\n    $(MKPATH) ops\n\n packfile-c.pod: ../src/packfile.c\n-#IF(new_perldoc):  $(PERLDOC) -ud packfile-c.pod ../src/packfile.c\n+#IF(new_perldoc):  $(PERLDOC) -u ../src/packfile.c \u003e packfile-c.pod \n #ELSE: $(PERLDOC) -u ../src/packfile.c \u003e packfile-c.pod\n\n clean:\n```","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1239773922,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTM=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503453"},"message":"Trac commenter: heidnes\n\n```\n    \u003cp\u003e\n```\n\nPatch to change perldoc detection and use to use \u0026gt; instead of -d\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1239774307,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTQ=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503454"},"message":"Trac commenter: heidnes\n\n```\n    \u003cp\u003e\n```\n\nAnother perldoc -d usage replaced with \u0026gt;\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0cd3b02130a8b42e1ef2ea26b102fedb4bb839e4"},"timestamp":1240204206,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTU=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503455"},"message":"\u003cp\u003e\nThanks, patches applied as r38214.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n I know, using \u0026gt; instead of perldoc's -d option is possibly port unfriendly to non-Unix systems, so a better way of testing should probably be found.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nIt's portable to all of the platforms we currently support.  The root Makefile already uses this syntax in several places, so I think it's ok for now.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"090edab1282a45bd2d4c0e11ceffc2d7454f9e77"},"timestamp":1240291026,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTY=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503456"},"message":"\u003cp\u003e\nsince r38214, the perldoc detection is broken\non Windows XP with Strawberry Perl 5.10.0\n\u003c/p\u003e\n\n\u003cp\u003e\nauto::perldoc -       Is perldoc installed.................................no.\n\u003c/p\u003e\n\n\u003cp\u003e\nreverted in r38239.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1241112561,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0NTc=","github-url":"https://github.com/parrot/parrot/issues/520#issuecomment-3503457"},"message":"\u003cp\u003e\nI asked for a consultation with the Strawberry Perl doctor -- David Golden -- who wrote:\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ci\u003eLooking at \u003ca href=\"https://trac.parrot.org/parrot/changeset/38214\"\u003er38214\u003c/a\u003e, the old\nlogic is \u003ctt\u003e|| undef\u003c/tt\u003e, whereas the new logic allows \u003ctt\u003e$stderr\u003c/tt\u003e to be the\nempty string.  (At least, tracing \u003ctt\u003ecapture_output\u003c/tt\u003e and \u003ctt\u003e_slurp\u003c/tt\u003e and\n\u003ctt\u003eslurp_file\u003c/tt\u003e it looks like the empty string is the default return\nvalue.)  I suspect that might be related.\u003c/i\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ci\u003eHowever, all this seems like reinventing the wheel if what you want to\nknow is whether 'perldoc' is available and executable:\u003c/i\u003e\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e  use IPC::Cmd 'can_run';\n  my $full_path = can_run('perldoc');\n\u003c/pre\u003e\u003cp\u003e\n\u003ci\u003e(On windows that gets you the path to 'perldoc.bat' which is correct.)\u003c/i\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ci\u003eAnd IPC::Cmd is core in 5.10, so it's pretty much expected to work everywhere.\u003c/i\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nUnfortunately, Parrot is constrained to require only Perl 5.8.?.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bee7e06ff9c483ab433edaff12e7fcad590d4df3"},"timestamp":1394287672,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDk4MzI2","github-url":"https://github.com/parrot/parrot/issues/527#issuecomment-37098326"},"message":"This issue seems to be resolved.  The offending example no longer exists, however similar PIR code fragments in e.g. `book/pir/ch05_control_structures.pod` are correctly converted into `\u003cpre\u003e` blocks in the HTML generated by `make html`.","files":null},{"type":3,"author":{"id":"bee7e06ff9c483ab433edaff12e7fcad590d4df3"},"timestamp":1394287852,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM3MDk4Mzkz","github-url":"https://github.com/parrot/parrot/issues/527#issuecomment-37098393"},"message":"The issue mentioned in http://trac.parrot.org/parrot/ticket/559 also seems to have been corrected (see e.g. `book/pir/ch04_variables.pod`).","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1394558517,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTAwOTU3MDM2"},"status":2}]}