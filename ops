{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296037833,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MjE=","github-url":"https://github.com/parrot/parrot/issues/572#issuecomment-3503621"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/1022\" title=\"todo: PGE::Glob needs docs. (new)\"\u003ecoke\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n PGE::Glob should have POD docs explaining the specific matching language that is used. See Tcl::Glob for an example.\n This will help clarify that there are two different syntaxes available.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nCoke, I found very few differences between the PODs of these two files.  The Tcl::Glob file has this section:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e    The following special characters are supported\n    \"?\" Matches any single character\n    \"_\" Matches any number of any characters, including no characters.\n    \"[chars]\"\n        Matches any character in the given set. Sets are either a sequence\n        of explicit characters, or a range specified with a dash, e.g.\n        [aeiou] matches lower case ASCII vowels, while [a-z] matches any\n        lowercase ASCII letter.\n    \"\\x\"\n        Match a literal character, e.g. \\_ matches the literal \"*\", avoiding\n        its special meaning.\n\u003c/pre\u003e\u003cp\u003e\n... which has no counterpart in the PGE::Glob file.  But otherwise, PGE::Glob looks well documented.\n\u003c/p\u003e\n\n\u003cp\u003e\nCan you explain a bit more about what you think is missing?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1296080244,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MjI=","github-url":"https://github.com/parrot/parrot/issues/572#issuecomment-3503622"},"message":"\u003cpre class=\"wiki\"\u003eOn Tue, Jan 25, 2011 at 9:30 PM, Parrot \u0026lt;parrot-tickets@lists.parrot.org\u0026gt; wrote:\n\u0026gt; #1022: PGE::Glob needs docs.\n\u0026gt; -------------------+--------------------------------------------------------\n\u0026gt;  Reporter:  coke   |       Owner:\n\u0026gt;     Type:  todo   |      Status:  new\n\u0026gt;  Priority:  minor  |   Milestone:\n\u0026gt; Component:  docs   |     Version:  trunk\n\u0026gt;  Severity:  low    |    Keywords:\n\u0026gt;     Lang:         |       Patch:\n\u0026gt;  Platform:         |\n\u0026gt; -------------------+--------------------------------------------------------\n\u0026gt;\n\u0026gt; Comment(by jkeenan):\n\u0026gt;\n\u0026gt;  Replying to [ticket:1022 coke]:\n\u0026gt;  \u0026gt; PGE::Glob should have POD docs explaining the specific matching language\n\u0026gt;  that is used. See Tcl::Glob for an example.\n\u0026gt;  \u0026gt;\n\u0026gt;  \u0026gt; This will help clarify that there are two different syntaxes available.\n\u0026gt;\n\u0026gt;  Coke, I found very few differences between the PODs of these two files.\n\u0026gt;  The Tcl::Glob file has this section:\n\u0026gt;  {{{\n\u0026gt;     The following special characters are supported\n\u0026gt;\n\u0026gt;     \"?\" Matches any single character\n\u0026gt;\n\u0026gt;     \"*\" Matches any number of any characters, including no characters.\n\u0026gt;\n\u0026gt;     \"[chars]\"\n\u0026gt;         Matches any character in the given set. Sets are either a sequence\n\u0026gt;         of explicit characters, or a range specified with a dash, e.g.\n\u0026gt;         [aeiou] matches lower case ASCII vowels, while [a-z] matches any\n\u0026gt;         lowercase ASCII letter.\n\u0026gt;\n\u0026gt;     \"\\x\"\n\u0026gt;         Match a literal character, e.g. \\* matches the literal \"*\",\n\u0026gt;  avoiding\n\u0026gt;         its special meaning.\n\u0026gt;  }}}\n\u0026gt;  ... which has no counterpart in the PGE::Glob file.  But otherwise,\n\u0026gt;  PGE::Glob looks well documented.\n\u0026gt;\n\u0026gt;  Can you explain a bit more about what you think is missing?\n\u0026gt;\n\u0026gt;  Thank you very much.\n\u0026gt;\n\u0026gt;  kid51\n\u0026gt;\nThat missing bit you describe is exactly the bit I mention in the\nmissing ticket. The actual user-level syntax of the glob language used\nis never described in the docs.\n--\nWill \"Coke\" Coleda\n\u003c/pre\u003e","files":null}]}