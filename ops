{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1380771056,"metadata":{"github-id":"MDU6SXNzdWUyMDQzNTU4MA==","github-url":"https://github.com/parrot/parrot/issues/987","origin":"github"},"title":"Recursion limit is undocumented","message":"Reported by: zefram@fysh.org\n\nParrot imposes an arbitrary limit on recursion. The limit is changeable: it can be set via the \"recursion_limit\" method on the interpreter object obtained from getinterp, and setting it to -1 effectively removes the limit entirely. This facility is not mentioned in any of the documentation. It should be documented.\n\nIt should really be documented regardless of the default state of the limit. (I made a separate report arguing for a change to the default.) But it is especially important to document it when the default state is to impose a reachable limit, because in that case the limit has a significant effect on programming for Parrot. It is especially important to document how to remove the limit, and which code is responsible for removing the limit from a new interpreter.\n\n-zefram","files":null}]}