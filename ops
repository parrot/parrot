{"version":1,"ops":[{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1354823912,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTAxMjEx","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11101211"},"message":"Backtrace:\n\n```\n0314 set_returns PC3\n0316 returncc\n1e1d get_results PC0\n1e1f set_args PC2 (1), P1                                        PC2=FixedIntegerArray=PMC(0x5bb728) P1=Object(NQP;Grammar)=PMC(0x5d68ee8)\n1e22 callmethodcc P1, \"ws\"                                        P1=Object(NQP;Grammar)=PMC(0x5d68ee8) \n0b94 get_params PC2 (1), P1                                        PC2=FixedIntegerArray=PMC(0x5bb728) P1=PMCNULL\n0b97 set_args PC2 (1), P1                                        PC2=FixedIntegerArray=PMC(0x5bb728) P1=Object(NQP;Grammar)=PMC(0x5d68ee8)\n0b9a callmethodcc P1, \"!cursor_start\"                                        P1=Object(NQP;Grammar)=PMC(0x5d68ee8) \n01f8 get_params PC22 (3), P7, P8, I0                                        PC22=FixedIntegerArray=PMC(0x7ca150) P7=PMCNULL P8=PMCNULL I0=0\n01fd if I0, 6                                        I0=0 \n0200 set P8, P7                                        P8=PMCNULL P7=Object(NQP;Grammar)=PMC(0x5d68ee8)\n0203 set_args PC0 (1), P8                                        PC0=FixedIntegerArray=PMC(0x7954b8) P8=Object(NQP;Grammar)=PMC(0x5d68ee8)\n0206 callmethodcc P8, \"HOW\"                                        P8=Object(NQP;Grammar)=PMC(0x5d68ee8) \n0047 get_params PC0 (1), P2                                        PC0=FixedIntegerArray=PMC(0x7fc000) P2=PMCNULL\n004a typeof P0, P2                                        P0=PMCNULL P2=Object(NQP;Grammar)=PMC(0x5d68ee8)\n004d getprop P1, P0, \"metaclass\"                                        P1=PMCNULL P0=Class=PMC(0x3697350) \n0051 set_returns PC0 (1), P1                                        PC0=FixedIntegerArray=PMC(0x7fc000) P1=Object()=PMC(0x370dfa8)\n0054 returncc\n0209 get_results PC0 (1), P2                                        PC0=FixedIntegerArray=PMC(0x7954b8)\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff7aaf7a5 in Parrot_pa_insert (self=0x0, ptr=0x49b6f8) at ./include/parrot/pointer_array.h:91\n91      if (self-\u003enext_free) {\n(gdb) p self\n$1 = (Parrot_Pointer_Array *) 0x0\n(gdb) bt\n#0  0x00007ffff7aaf7a5 in Parrot_pa_insert (self=0x0, ptr=0x49b6f8) at ./include/parrot/pointer_array.h:91\n#1  0x00007ffff7ab15eb in gc_gms_mark_pmc_header (interp=0x412050, pmc=PMC\u003cFixedPMCArray\u003e = {...}) at src/gc/gc_gms.c:1217\n#2  0x00007ffff7aa7cbd in Parrot_gc_mark_PMC_alive_fun (interp=0x412050, obj=PMC\u003cFixedPMCArray\u003e = {...}) at src/gc/api.c:147\n#3  0x00007ffff7ab4561 in mark_interp (interp=0x412050) at src/gc/mark_sweep.c:217\n#4  0x00007ffff7ab4ad0 in mark_interp (interp=0x503300) at src/gc/mark_sweep.c:262\n#5  0x00007ffff7ab4479 in Parrot_gc_trace_root (interp=0x503300, mem_pools=0x0, trace=GC_TRACE_FULL) at src/gc/mark_sweep.c:189\n#6  0x00007ffff7ab00f9 in gc_gms_mark_and_sweep (interp=0x503300, flags=0) at src/gc/gc_gms.c:839\n#7  0x00007ffff7ab2549 in gc_gms_allocate_string_header (interp=0x503300, flags_unused=0) at src/gc/gc_gms.c:1626\n#8  0x00007ffff7aa84f3 in Parrot_gc_new_string_header (interp=0x503300, flags=0) at src/gc/api.c:368\n#9  0x00007ffff7a4031e in Parrot_str_clone (interp=0x503300, s=\" \") at src/string/api.c:354\n#10 0x00007ffff7c176e0 in Parrot_StringBuilder_get_string (interp=0x503300, _self=PMC\u003cStringBuilder\u003e = {...})\n    at src/pmc/stringbuilder.c:123\n#11 0x00007ffff7aff18e in Parrot_sprintf_format (interp=0x503300, pat=\" \", obj=0x7fffffffdb50) at src/string/spf_render.c:946\n#12 0x00007ffff7ace00f in Parrot_vsprintf_s (interp=0x503300, pat=\" \", args=0x7fffffffdc28) at src/string/sprintf.c:67\n#13 0x00007ffff7ace0c8 in Parrot_vsprintf_c (interp=0x503300, pat=0x7ffff7c8d4f7 \" \", args=0x7fffffffdc28) at src/string/sprintf.c:91\n#14 0x00007ffff7b18bfd in Parrot_io_eprintf (interp=0x503300, s=0x7ffff7c8d4f7 \" \") at src/io/api.c:1432\n#15 0x00007ffff7b02de4 in trace_op_dump (interp=0x412050, code_start=0x7abb00, pc=0x7acb48) at src/runcore/trace.c:430\n#16 0x00007ffff7b0334f in trace_op (interp=0x412050, code_start=0x7abb00, code_end=0x7bfd80, pc=0x7acb48) at src/runcore/trace.c:521\n#17 0x00007ffff7af2fde in runops_trace_core (interp=0x412050, pc=0x7acb48) at src/runcore/cores.c:582\n#18 0x00007ffff7af3121 in runops_slow_core (interp=0x412050, runcore_unused=0x4e7740, pc=0x4fc530) at src/runcore/cores.c:623\n#19 0x00007ffff7af21b2 in runops_int (interp=0x412050, offset=132) at src/runcore/main.c:220\n#20 0x00007ffff7ac6cc1 in runops (interp=0x412050, offs=132) at src/call/ops.c:123\n#21 0x00007ffff7abf820 in Parrot_pcc_invoke_from_sig_object (interp=0x412050, sub_obj=PMC\u003cContinuation\u003e = {...}, \n    call_object=PMC\u003cCallContext\u003e = {...}) at src/call/pcc.c:338\n#22 0x00007ffff7aa3258 in Parrot_ext_call (interp=0x412050, sub_pmc=0x5baee0, signature=0x7ffff7cdddea \"P-\u003e\") at src/extend.c:158\n#23 0x00007ffff7c21c04 in Parrot_Task_invoke (interp=0x412050, _self=PMC\u003cTask\u003e = {...}, next=0x0) at src/pmc/task.c:168\n#24 0x00007ffff7abf7bb in Parrot_pcc_invoke_from_sig_object (interp=0x412050, sub_obj=PMC\u003cTask\u003e = {...}, \n    call_object=PMC\u003cCallContext\u003e = {...}) at src/call/pcc.c:330\n#25 0x00007ffff7aa3258 in Parrot_ext_call (interp=0x412050, sub_pmc=0x500778, signature=0x7ffff7c8954d \"-\u003e\") at src/extend.c:158\n#26 0x00007ffff7af9b0d in Parrot_cx_next_task (interp=0x412050, scheduler=PMC\u003cScheduler\u003e = {...}) at src/scheduler.c:231\n#27 0x00007ffff7af974d in Parrot_cx_outer_runloop (interp=0x412050) at src/scheduler.c:149\n#28 0x00007ffff7af9675 in Parrot_cx_begin_execution (interp=0x412050, main=PMC\u003cSub\u003e = {...}, argv=PMC\u003cResizableStringArray\u003e = {...})\n    at src/scheduler.c:109\n#29 0x00007ffff7b0a4f3 in Parrot_pf_execute_bytecode_program (interp=0x412050, pbc=PMC\u003cPackfileView\u003e = {...}, \n    args=PMC\u003cResizableStringArray\u003e = {...}) at src/packfile/api.c:2830\n#30 0x00007ffff7a9b308 in Parrot_api_run_bytecode (interp_pmc=0x4dc2a8, pbc=0x500750, args=0x4e93c8) at src/embed/bytecode.c:161\n#31 0x0000000000401884 in main (argc=4, argv=0x7fffffffe678) at frontend/parrot2/main.c:172\n(gdb) up\n#1  0x00007ffff7ab15eb in gc_gms_mark_pmc_header (interp=0x412050, pmc=PMC\u003cFixedPMCArray\u003e = {...}) at src/gc/gc_gms.c:1217\n1217        item-\u003eptr = Parrot_pa_insert(self-\u003ework_list, item);\n(gdb) q\nA debugging session is active.\n```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1354825004,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTAxOTEx","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11101911"},"message":"How hard would it be to write a test for this?","files":null},{"type":3,"author":{"id":"646f0669ead6eaf64196bebf3884a5eff162357a"},"timestamp":1354825206,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTAyMDIw","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11102020"},"message":"I don't see why `work_list` would be null...  It's allocated near the beginning of `gc_gms_mark_and_sweep`, and decallocated near the end.  Why is `gc_gms_mark_pmc_header` getting called outside that window?  Did the allocation fail?  Is this a concurrency problem?","files":null},{"type":3,"author":{"id":"646f0669ead6eaf64196bebf3884a5eff162357a"},"timestamp":1354828394,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTA0MzY5","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11104369"},"message":"Even worse: this is called from `gc_gms_mark_and_sweep`.  From the double `mark_interp` in the backtrace, I'm guessing that this is while marking some thread's parent interp...  Perhaps its because that interp isn't currently doing GC?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1354851120,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTE3ODk1","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11117895"},"message":"Another, different backtrace, when bootstrapping nqp-rx \n\nparrot -t1 --library=src/stage0 src/stage0/nqp.pbc     --target=pir --output=src/stage1/gen/hllgrammar-actions.pir     src/HLL/Actions.pm\n\n```\n0977 if_null P4, 13                                        P4=PMCNULL \n0984 unless P9, 171                                        P9=Hash=PMC(0x7fe925f7a960) \n0987 getattribute P8, P7, \"$!target\"                                        P8=PMCNULL P7=Object(NQP;Grammar)=PMC(0x7fe9261ded60) \n098b getattribute P1, P7, \"$!pos\"                                        P1=PMCNULL P7=Object(NQP;Grammar)=PMC(0x7fe9261ded60) \n098f set I2, P1                                        I2=0 P1=Integer=PMC(0x7fe927857e00: 852)\n0992 substr S3, P8, I2, 1                                        S3=\"\" P8=String=PMC(0x7fe9250fbd38 Str:\"class HLL::Actions;\\n\") I2=852 \n0997 set I0, P2[S0=\"\"]                                        I0=0 P2=Hash=PMC(0x7fe925f7a938) \n099b substr S4, P8, I2, I0                                        S4=\"\" P8=src/gc/gc_gms.c:2383: failed assertion 'Dead object found!'\nBacktrace - Obtained 27 stack frames (max trace depth is 32).\n0   libparrot.dylib                     0x0000000105ef6062 Parrot_print_backtrace + 66\n1   libparrot.dylib                     0x0000000105ef53c7 Parrot_confess + 87\n2   libparrot.dylib                     0x0000000105f0092e gc_gms_validate_pmc + 110\n3   libparrot.dylib                     0x0000000105fa71df Parrot_FixedPMCArray_mark + 95\n4   libparrot.dylib                     0x0000000105f00b57 mark_interp + 71\n5   libparrot.dylib                     0x0000000105f00ac9 Parrot_gc_trace_root + 89\n6   libparrot.dylib                     0x0000000105efecb9 gc_gms_mark_and_sweep + 3353\n7   libparrot.dylib                     0x0000000105eff2e9 gc_gms_allocate_string_header + 73\n8   libparrot.dylib                     0x0000000105ef935f Parrot_gc_new_string_header + 31\n9   libparrot.dylib                     0x0000000105ebc394 Parrot_str_new_init + 84\n10  libparrot.dylib                     0x0000000105ebeca9 Parrot_str_escape_truncate + 137\n11  libparrot.dylib                     0x0000000105f307ef trace_pmc_dump + 367\n12  libparrot.dylib                     0x0000000105f31303 trace_op_dump + 1667\n13  libparrot.dylib                     0x0000000105f27a17 runops_slow_core + 423\n14  libparrot.dylib                     0x0000000105f273ad runops_int + 109\n15  libparrot.dylib                     0x0000000105f0bc26 runops + 454\n16  libparrot.dylib                     0x0000000105f06f10 Parrot_pcc_invoke_from_sig_object + 240\n17  libparrot.dylib                     0x0000000105ef67f4 Parrot_ext_call + 276\n18  libparrot.dylib                     0x0000000105fe9aa2 Parrot_Task_invoke + 210\n19  libparrot.dylib                     0x0000000105f06edb Parrot_pcc_invoke_from_sig_object + 187\n20  libparrot.dylib                     0x0000000105ef67f4 Parrot_ext_call + 276\n21  libparrot.dylib                     0x0000000105f2b82e Parrot_cx_outer_runloop + 78\n22  libparrot.dylib                     0x0000000105f2b675 Parrot_cx_begin_execution + 165\n23  libparrot.dylib                     0x0000000105f35a26 Parrot_pf_execute_bytecode_program + 550\n24  libparrot.dylib                     0x0000000105ef0fad Parrot_api_run_bytecode + 237\n25  parrot                              0x0000000105eae1c3 main + 2467\n26  libdyld.dylib                       0x00007fff87b697e1 start + 0\nAttempting to get PIR backtrace.  No guarantees.  Here goes...\nAbort trap: 6\n```\n\nWith lldv/gdb:\n\n```\nAttempting to get PIR backtrace.  No guarantees.  Here goes...\nProcess 49476 stopped\n* thread #1: tid = 0x1c03, 0x00007fff8cc9e212 libsystem_kernel.dylib`__pthread_kill + 10, stop reason = signal SIGABRT\n    frame #0: 0x00007fff8cc9e212 libsystem_kernel.dylib`__pthread_kill + 10\nlibsystem_kernel.dylib`__pthread_kill + 10:\n-\u003e 0x7fff8cc9e212:  jae    0x7fff8cc9e219            ; __pthread_kill + 17\n   0x7fff8cc9e214:  jmpq   0x7fff8cc9f4d4            ; cerror_nocancel\n   0x7fff8cc9e219:  ret    \n   0x7fff8cc9e21a:  nop    \nbt\n* thread #1: tid = 0x1c03, 0x00007fff8cc9e212 libsystem_kernel.dylib`__pthread_kill + 10, stop reason = signal SIGABRT\n    frame #0: 0x00007fff8cc9e212 libsystem_kernel.dylib`__pthread_kill + 10\n    frame #1: 0x00007fff859c1af4 libsystem_c.dylib`pthread_kill + 90\n    frame #2: 0x00007fff85a05dce libsystem_c.dylib`abort + 143\n    frame #3: 0x00000001000483cc libparrot.dylib`Parrot_confess + 92 at exceptions.c:586\n    frame #4: 0x000000010005392e libparrot.dylib`gc_gms_validate_pmc + 110 at gc_gms.c:2383\n    frame #5: 0x00000001000fa1df libparrot.dylib`Parrot_FixedPMCArray_mark + 95 at fixedpmcarray.c:408\n    frame #6: 0x0000000100053b57 libparrot.dylib`mark_interp + 71 at mark_sweep.c:217\n    frame #7: 0x0000000100053ac9 libparrot.dylib`Parrot_gc_trace_root + 89 at mark_sweep.c:189\n    frame #8: 0x0000000100051cb9 libparrot.dylib`gc_gms_mark_and_sweep [inlined] gc_gms_validate_objects + 60 at gc_gms.c:2418\n    frame #9: 0x0000000100051c7d libparrot.dylib`gc_gms_mark_and_sweep + 3293 at gc_gms.c:891\n    frame #10: 0x00000001000522e9 libparrot.dylib`gc_gms_allocate_string_header + 73 at gc_gms.c:1628\n    frame #11: 0x000000010004c35f libparrot.dylib`Parrot_gc_new_string_header + 31 at api.c:368\n    frame #12: 0x000000010000f75a libparrot.dylib`Parrot_str_copy + 58 at api.c:397\n    frame #13: 0x000000010013fd3e libparrot.dylib`fixed_substr + 126 at shared.c:1042\n    frame #14: 0x000000010002d663 libparrot.dylib`Parrot_substr_s_p_i_ic + 83 at core_ops.c:21147\n    frame #15: 0x000000010007a9f6 libparrot.dylib`runops_slow_core [inlined] runops_trace_core + 302 at cores.c:581\n    frame #16: 0x000000010007a8c8 libparrot.dylib`runops_slow_core + 88 at cores.c:623\n    frame #17: 0x000000010007a3ad libparrot.dylib`runops_int + 109 at main.c:220\n    frame #18: 0x000000010005ec26 libparrot.dylib`runops + 454 at ops.c:123\n    frame #19: 0x0000000100059f10 libparrot.dylib`Parrot_pcc_invoke_from_sig_object + 240 at pcc.c:338\n    frame #20: 0x00000001000497f4 libparrot.dylib`Parrot_ext_call + 276 at extend.c:158\n    frame #21: 0x000000010013caa2 libparrot.dylib`Parrot_Task_invoke + 210 at task.c:168\n    frame #22: 0x0000000100059edb libparrot.dylib`Parrot_pcc_invoke_from_sig_object + 187 at pcc.c:330\n    frame #23: 0x00000001000497f4 libparrot.dylib`Parrot_ext_call + 276 at extend.c:158\n    frame #24: 0x000000010007e82e libparrot.dylib`Parrot_cx_outer_runloop + 78 at scheduler.c:149\n    frame #25: 0x000000010007e675 libparrot.dylib`Parrot_cx_begin_execution + 165 at scheduler.c:109\n    frame #26: 0x0000000100088a26 libparrot.dylib`Parrot_pf_execute_bytecode_program + 550 at api.c:2830\n    frame #27: 0x0000000100043fad libparrot.dylib`Parrot_api_run_bytecode + 237 at bytecode.c:161\n    frame #28: 0x00000001000011c3 parrot`main + 2467 at main.c:172\n    frame #29: 0x00007fff87b697e1 libdyld.dylib`start + 1\n(lldb) up 4\nframe select -r 4\nframe #4: 0x000000010005392e libparrot.dylib`gc_gms_validate_pmc + 110 at gc_gms.c:2383\n   2380     ASSERT_ARGS(gc_gms_validate_pmc)\n   2381 \n   2382     if (PObj_on_free_list_TEST(pmc))\n-\u003e 2383         Parrot_confess(\"Dead object found!\", __FILE__, __LINE__);\n   2384 \n   2385     if (PObj_live_TEST(pmc))\n   2386         return;\n```\n\nSo my fix was indeed premature, and we need to stop the GC traversing into other threads interps.","files":null},{"type":3,"author":{"id":"507abfae537e007c08969e763a32a0acbd878b1b"},"timestamp":1354871915,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMTIzNTkz","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11123593"},"message":"On Thursday 06 December 2012 13:13:15 Brian Gernhardt wrote:\n\n\u003e Even worse: this is called from `gc_gms_mark_and_sweep`.  From the double\n\u003e `mark_interp` in the backtrace, I'm guessing that this is while marking\n\u003e some thread's parent interp...  Perhaps its because that interp isn't\n\u003e currently doing GC?\n\nThis should not happen. Have a look at src/pmc/parrotinterpreter.pmc line 111.\nI explicitely set d-\u003eparent_interpreter = NULL; and again in src/thread.c line \n78:\n/\\* Parrot_pmc_new sets parent_interpreter which would confuse the GC */\nnew_interp-\u003eparent_interpreter = NULL;\n\nBut from the backtrace I see, that it's not one of the worker threads anyway. \nYour main interp seems to have a parent_interpreter. No idea why it would have \none.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1355512357,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMzg4MzE3","github-url":"https://github.com/parrot/parrot/issues/875#issuecomment-11388317"},"message":"Related to #880.","files":null}]}