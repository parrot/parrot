{"version":1,"ops":[{"type":1,"author":{"id":"bca615f854f7ca1044265d74ef4974a08d695fb1"},"timestamp":1319392695,"metadata":{"github-id":"MDU6SXNzdWUyMDI3ODE4","github-url":"https://github.com/parrot/parrot/issues/182","origin":"github"},"title":"Segfault + seemingly crazy memory gobbling","message":"This program reliably segfaults for me:\n\n```\n.sub bb\n    $P0 = new 'ByteBuffer'\n    $P0 = 100\n    $I0 = 0\n  loop:\n    $I1 = $I0 + 1\n    $P0[$I0] = $I1\n    inc $I0\n    unless $I0 == 100 goto loop\n    .return ($P0)\n.end\n\n.sub main :main\n    $P0 = new 'ByteBuffer'\n    $P0 = 1\n    $P0[0] = 1\n    $I0 = 0\nloop:\n    $P1 = 'bb'()\n    $S0 = $P0.'get_string'('binary')\n    $S1 = $P1.'get_string'('binary')\n    $S0 = concat $S0, $S1\n    $P0 = new 'ByteBuffer'\n    $P0 = $S0\n    inc $I0\n    unless $I0 == 10000 goto loop\n.end\n```\n\nIt does so in the function move_one_buffer in string_gc.c\n\nAlso rather worrying is that - even though the longest buffer string it should ever construct is 10000 \\* 100 bytes (and I guess it segfaults before it gets there) - at the point it segfaults it has eaten 2.7 GB of RAM!","files":null}]}