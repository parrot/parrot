{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1348078775,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg3MDA5NTc=","github-url":"https://github.com/parrot/parrot/issues/837#issuecomment-8700957"},"message":"Thanks for the great bug report! I am working on converting these into failing tests in t/pmc/string.t","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1348103299,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg3MTM5Mzc=","github-url":"https://github.com/parrot/parrot/issues/837#issuecomment-8713937"},"message":"Here is a backtrace from ascii_scan in src/string/encoding/ascii.c\n\n```\n(gdb) bt\n#0  ascii_scan (interp=0x100503ba0, src=0x10081e218) at ascii.c:171\n#1  0x0000000100011f32 in Parrot_str_new_init (interp=0x100503ba0, buffer=0x10027b960 \"ascii\", len=5, encoding=0x10031b500, flags=12288) at api.c:676\n#2  0x0000000100013229 in Parrot_str_new_constant (interp=0x100503ba0, buffer=0x10027b960 \"ascii\") at api.c:629\n#3  0x0000000100074d80 in Parrot_str_internal_register_encoding_names (interp=0x100503ba0) at encoding.c:383\n#4  0x00000001000750b6 in Parrot_encodings_init (interp=0x100503ba0) at encoding.c:456\n#5  0x0000000100011d43 in Parrot_str_init (interp=0x100503ba0) at api.c:155\n#6  0x000000010009df70 in Parrot_interp_initialize_interpreter (interp=0x100503ba0, args=0x7fff5fbff250) at api.c:262\n#7  0x000000010006a090 in Parrot_api_make_interpreter (parent=0x0, flags=0, args=0x100503b70, interp=0x7fff5fbff368) at api.c:154\n#8  0x0000000100000c1c in main (argc=2, argv=0x7fff5fbff3a8) at main.c:142\n```\n\nIt seems like we have a bug in src/string/api.c on line 629. Parrot_str_new_constant always creates new strings with the default encoding, which seems wrong to me.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1348104384,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg3MTQxODM=","github-url":"https://github.com/parrot/parrot/issues/837#issuecomment-8714183"},"message":"This problem is actually deeper than the concat operator. This even simpler test program:\n\n```\n.sub 'main' :main\n    $S1 = utf8:\"\\x{a2}\"\n    say $S1\n.end\n```\n\nhas a similar backtrace as above:\n\n```\n(gdb) bt\n#0  ascii_scan (interp=0x100503b80, src=0x10081e218) at ascii.c:171\n#1  0x0000000100011f32 in Parrot_str_new_init (interp=0x100503b80, buffer=0x10027b960 \"ascii\", len=5, encoding=0x10031b500, flags=12288) at api.c:676\n#2  0x0000000100013229 in Parrot_str_new_constant (interp=0x100503b80, buffer=0x10027b960 \"ascii\") at api.c:629\n...\n```\n\nIt seems to me that string constants have a bug where they are internally marked as \"ascii\" even if they shouldn't be. This seemingly does not manifest as a bug until you call concat() on them. Other string related functions may have similar bugs because of this.\n\nThis bug could be related to the \"fast path\" here: https://github.com/parrot/parrot/blob/master/src/string/api.c#L665","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1348122768,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg3MTc5NjY=","github-url":"https://github.com/parrot/parrot/issues/837#issuecomment-8717966"},"message":"Fixed with 8a56a8e79c636325d646a029ba01c16b36f71644\n\nBut the real problem is that SREG registers nor constants cannot handle STRING values, so we loose the encoding information and have to escape and unescape the raw char \\* with encoding prefix multiple times internally.\nI have no idea if the GC cannot handle STRING pointers, but it should.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1348601850,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg4NjcyODE=","github-url":"https://github.com/parrot/parrot/issues/838#issuecomment-8867281"},"message":"Merged gh838_cmdline_cleanup with eaa1466dda9172fb84701c7ac2e8db266f053fea\nImproved with 4879083ea39e288d405c81007b249a03bdb72bba","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1348601851,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjU0MDAyMjk="},"status":2}]}