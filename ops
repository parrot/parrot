{"version":1,"ops":[{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1237245247,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTc=","github-url":"https://github.com/parrot/parrot/issues/269#issuecomment-3502557"},"message":"\u003cp\u003e\nWe probably need some documentation of the PAST::Control node type (perhaps Tene++ can do this) -- other than that the current set of documentation is largely up to date as of r37485.\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1305852372,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTg=","github-url":"https://github.com/parrot/parrot/issues/269#issuecomment-3502558"},"message":"\u003cp\u003e\nCan we get more specifics about this TT?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1305857769,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NTk=","github-url":"https://github.com/parrot/parrot/issues/269#issuecomment-3502559"},"message":"\u003cp\u003e\nTene++ added a PAST::Control type some time ago.  The documentation of that type has never been added to pdd26_ast.pod nor to the PAST/Node.pir file that defines it.  So, all that needs to be done is to add that documentation and this ticket can be closed.\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0235f28edaf05dd9f136a531f8b7d9c8cf4dc260"},"timestamp":1350455911,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk1MTc0MjM=","github-url":"https://github.com/parrot/parrot/issues/269#issuecomment-9517423"},"message":"Looking at PAST/Node.pir, ddab786a9398ef0e9 removed the PAST::Control type (merging it into PAST::Node). If that is still the only condition of this ticket, it seems it could be closed.\n\nLooking more broadly, it does seem that pdd26 has fallen out of sync with PAST/Node.pir. It also seems that there are several 'new_class' invocations within Node.pir that do not have corresponding types. Here's the snippet that I'm talking about:\n\n``` pir\n.sub 'onload' :anon :load :init\n    ##   create the PAST::Node base class\n    .local pmc p6meta, base\n    p6meta = new 'P6metaclass'\n    base = p6meta.'new_class'('PAST::Node', 'parent'=\u003e'PCT::Node')\n\n    p6meta.'new_class'('PAST::Op', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Stmts', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Stmt', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Val', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Var', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Block', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::Control', 'parent'=\u003ebase)\n    p6meta.'new_class'('PAST::VarList', 'parent'=\u003ebase)\n\n    .return ()\n.end\n```\n\nWould it be prudent to remove the 'new_class' statements that don't have matching implementations? Of course, that's outside the scope of this ticket.","files":null},{"type":3,"author":{"id":"646f0669ead6eaf64196bebf3884a5eff162357a"},"timestamp":1350482922,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk1Mjg0Nzc=","github-url":"https://github.com/parrot/parrot/issues/269#issuecomment-9528477"},"message":"@dafrito - if you examine Node.pir, there are methods added to the namespaces for most of those classes.  And the ones that don't have methods generally exist as containers to mark some division and have comments to that effect in the file.  I don't see a single class in that list that isn't used.\n\nI would suggest someone make a comparison between the PDD26 and the POD for PAST/Node.pir (and probably PCT/Node.pir and POST/Node.pir as well).  It shouldn't take terribly long.  If the types described in both match, then this ticket can probably be closed.","files":null}]}