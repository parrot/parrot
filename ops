{"version":1,"ops":[{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1345131486,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc3ODkxNzk=","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-7789179"},"message":"There are a least two issues here... Rakudo's splice function is sending incorrect values to Parrot's splice opcode, _and_ there's a problem with Parrot's splice in handling strange offsets and counts.  I can easily fix these in Rakudo and NQP, but I probably need some better idea of Parrot's desired splice opcode semantics for negative counts and offsets beyond the end of the array.  Do we basically want to follow p5 semantics?\n\nPm","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1345138190,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc3OTI3MjU=","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-7792725"},"message":"I think following p5 semantics for splicing + counts/offsets is a good starting point.","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1345142948,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc3OTQ5OTQ=","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-7794994"},"message":"Parrot's splice opcode is not frequently used, and I don't think there's any clear description of what it's semantics are supposed to be (especially for \"strange offsets and counts\"). I'm inclined, if there are ambiguities, to default to whatever the desired p6 semantics are supposed to be. Where we don't have coherent designs, I'm not against stealing them from people who have real, current needs.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1345153860,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc4MDA4MDM=","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-7800803"},"message":"+1 for splice semantics closest to what Rakudo/NQP need. I can help with writing tests, just let me know what you need","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1355257725,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMjYxNzY0","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-11261764"},"message":"Has there been any progress on this? Does the bug still exist?","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1355267592,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMjY5Mjkz","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-11269293"},"message":"The bug still exists, but there is not even a parrot testcase for it. \nI've talked to pmichaud about it. The code in question is super tricky, he wrote it. He kindly offered to fix it, as soon as we spec'd the semantics. \n\nWe agreed to follow p5 splicing + negative counts/offsets semantics.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1415539895,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMzAzNTEy","github-url":"https://github.com/parrot/parrot/issues/766#issuecomment-62303512"},"message":".pir testcase to repro the args\n\n```\n    # GH 766 heap-buffer-overflow with asan\n    $P1 = new ['ResizablePMCArray']\n    $P2 = new ['ResizablePMCArray']\n    $P1 = 0\n    $P2 = 0\n    splice $P1, $P2, 0, -1\n```\n\nFound plenty of more testcases for the asan heap overflow with negative count. \nSee `rurban/rpa-splice-gh766` e490c7c\n\n```\n    not ok 11 - ResizablePMCArray.splice 0, 0, 0, -2\n    not ok 12 - ResizablePMCArray.splice 0, 0, 0, -1\n    not ok 16 - ResizablePMCArray.splice 0, 0, 1, -2\n    not ok 36 - ResizablePMCArray.splice 0, 1, 0, -2\n    not ok 37 - ResizablePMCArray.splice 0, 1, 0, -1\n    not ok 41 - ResizablePMCArray.splice 0, 1, 1, -2\n    not ok 61 - ResizablePMCArray.splice 0, 2, 0, -2\n    not ok 62 - ResizablePMCArray.splice 0, 2, 0, -1\n    not ok 66 - ResizablePMCArray.splice 0, 2, 1, -2\n    not ok 81 - ResizablePMCArray.splice 1, 0, -1, -2\n    not ok 82 - ResizablePMCArray.splice 1, 0, -1, -1\n    not ok 86 - ResizablePMCArray.splice 1, 0, 0, -2\n    not ok 87 - ResizablePMCArray.splice 1, 0, 0, -1\n    not ok 91 - ResizablePMCArray.splice 1, 0, 1, -2\n    not ok 106 - ResizablePMCArray.splice 1, 1, -1, -2\n    not ok 107 - ResizablePMCArray.splice 1, 1, -1, -1\n    not ok 111 - ResizablePMCArray.splice 1, 1, 0, -2\n    not ok 112 - ResizablePMCArray.splice 1, 1, 0, -1\n    not ok 116 - ResizablePMCArray.splice 1, 1, 1, -2\n    not ok 131 - ResizablePMCArray.splice 1, 2, -1, -2\n    not ok 132 - ResizablePMCArray.splice 1, 2, -1, -1\n    not ok 136 - ResizablePMCArray.splice 1, 2, 0, -2\n    not ok 137 - ResizablePMCArray.splice 1, 2, 0, -1\n    not ok 141 - ResizablePMCArray.splice 1, 2, 1, -2\n    not ok 151 - ResizablePMCArray.splice 2, 0, -2, -2\n    not ok 152 - ResizablePMCArray.splice 2, 0, -2, -1\n    not ok 156 - ResizablePMCArray.splice 2, 0, -1, -2\n    not ok 161 - ResizablePMCArray.splice 2, 0, 0, -2\n    not ok 162 - ResizablePMCArray.splice 2, 0, 0, -1\n    not ok 166 - ResizablePMCArray.splice 2, 0, 1, -2\n    not ok 176 - ResizablePMCArray.splice 2, 1, -2, -2\n    not ok 177 - ResizablePMCArray.splice 2, 1, -2, -1\n    not ok 181 - ResizablePMCArray.splice 2, 1, -1, -2\n    not ok 186 - ResizablePMCArray.splice 2, 1, 0, -2\n    not ok 187 - ResizablePMCArray.splice 2, 1, 0, -1\n    not ok 191 - ResizablePMCArray.splice 2, 1, 1, -2\n    not ok 201 - ResizablePMCArray.splice 2, 2, -2, -2\n    not ok 202 - ResizablePMCArray.splice 2, 2, -2, -1\n    not ok 206 - ResizablePMCArray.splice 2, 2, -1, -2\n    not ok 211 - ResizablePMCArray.splice 2, 2, 0, -2\n    not ok 212 - ResizablePMCArray.splice 2, 2, 0, -1\n    not ok 216 - ResizablePMCArray.splice 2, 2, 1, -2\n```","files":null},{"type":2,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1415610076,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTkwNjUxMzU4"},"title":"resizablepmcarray splice heap-buffer-overflow with negative count arg","was":"With --leak-test at the final interp-\u003eexit_handler_list = NULL; interp is already freed "},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1415639926,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTkwOTAzODEy"},"status":2}]}