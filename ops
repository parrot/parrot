{"version":1,"ops":[{"type":3,"author":{"id":"96fb2e2e33b59677e3a85ec74746c085275c50d1"},"timestamp":1254159902,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTI=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503992"},"message":"\u003cp\u003e\nmessed the note up - should be:\n\u003c/p\u003e\n\n\u003cp\u003e\nNote that the failure (0x4abfaa1e expected 0x4abfaa1d) and (0x4abfaa1d expected 0x4abfaa1c) in the 9th line of output seems to be the same failure.\n\u003c/p\u003e\n\n\u003cp\u003e\n(Copy-paste doesn't seem to work too well in Trac)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1254164730,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTM=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503993"},"message":"\u003cpre class=\"wiki\"\u003eOn Mon, 28 Sep 2009, Parrot wrote:\n\u0026gt;  It has failed twice for me recently - pretty much in the same way (see\n\u0026gt;  below) but in both cases when I re-ran the test it PASSed.\n\u0026gt;  In fact in the last couple of days I have run the test many times\n\u0026gt;  (considering that it is run 7 times for each of my test runs, once in\n\u0026gt;  smoke and 6 times (once for each core) in fulltest.  As I have logged 6\n\u0026gt;  test runs since the first failure (+ other runs not recorded) I have run\n\u0026gt;  the test more than 50 times with 2 failures.\n\u0026gt;  Note that the failure (0x4ac081ae expected 0x4abfaa1d) and (0x4ac081ad\n\u0026gt;  expected 0x4abfaa1c) in the 9th line of output seems to be the same\n\u0026gt;  failure.\nThe 9th element is the 'atime last access time in seconds since the\nepoch'.  This simply means that between the time when perl did the stat on\nthe file (to get the 'Expected' values) and when parrot did a stat on the\nfile, the internal clock ticked over one second.\nThis sort of error is to be expected in any test that involves timing, and\nthe parrot test suite ought to be a bit more forgiving here, but I don't\nthink there's anything deeper going on.\n--\n    Andy Dougherty      doughera@lafayette.edu\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"56b030459ff5c3e63b58d71e1bed10897e6a7686"},"timestamp":1254188243,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTQ=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503994"},"message":"\u003cpre class=\"wiki\"\u003eOn Monday 28 September 2009 03:35:01 Parrot wrote:\n\u0026gt;- I am getting an intermittent failure with t/pmc/os.t - test 9 on Ubuntu\n\u0026gt; 9.04 amd64.\n\u0026gt;  Note that the failure (0x4ac081ae expected 0x4abfaa1d) and (0x4ac081ad\n\u0026gt;  expected 0x4abfaa1c) in the 9th line of output seems to be the same\n\u0026gt;  failure.\nGiven that the ninth element of the list returned from the lstat() method is a\nfile's atime, there's a race condition here a parallel test or a test on a\nheavily loaded system might encounter.\nPerhaps we should check a delta against the time-based fields (nine through\neleven).\n-- c\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1254307826,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTU=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503995"},"message":"\u003cp\u003e\nI think if we just test that the ninth through eleventh fields are \u0026gt;= to their original values, that would be sufficient.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"96fb2e2e33b59677e3a85ec74746c085275c50d1"},"timestamp":1254336988,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTY=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503996"},"message":"\u003cp\u003e\nThe only times I have had a failure with this (only twice in a large number of tests) - it has been the atime (access time) component that has differed by 1 (second).  What the test does: it runs a perl \"stat\" and places that in the \u0026lt;\u0026lt;CODE portion of the pir_output_is and then runs the pir code which calls the os.pmc \"stat\" function from pir and compares the output.  Under most circumstances this would be equal - but in rare circumstances the access time of the two different calls could differ since the two calls could be just before and just after the second tick.  The access time is the only aspect of the test that could differ.  It would entail a complete rewrite of the test and using the access functions for individual elements, which would of course, give better coverage - so maybe it is worthwhile.\n\u003c/p\u003e\n\n\u003cp\u003e\nI will make an attempt at this \"real soon now\", when I have some time available for it - but it is not a high priority. Unless someone beats me to it :-}\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1254341879,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTc=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503997"},"message":"\u003cp\u003e\nIf anyone does modify this test, it would be useful to fix TT \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/457\" title=\"bug: t/dynpmc/os.t has invalid stat() and lstat() tests. (new)\"\u003e#457\u003c/a\u003e at the same time.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"96fb2e2e33b59677e3a85ec74746c085275c50d1"},"timestamp":1284997959,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM5OTg=","github-url":"https://github.com/parrot/parrot/issues/685#issuecomment-3503998"},"message":"\u003cp\u003e\nthe test was moved from t/pmc/os.t to t/dynpmc/os.t at r46259\n\u003c/p\u003e","files":null},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1394553776,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MTAwOTIxNTEx"},"added":[],"removed":["Bug"]},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1394553781,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDEwMDkyMTU2NA=="},"added":["To-verify"],"removed":[]}]}