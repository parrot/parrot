{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1421912771,"metadata":{"github-id":"MDU6SXNzdWU1NTEyMzc4Nw==","github-url":"https://github.com/parrot/parrot/issues/1186","origin":"github"},"title":"GC regression --optimize caused by PARROT_CANNOT_RETURN_NULL","message":"A wrong `PARROT_CANNOT_RETURN_NULL` in `Parrot_pf_get_current_code_segment` (unchecked return of `inter-\u003ecode`, which can be null) causes GC segfaults when `inter-\u003ecode == NULL`.\n\nrepro:\n`perl Configure.pl --debugging='-g -O2' --silent \u0026\u0026 make -s \u0026\u0026 prove t/stress/gc.t`\n`gdb --args ./parrot_old -t11 --gc-debug --gc-nursery-size=0.0001 t/stress/gc_1.pir`\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\nmark_code_segment (interp=0x60d060) at src/gc/mark_sweep.c:288\n288         PackFile_ConstTable *ct = bc-\u003econst_table;\n(gdb) bt\n#0  mark_code_segment (interp=0x60d060) at src/gc/mark_sweep.c:288\n#1  mark_interp (interp=interp@entry=0x60d060) at src/gc/mark_sweep.c:267\n(gdb) p bc\n$1 = (PackFile_ByteCode *) 0x0\n```\n\nThis wrong PARROT_CANNOT_RETURN_NULL was added with 3.6.0\nin 7dc0e2276d3612afd at Wed Jun 29 20:52:24 2011,\nbut started being fatal after the new packfile refactor with 7.0,\nwhen the cc optimizer started optimizing away the `bc != NULL` check\nin `mark_code_segment()`","files":null}]}