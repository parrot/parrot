{"version":1,"ops":[{"type":1,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1238118465,"metadata":{"github-id":"MDU6SXNzdWUyODQ4Njk1","github-url":"https://github.com/parrot/parrot/issues/487","origin":"github"},"title":"avoid 2038 bug","message":"Original reported here: http://rt.perl.org/rt3/Ticket/Display.html?id=57728\n\n```\n\u003e\u003e we definitely need date/time pmc(s?) not only to have a common epoch\n\u003e\u003e across platforms, but to deal with 2038. in particular, we should\n\u003e\u003e leverage schwern's work on perl to address the 2038 bug.\n\u003e\u003e ~jerry\n\u003e\n\u003e We definitely haven't already fixed this. Here's an easy test using\n\u003e libfaketime:\n\u003e\n\u003e $ cat time.pir\n\u003e .sub main :main\n\u003e .local int time_int\n\u003e time time_int\n\u003e say time_int\n\u003e .end\n\u003e $ ./parrot time.pir\n\u003e 1222213121\n\u003e $ LD_PRELOAD=/usr/src/libfaketime-0.8/libfaketime.so.1 FAKETIME=\"+40y\"\n\u003e ./parrot time.pir\n\u003e -1811314167\n\nWe can't make this example work. If you use an INTVAL, and the INTVAL\ncan be signed 32 bits, there is no way to have a more than 31 bits\nunsigned stored on it as such.\n\n-- \nSalu2\n```\n\nSince this is unlikely to get resolved shortly and only has a small amount of history, moving tracking of issue here.\n\nOriginally http://trac.parrot.org/parrot/ticket/505","files":null}]}