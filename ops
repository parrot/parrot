{"version":1,"ops":[{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1380989077,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI1NzUxMjEx","github-url":"https://github.com/parrot/parrot/issues/1001#issuecomment-25751211"},"message":"I (zefram@fysh.org) wrote:\n\n\u003e Furthermore, the subclass op apparently _can_ create an anonymous _sub_class. If it's used without a third operand, it returns a class metaobject and does not put anything new into the global namespace.\n\nLooking at the implementation, it appears that a class's method namespace is reachable by a direct reference from the class metaobject, which ought to make it possible for anonymous classes to work. The implementations of the newclass and subclass ops also make it pretty obvious that a class could be created with neither name nor superclass.\n\nHowever, much of the logic around classes (especially in the \"isa_pmc\" implementations) uses class names as cache keys and as a proxy to compare classes. So anonymous classes probably won't work in these basic operations. These should be reimplemented based strictly on the class metaobjects.\n\nIncidentally, lazy creation of the PMCProxy objects seems a false economy. Might as well create them up front, and use them freely in class logic.\n\n-zefram","files":null}]}