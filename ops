{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235472899,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwNzk=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503079"},"message":"444 byte attachment from leto\nat http://trac.parrot.org/parrot/raw-attachment/ticket/370/rounding-nan-test.patch\n\n```\nIndex: t/op/arithmetics.t\n===================================================================\n--- t/op/arithmetics.t  (revision 36952)\n+++ t/op/arithmetics.t  (working copy)\n@@ -359,6 +359,19 @@\n -124\n OUTPUT\n\n+pasm_output_is( \u003c\u003c'CODE', \u003c\u003cOUTPUT, \"rounding NaN gives NaN\" );\n+       set N0, 'NaN'\n+       floor N0\n+       say N0\n+       set N1, 'NaN'\n+       ceil N1\n+       say N1\n+CODE\n+NaN\n+NaN\n+OUTPUT\n+\n+\n #\n # FLOATVAL and INTVAL tests\n #\n```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235473832,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODA=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503080"},"message":"379 byte attachment from leto\nat http://trac.parrot.org/parrot/raw-attachment/ticket/370/complete_error.txt\n\n```t/op/arithmetics....ok 1/29                                                  \n\n# Failed test 'rounding NaN gives NaN'\n\n# at t/op/arithmetics.t line 362.\n\n# Exited with error code: 1\n\n# Received:\n\n# NaN\n\n# NaN\n\n# attempt to access code outside of current code segment\n\n# current instr.: '(null)' pc 12 (/Users/leto/svn/parrot/t/op/arithmetics_12.pasm:6)\n\n# \n\n# Expected:\n\n# NaN\n\n# NaN\n\n# \n\n```\n```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235479384,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODE=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503081"},"message":"1005 byte attachment from leto\nat http://trac.parrot.org/parrot/raw-attachment/ticket/370/passing-nan-tests.patch\n\n# ```Index: t/op/arithmetics.t\n\n--- t/op/arithmetics.t  (revision 36952)\n+++ t/op/arithmetics.t  (working copy)\n@@ -7,7 +7,7 @@\n use lib qw( . lib ../lib ../../lib );\n\n use Test::More;\n-use Parrot::Test tests =\u003e 29;\n+use Parrot::Test tests =\u003e 31;\n\n # test for GMP\n use Parrot::Config;\n@@ -359,6 +359,43 @@\n -124\n OUTPUT\n\n+\n+pir_output_is( \u003c\u003c'CODE', \u003c\u003cOUTPUT, \"rounding NaN gives NaN\" );\n+.sub main\n-       $N0 = 'NaN'\n-       $N2 = floor $N0\n-       say $N2\n-       $N1 = 'NaN'\n-       $N3 = ceil $N1\n-       say $N3\n  +.end\n  +CODE\n  +NaN\n  +NaN\n  +OUTPUT\n  +\n  +pir_output_is( \u003c\u003c'CODE', \u003c\u003cOUTPUT, \"rounding Inf gives Inf\");\n  +.sub main\n-       $N0 = 'Inf'\n-       $N1 = floor $N0\n-       say $N1\n-       $N2 = 'Inf'\n-       $N3 = ceil $N2\n-       say $N3\n  +\n-       $N0 = '-Inf'\n-       $N1 = floor $N0\n-       say $N1\n-       $N2 = '-Inf'\n-       $N3 = ceil $N2\n-       say $N3\n  +.end\n  +CODE\n  +Inf\n  +Inf\n  +-Inf\n  +-Inf\n  +OUTPUT\n  #\n  # FLOATVAL and INTVAL tests\n  #\n\n```\n```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235494499,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODI=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503082"},"message":"\u003cp\u003e\nAttempt at testing rounding of NaN, but I get runtime error about 'attempt to access code outside of current code segment'\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235495432,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODM=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503083"},"message":"\u003cp\u003e\nComplete Error message of the failing example test\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235500984,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODQ=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503084"},"message":"\u003cp\u003e\nPassing NaN-rounding-related tests\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1235501365,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODU=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503085"},"message":"\u003cp\u003e\nAfter a little more digging, it seems that Rakudo's floor() passes the string 'NaN' down to Parrot's rounding functions, but PASM's floor() and cousins only act on numeric registers, so 'NaN' and 'Inf' turn into some machine-dependent integer. Code written in PIR works just fine though.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1235521299,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODY=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503086"},"message":"\u003cp\u003e\nPer original poster, this is a rakudo issue, not a parrot issue; created a ticket for rakudo at\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ca   href=\"http://rt.perl.org/rt3/Ticket/Display.html?id=63440\"\u003e\u003cspan class=\"icon\"\u003eÂ \u003c/span\u003ehttp://rt.perl.org/rt3/Ticket/Display.html?id=63440\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nwhich just points back here for now. Resolving ticket.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1235526387,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODc=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503087"},"message":"\u003cp\u003e\nA shortened version of the patch for the arithmetic test added in r36971\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1235909265,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwODg=","github-url":"https://github.com/parrot/parrot/issues/422#issuecomment-3503088"},"message":"\u003cp\u003e\n(reopening ticket with message I sent to parrot-dev earlier this week)\n\u003c/p\u003e\n\n\u003cp\u003e\nFWIW, I don't entirely agree with the premise that this is\nstrictly a Rakudo bug.  I find that Parrot has some undefined\nbehavior when dealing with NaN, Inf, and integers, and little\ndocumentation to indicate what the expected behavior (if any)\nshould be.  As an example:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e    $ cat x.pir\n    .sub 'main'\n        $N0 = 3.5\n        say $N0\n        $I0 = floor $N0\n        say $I0\n        $N0 = 'Inf'\n        say $N0\n        $I0 = floor $N0\n        say $I0\n    .end\n    $ ./parrot x.pir\n    3.5\n    3\n    Inf\n    -2147483648\n    $\n\u003c/pre\u003e\u003cp\u003e\nOn my machine, Parrot seems to always treat an integer\nconversion of any infinity as -2147483648.  Better would\nseem to be to throw a range exception or the like, instead\nof silently converting to a non-infinite integer value.\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1261129761,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMxMDM=","github-url":"https://github.com/parrot/parrot/issues/429#issuecomment-3503103"},"message":"\u003cp\u003e\n1.  Do we still get these warnings on 10.5?\n\u003c/p\u003e\n\n\u003cp\u003e\n2.  Are they coming from \u003ctt\u003eConfigure.pl\u003c/tt\u003e or from \u003ctt\u003emake\u003c/tt\u003e?\n\u003c/p\u003e\n\n\u003cp\u003e\n3.  Do we get them on 10.6?\n\u003c/p\u003e","files":null}]}