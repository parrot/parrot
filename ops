{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1246699016,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTQ=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502754"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/799\" title=\"bug: Configure should explicitly check for symbolic link capability on Linux (new)\"\u003eAustin_Hastings\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n When evaluating capabilities, Configure.pl should check to ensure that symlinks work. Presently, the build fails when trying to link a versioned .so to an unversioned on inside blib/lib. (I work around this by cp'ing it, and restart the make.)\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n1.  Can you point to specific code in the configuration system which uses symlinks?\n\u003c/p\u003e\n\n\u003cp\u003e\n2.  Is this a Linux-specific problem?  Or is it a problem that could occur on any symlink-capable OS that has the filesystem restrictions you described?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1246701201,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTU=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502755"},"message":"\u003cp\u003e\nIn my ~/parrot/Makefile, I have this block:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$(LIBPARROT_SHARED) : $(O_FILES)\n        $(MKPATH) blib/lib\n        $(LD) $(LD_SHARE_FLAGS) $(LDFLAGS) -o $@ -Wl,-soname=libparrot$(SHARE_EX\nT).$(SOVERSION) \\\n                $(O_FILES) $(C_LIBS) $(ICU_SHARED)\n        ( cd blib/lib ; ln -sf libparrot$(SHARE_EXT).$(SOVERSION) libparrot$(SHARE_EXT) )\n\u003c/pre\u003e\u003cp\u003e\nThe eventual result is an attempt to link libparrot.so.1.3.0 to libparrot.so. This fails since links are unsupported. In a no-links environment, copy is probably the way to go, if it even needs to be done at all.\n\u003c/p\u003e\n\n\u003cp\u003e\nI also have this one:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003erelease : MANIFEST MANIFEST.generated\n        [ -d parrot-$(VERSION) ] || ln -s $(CUR_DIR) parrot-$(VERSION)\n        @$(RM_F) MANIFEST.real\n        mv MANIFEST MANIFEST.real\n        grep -v DEVELOPING MANIFEST.real \u0026gt; MANIFEST\n        $(PERL) -lane 'print\"parrot-$(VERSION)/$$F[0]\"unless!length||/#/' MANIFEST | \\\n    tar -zcv -T - -f parrot-$(VERSION).tar.gz\n        mv MANIFEST.real MANIFEST\n        rm parrot-$(VERSION)\n\u003c/pre\u003e\u003cp\u003e\nBut I have never tried \u003ctt\u003emake release\u003c/tt\u003e so it doesn't impact me. (Yet.)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1246701339,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTY=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502756"},"message":"\u003cp\u003e\nAs to whether this is a linux-specific problem, I think it is not. Any *nix O/S that can mount NTFS -- which is nearly all of them, thanks to ntfs-3g -- is vulnerable to this failure.\nI suspect it is likely to occur primarily in my own scenario: a *nix OS in some kind of VM being hosted on top of Windows.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1246740048,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTc=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502757"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/799#comment:2\" title=\"Comment 2 for Ticket #799\"\u003eAustin_Hastings\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cp\u003e\nI created the following patch:\n\u003c/p\u003e\n\n# \u003cpre class=\"wiki\"\u003eIndex: config/gen/makefiles/root.in\n\n--- config/gen/makefiles/root.in        (revision 39874)\n+++ config/gen/makefiles/root.in        (working copy)\n@@ -894,7 +894,7 @@\n #IF(win32 and cc==gcc):                -Wl,--out-implib=libparrot.lib \\\n                $(O_FILES) $(C_LIBS) $(ICU_SHARED)\n #IF(win32):    if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2\n-#IF(libparrot_shared_alias):   ( cd @blib_dir@ ; ln -sf @libparrot_shared@ @libparrot_shared_alias@ )\n+#IF(libparrot_shared_alias):   ( cd @blib_dir@ ; $(CP) @libparrot_shared@ @libparrot_shared_alias@ )\n $(INSTALLABLECONFIG) : $(SRC_DIR)/install_config$(O) $(PARROT_CONFIG) $(PBC_TO_EXE)\n@@ -2215,7 +2215,7 @@\n ###############################################################################\n release : MANIFEST MANIFEST.generated\n-       [ -d parrot-$(VERSION) ] || ln -s $(CUR_DIR) parrot-$(VERSION)\n-       [ -d parrot-$(VERSION) ] || $(CP) $(CUR_DIR) parrot-$(VERSION)\n      @$(RM_F) MANIFEST.real\n      mv MANIFEST MANIFEST.real\n      grep -v DEVELOPING MANIFEST.real \u0026gt; MANIFEST\n  \u003c/pre\u003e\u003cp\u003e\n  On a regular Linux system, I then configured Parrot with \u003ctt\u003e--prefix=/topdir/pseudoinstall\u003c/tt\u003e so I could observe what happens during an installation.  I then called \u003ctt\u003emake \u0026amp;\u0026amp; make install \u0026amp;\u0026amp; make install-dev\u003c/tt\u003e.  I confirmed that something worked by switching to \u003ci\u003etopdir/pseudoinstall\u003c/i\u003e and calling \u003ctt\u003e./bin/parrot --version\u003c/tt\u003e, with favorable results.  However, I don't know what else should be tested to demonstrate this works.\n  \u003c/p\u003e\n  \u003cblockquote class=\"citation\"\u003e\n  \u003cp\u003e\n  [snip]\n  \u003c/p\u003e\n  \u003c/blockquote\u003e\n  \u003cblockquote class=\"citation\"\u003e\n  \u003cp\u003e\n  I also have this one:\n  \u003c/p\u003e\n  \u003cpre class=\"wiki\"\u003e\u0026gt; release : MANIFEST MANIFEST.generated\n  \u0026gt;         [ -d parrot-$(VERSION) ] || ln -s $(CUR_DIR) parrot-$(VERSION)\n  \u0026gt;         @$(RM_F) MANIFEST.real\n  \u0026gt;         mv MANIFEST MANIFEST.real\n  \u0026gt;         grep -v DEVELOPING MANIFEST.real \u0026gt; MANIFEST\n  \u0026gt;         $(PERL) -lane 'print\"parrot-$(VERSION)/$$F[0]\"unless!length||/#/' MANIFEST | \\\n  \u0026gt;     tar -zcv -T - -f parrot-$(VERSION).tar.gz\n  \u0026gt;         mv MANIFEST.real MANIFEST\n  \u0026gt;         rm parrot-$(VERSION)\n  \u003c/pre\u003e\u003cp\u003e\n  But I have never tried \u003ctt\u003emake release\u003c/tt\u003e so it doesn't impact me. (Yet.)\n  \u003c/p\u003e\n  \u003c/blockquote\u003e\n  \u003cp\u003e\n  I, too, have never really tried \u003ctt\u003emake release\u003c/tt\u003e.  When I did so -- in the same sandbox where I had just configured and built -- I did \u003cstrong\u003enot\u003c/strong\u003e get good results:\n  \u003c/p\u003e\n  \u003cpre class=\"wiki\"\u003e$ make release\n  [ -d parrot-1.3.0-devel ] || /usr/local/bin/perl -MExtUtils::Command -e cp . parrot-1.3.0-devel\n  mv MANIFEST MANIFEST.real\n  grep -v DEVELOPING MANIFEST.real \u0026gt; MANIFEST\n  /usr/local/bin/perl -lane 'print\"parrot-1.3.0-devel/$F[0]\"unless!length||/#/' MANIFEST | \\\n  tar -zcv -T - -f parrot-1.3.0-devel.tar.gz\n  tar: parrot-1.3.0-devel/CREDITS: Cannot stat: Not a directory\n  tar: parrot-1.3.0-devel/ChangeLog: Cannot stat: Not a directory\n  tar: parrot-1.3.0-devel/Configure.pl: Cannot stat: Not a directory\n  ...\n  \u003c/pre\u003e\u003cp\u003e\n  Now, it's quite likely I'm not calling \u003ctt\u003emake release\u003c/tt\u003e correctly.  But, in any event, I wouldn't advise immediately applying my patch, if only because we're having a lot of discussion now about \u003ctt\u003emake install\u003c/tt\u003e issues and I don't know where this problem/patch fit into that.\n  \u003c/p\u003e\n  \u003cp\u003e\n  kid51\n  \u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1247650352,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTg=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502758"},"message":"\u003cp\u003e\nSee also \u003ca href=\"https://trac.parrot.org/parrot/ticket/509#comment:11\"\u003ethis comment by particle in TT 509\u003c/a\u003e.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1309664533,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NTk=","github-url":"https://github.com/parrot/parrot/issues/320#issuecomment-3502759"},"message":"\u003cp\u003e\nIn the two years since last activity in this ticket, I think we've resolve the \u003ctt\u003emake release\u003c/tt\u003e problems described in comments 2 and 4.\n\u003c/p\u003e\n\n\u003cp\u003e\nBut I'm not sure that we've addressed the problem described by the OP, i.e., we need to explicitly check for symbolic link capability on mounted filesystems.\n\u003c/p\u003e\n\n\u003cp\u003e\nAny bright ideas?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null}]}