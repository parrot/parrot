{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1380771962,"metadata":{"github-id":"MDU6SXNzdWUyMDQzNTkzOA==","github-url":"https://github.com/parrot/parrot/issues/992","origin":"github"},"title":"PBC magic number badly documented","message":"Reported by: zefram@fysh.org\n\ndocs/parrotbyte.pod documents the magic number thus:\n\n```\n0                                           7\n+----------+----------+----------+----------+\n|         Parrot Magic = 0x 13155a1         |\n+----------+----------+----------+----------+\n```\n\nAccording to the conventions consistently followed by the doc's other layout diagrams, this visually shows a four-byte item. However, it's numerically stating that the item stretches from byte offsets 0 to 7, making it 7 bytes long. But only 28 bits of magic number are actually shown. Disagreeing again, the next header item mentioned in the doc starts at byte offset 8.\n\nLooking at actual PBC files, it appears that the magic number is actually 8 bytes long, and (on this little-endian system) consists of the bytes fe:50:42:43:0d:0a:1a:0a.\n\nThe doc also says\n\n```\nB\u003cMagic\u003e is stored in native byteorder.\n```\n\nbut the magic number in actual PBC files doesn't look like the kind of magic number that varies with endianness.\n\n-zefram","files":null}]}