{"version":1,"ops":[{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1267757078,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MDE=","github-url":"https://github.com/parrot/parrot/issues/566#issuecomment-3503601"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/1475\" title=\"bug: [Pmc2c] make METHOD and MULTI consistent in terms of how PCC is done (new)\"\u003eplobsing\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Currently, pmc2c generates the boilerplate to do PCC stuff in methods. However, if the method is multi, pmc2c uses NCI to do PCC.\n There are likely advantages and disadvantages to both approaches (duplicate code vs potential object system bootstrapping issues). One thing is clear to me: whichever mechanism is used, these should be doing things the same way.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThis was discussed in a thread that went somewhat off-topic on the parrot-dev mailing list, \u003ca   href=\"http://groups.google.com/group/parrot-dev/browse_thread/thread/65f717293fcec6db#\"\u003e\u003cspan class=\"icon\"\u003eÂ \u003c/span\u003e[RFC] removing library NCI signatures from core\u003c/a\u003e. Some points that came out of the discussion were:\n\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003eNCI thunks don't (and shouldn't) cover all of the PCC functionality required by methods, so methods shouldn't use NCI thunks.\n\u003c/li\u003e\u003cli\u003eThunked and raw NCI are fundamentally different and should have different supporting PMCs to make this distinction, to simplify implementation, and to allow raw NCI to provide signature introspection.\n\u003c/li\u003e\u003c/ul\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1287293706,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM2MDI=","github-url":"https://github.com/parrot/parrot/issues/566#issuecomment-3503602"},"message":"\u003cp\u003e\nPeter,\n\u003c/p\u003e\n\n\u003cp\u003e\nDo you have any further thoughts about the issues raised in this ticket?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null}]}