{"version":1,"ops":[{"type":1,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1266045904,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NzE5","github-url":"https://github.com/parrot/parrot/issues/511","origin":"github"},"title":"pbc_dump: Indicate sub/method boundaries in -d mode","message":"The disassembled output of pbc_dump run with -d is a long string of hex numbers and opcodes. To determine where a sub starts or ends requires a trip to the constants table, where the Sub constants have their starting and ending offsets recorded.\n\nPlease modify pbc_dump so that when dumping it emits indicators for the beginning/end of subs:\n\n```\n 0000:  000004c8 00000001 00000009 00000001                   get_hll_global_p_pc_sc\n 0004:  00000021 00000001                                     capture_lex_p\n 0006:  000004c8 00000001 00000009 00000001                   get_hll_global_p_pc_sc\n 000a:  00000021 00000001                                     capture_lex_p\n 000c:  00000023 00000006                                     set_args_pc\n 000e:  00000024 00000003                                     get_results_pc\n 0011:  0000001c 00000001                                     invokecc_p\n 0013:  00000026 00000003                                     set_returns_pc\n 0016:  00000020                                              returncc\n 0017:  00000384 00000003 0000000b                            set_p_pc\n 001a:  00000385 00000002 00000003                            set_p_p\n 001d:  00000009 00000011                                     load_bytecode_sc\n 001f:  000001d1 0000001b                                     say_sc\n 0021:  000004c4 00000000 00000014                            get_hll_global_p_sc\n 0024:  00000023 00000018                                     set_args_pc\n 0028:  00000024 00000006                                     get_results_pc\n 002a:  000002c4 00000000 0000001a                            callmethodcc_p_sc\n 002d:  000004ce 00000001 0000001d 00000014                   get_root_global_p_pc_sc\n 0031:  00000023 00000015                                     set_args_pc\n 0037:  00000024 00000006                                     get_results_pc\n 0039:  000002c4 00000001 0000000f                            callmethodcc_p_sc\n 003c:  00000026 00000006                                     set_returns_pc\n 003e:  00000020                                              returncc\n 003f:  000004c8 00000002 00000025 00000023                   get_hll_global_p_pc_sc\n 0043:  00000021 00000002                                     capture_lex_p\n 0045:  00000384 00000000 00000039                            set_p_pc\n 0048:  00000021 00000000                                     capture_lex_p\n 004a:  000004c8 00000002 00000025 00000023                   get_hll_global_p_pc_sc\n 004e:  00000021 00000002                                     capture_lex_p\n 0050:  00000023 00000006                                     set_args_pc\n 0052:  00000024 00000003                                     get_results_pc\n 0055:  0000001c 00000002                                     invokecc_p\n 0057:  00000026 00000003                                     set_returns_pc\n 005a:  00000020                                              returncc\n```\n\ncould become:\n\n```\n ----: Begin sub '_block11' :subid('')\n 0000:  000004c8 00000001 00000009 00000001                   get_hll_global_p_pc_sc\n 0004:  00000021 00000001                                     capture_lex_p\n 0006:  000004c8 00000001 00000009 00000001                   get_hll_global_p_pc_sc\n 000a:  00000021 00000001                                     capture_lex_p\n 000c:  00000023 00000006                                     set_args_pc\n 000e:  00000024 00000003                                     get_results_pc\n 0011:  0000001c 00000001                                     invokecc_p\n 0013:  00000026 00000003                                     set_returns_pc\n 0016:  00000020                                              returncc\n ----: End sub '_block11' :subid('')\n ----: Begin sub '' :subid('post15')\n 0017:  00000384 00000003 0000000b                            set_p_pc\n 001a:  00000385 00000002 00000003                            set_p_p\n 001d:  00000009 00000011                                     load_bytecode_sc\n 001f:  000001d1 0000001b                                     say_sc\n 0021:  000004c4 00000000 00000014                            get_hll_global_p_sc\n 0024:  00000023 00000018                                     set_args_pc\n 0028:  00000024 00000006                                     get_results_pc\n 002a:  000002c4 00000000 0000001a                            callmethodcc_p_sc\n 002d:  000004ce 00000001 0000001d 00000014                   get_root_global_p_pc_sc\n 0031:  00000023 00000015                                     set_args_pc\n 0037:  00000024 00000006                                     get_results_pc\n 0039:  000002c4 00000001 0000000f                            callmethodcc_p_sc\n 003c:  00000026 00000006                                     set_returns_pc\n 003e:  00000020                                              returncc\n ----: End sub '' :subid('post15')\n ----: Begin sub '_block13' :subid('')\n 003f:  000004c8 00000002 00000025 00000023                   get_hll_global_p_pc_sc\n 0043:  00000021 00000002                                     capture_lex_p\n 0045:  00000384 00000000 00000039                            set_p_pc\n 0048:  00000021 00000000                                     capture_lex_p\n 004a:  000004c8 00000002 00000025 00000023                   get_hll_global_p_pc_sc\n 004e:  00000021 00000002                                     capture_lex_p\n 0050:  00000023 00000006                                     set_args_pc\n 0052:  00000024 00000003                                     get_results_pc\n 0055:  0000001c 00000002                                     invokecc_p\n 0057:  00000026 00000003                                     set_returns_pc\n 005a:  00000020                                              returncc\n ----: End sub '_block13' :subid('')\n```\n\nNote that a hypothetical future optimizer might arrange the bytecode so that subs are not discrete. Marking beginnings and endings separately should handle this.\n\nOriginally http://trac.parrot.org/parrot/ticket/1438","files":null}]}