{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1238111569,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNjY=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503366"},"message":"29445 byte attachment from bsdz\nat http://trac.parrot.org/parrot/raw-attachment/ticket/508/json.patch\n\n# ```Index: compilers/json/JSON.pir\n\n--- compilers/json/JSON.pir (revision 37749)\n+++ compilers/json/JSON.pir (working copy)\n@@ -1,82 +0,0 @@\n\n## -# Copyright (C) 2005-2008, Parrot Foundation.\n\n## -=head1 NAME\n\n## -JSON (JavaScript Object Notation) is a lightweight data-interchange format.\n\n## -=head1 SYNOPSIS\n\n-Given a valid JSON string, the compiler will return a PMC containing the\n\n## -appropriate values. For example:\n- .local pmc JSON\n- JSON = compreg 'JSON'\n\n## \\- $P0 = JSON('[1,2,3]')\n\n-Will create a pmc that C\u003cdoes\u003e array, contains the values 1, 2, and 3, and\n\n## -store it in register C\u003c$P0\u003e.\n\n-For more information about the structure of the JSON representation, see the\n\n## -documentation at Lhttp://www.json.org/.\n\n## -=cut\n\n## -.namespace [ 'JSON' ]\n\n-.sub '__onload' :load\n-    load_bytecode 'PGE.pbc'\n-    load_bytecode 'PGE/Util.pbc'\n\n## \\-    load_bytecode 'TGE.pbc'\n-    load_bytecode 'compilers/json/JSON/grammar.pbc'\n\n## \\-    load_bytecode 'compilers/json/JSON/pge2pir.pbc'\n-    $P1 = get_global '__compiler'\n\n## \\-    compreg \"JSON\", $P1\n-    $P1 = new 'Hash'\n-    $P1['\\\"'] = '\"'\n-    $P1['\\'] = \"\\\"\n-    $P1['\\/'] = '/'\n-    $P1['\\b'] = \"\\b\"\n-    $P1['\\f'] = \"\\f\"\n-    $P1['\\n'] = \"\\n\"\n-    $P1['\\r'] = \"\\r\"\n\n## \\-    $P1['\\t'] = \"\\t\"\n-    set_root_global [ 'JSON' ], '$escapes', $P1\n  -.end\n  -\n  -.sub '__compiler'\n\n## \\-    .param string json_string\n-   .local pmc parse, match\n\n## \\-   parse = get_root_global ['parrot'; 'JSON'], 'value'\n-   $P0 = get_root_global ['parrot'; 'PGE'], 'Match'\n-   match = $P0.'new'(json_string)\n-   match.'to'(0)\n-   match = parse(match)\n\n## \\-   unless match goto failed\n-   .local pmc pirgrammar, pirbuilder, pir\n-   pirgrammar = new ['JSON'; 'PIR']\n-   pirbuilder = pirgrammar.'apply'(match)\n\n## \\-   pir = pirbuilder.'get'('result')\n-   .local pmc pirc, result\n-   pirc = compreg \"PIR\"\n-   result = pirc(pir)\n\n## \\-   .tailcall result()\n-  failed:\n-   $P0 = new 'Exception'\n-   $P0[0] = \"invalid JSON value\"\n-   throw $P0\n  -.end\n  -\n  -# Local Variables:\n  -#   mode: pir\n  -#   fill-column: 100\n  -# End:\n  -# vim: expandtab shiftwidth=4 ft=pir:\n\nProperty changes on: compilers\\json\\JSONReader.pir\n\n---\n\nAdded: svn:mergeinfo\n   Merged /branches/RELEASE_0_8_2/compilers/json/JSON.pir:r34004-34020\n   Merged /branches/removing_stm/compilers/json/JSON.pir:r35464-35502\n   Merged /branches/assert_args/compilers/json/JSON.pir:r34776-34857\n   Merged /branches/jit_h_files/compilers/json/JSON.pir:r34166-35215\n\n# Index: compilers/json/postalcodes.pir\n\n--- compilers/json/postalcodes.pir  (revision 37749)\n+++ compilers/json/postalcodes.pir  (working copy)\n@@ -68,7 +68,7 @@\n     $I0 = index json_result, \"\\r\\n\\r\\n\"\n     substr json_result, 0, $I0, \"\"\n-    load_bytecode 'compilers/json/JSON.pbc'\n-    load_bytecode 'library/JSONReader.pbc'\n   $P1 = compreg 'JSON'\n   $P2 = $P1(json_result)\n\n# Index: compilers/json/test.pir\n\n--- compilers/json/test.pir (revision 37749)\n+++ compilers/json/test.pir (working copy)\n@@ -9,7 +9,7 @@\n\n   load_bytecode 'PGE.pbc'\n   load_bytecode 'PGE/Util.pbc'\n-  load_bytecode 'compilers/json/JSON.pbc'\n-  load_bytecode 'library/JSONReader.pbc'\n  \n  .local pmc JSON\n  JSON = compreg \"JSON\"\n  \n  # Index: config/gen/makefiles/json.in\n  \n  --- config/gen/makefiles/json.in    (revision 37749)\n  +++ config/gen/makefiles/json.in    (working copy)\n  @@ -9,15 +9,17 @@\n  PGE_DIR  := ../../compilers/pge\n  TGE_DIR  := ../../compilers/tge\n\n+PARROT_LIBRARY := ../../runtime/parrot/library\n+\n # the default target\n-all: JSON.pbc\n+all: $(PARROT_LIBRARY)/JSONReader.pbc\n\n # This is a listing of all targets, that are meant to be called by users\n help:\n    @echo \"\"\n    @echo \"Following targets are available for the user:\"\n    @echo \"\"\n-   @echo \"  all:               JSON.pbc\"\n-   @echo \"  all:               JSONReader.pbc\"\n  @echo \"                     This is the default.\"\n  @echo \"Testing:\"\n  @echo \"  test:              Run the test suite.\"\n  @@ -36,8 +38,8 @@\n  testclean:\n    $(RM_F) \"../../t/compilers/json/*.pir\"\n\n-JSON.pbc : JSON/grammar.pbc JSON/pge2pir.pbc JSON.pir\n-   $(PARROT) --output=JSON.pbc JSON.pir\n  +$(PARROT_LIBRARY)/JSONReader.pbc : JSON/grammar.pbc JSON/pge2pir.pbc JSONReader.pir\n-   $(PARROT) --output=$(PARROT_LIBRARY)/JSONReader.pbc JSONReader.pir\n  \n  JSON/grammar.pbc : JSON/grammar.pir\n    $(PARROT) --output=JSON/grammar.pbc JSON/grammar.pir\n  @@ -52,7 +54,7 @@\n  $(PARROT) $(TGE_DIR)/tgc.pir --output=JSON/pge2pir.pir JSON/pge2pir.tg\n  \n  clean : testclean\n-   $(RM_F) \"JSON/_.pbc\" \"JSON/_.pir\" JSON.pbc\n-   $(RM_F) \"JSON/_.pbc\" \"JSON/_.pir\" $(PARROT_LIBRARY)/JSONReader.pbc\n  \n  # Local variables:\n  \n  # mode: makefile\n  \n  # Index: config/gen/makefiles/root.in\n  \n  --- config/gen/makefiles/root.in    (revision 37749)\n  +++ config/gen/makefiles/root.in    (working copy)\n  @@ -249,7 +249,7 @@\n   $(LIBRARY_DIR)/dumper.pbc \\\n   $(LIBRARY_DIR)/yaml_dumper.pbc \\\n   $(LIBRARY_DIR)/Getopt/Obj.pbc \\\n-    $(LIBRARY_DIR)/JSON.pbc \\\n-    $(LIBRARY_DIR)/JSONWriter.pbc \\\n   $(LIBRARY_DIR)/Math/Random/mt19937ar.pbc \\\n   $(LIBRARY_DIR)/Math/Rand.pbc \\\n   $(LIBRARY_DIR)/MIME/Base64.pbc \\\n  Index: MANIFEST\n  ===================================================================\n  --- MANIFEST    (revision 37749)\n  +++ MANIFEST    (working copy)\n  @@ -55,7 +55,7 @@\n  compilers/imcc/symreg.c                                     [imcc]\n  compilers/imcc/symreg.h                                     [imcc]\n  compilers/imcc/unit.h                                       [imcc]\n  -compilers/json/JSON.pir                                     [json]\n  +compilers/json/JSONReader.pir                               [json]\n  compilers/json/JSON/grammar.pg                              [json]\n  compilers/json/JSON/pge2pir.tg                              [json]\n  compilers/json/postalcodes.pir                              [json]\n  @@ -1152,7 +1152,7 @@\n  runtime/parrot/library/Getopt/Obj.pir                       [library]\n  runtime/parrot/library/HTTP/Daemon.pir                      [library]\n  runtime/parrot/library/Iter.pir                             [library]\n  -runtime/parrot/library/JSON.pir                             [library]\n  +runtime/parrot/library/JSONWriter.pir                       [library]\n  runtime/parrot/library/MIME/Base64.pir                      [library]\n  runtime/parrot/library/Math/Rand.pir                        [library]\n  runtime/parrot/library/Math/Random/mt19937ar.pir            [library]\n  Index: MANIFEST.generated\n  ===================================================================\n  --- MANIFEST.generated  (revision 37749)\n  +++ MANIFEST.generated  (working copy)\n  @@ -5,10 +5,9 @@\n  blib/lib/libparrot.1.0.0.dylib                    [main]lib\n  blib/lib/libparrot.a                              [main]lib\n  blib/lib/libparrot.dylib                          [main]lib\n  +blib/lib/libparrot.so                             [main]lib\n  blib/lib/libparrot.so.1.0.0                       [main]lib\n  -blib/lib/libparrot.so                             [main]lib\n  compilers/json/JSON/grammar.pbc                   [json]\n  -compilers/json/JSON.pbc                           [json]\n  compilers/json/JSON/pge2pir.pbc                   [json]\n  compilers/nqp/nqp.pbc                             [nqp]\n  config/gen/call_list/opengl.in                    []\n  @@ -36,9 +35,9 @@\n  include/parrot/extend_vtable.h                    [main]include\n  include/parrot/feature.h                          [main]include\n  include/parrot/has_header.h                       [main]include\n  +include/parrot/oplib/core_ops.h                   [main]include\n  include/parrot/oplib/core_ops_cg.h                [main]include\n  include/parrot/oplib/core_ops_cgp.h               [main]include\n  -include/parrot/oplib/core_ops.h                   [main]include\n  include/parrot/oplib/core_ops_switch.h            [main]include\n  include/parrot/oplib/ops.h                        [main]include\n  include/parrot/pbcversion.h                       [devel]include\n  @@ -47,42 +46,43 @@\n  include/parrot/platform_limits.h                  [devel]include\n  include/parrot/vtable.h                           [main]include\n  install_config.fpmc                               [main]lib\n  +installable_parrot                                [main]bin\n  +installable_parrot.exe                            [main]bin\n  +installable_parrot_config                         [main]bin\n  installable_parrot_config.exe                     [main]bin\n  -installable_parrot_config                         [main]bin\n  +installable_parrot_debugger                       [main]bin\n  installable_parrot_debugger.exe                   [main]bin\n  -installable_parrot_debugger                       [main]bin\n  -installable_parrot.exe                            [main]bin\n  -installable_parrot                                [main]bin\n  +installable_pbc_disassemble                       [main]bin\n  installable_pbc_disassemble.exe                   [main]bin\n  -installable_pbc_disassemble                       [main]bin\n  +installable_pbc_dump                              [main]bin\n  installable_pbc_dump.exe                          [main]bin\n  -installable_pbc_dump                              [main]bin\n  +installable_pbc_info                              [main]bin\n  installable_pbc_info.exe                          [main]bin\n  -installable_pbc_info                              [main]bin\n  +installable_pbc_merge                             [main]bin\n  installable_pbc_merge.exe                         [main]bin\n  -installable_pbc_merge                             [main]bin\n  +installable_pbc_to_exe                            [main]bin\n  installable_pbc_to_exe.exe                        [main]bin\n  -installable_pbc_to_exe                            [main]bin\n  lib/Parrot/Config/Generated.pm                    [devel]lib\n  -libparrot.dll                                     [main]bin\n  lib/Parrot/OpLib/core.pm                          [devel]lib\n  +lib/Parrot/PMC.pm                                 [devel]lib\n  lib/Parrot/Pmc2c/PCCMETHOD_BITS.pm                [devel]lib\n  -lib/Parrot/PMC.pm                                 [devel]lib\n  +libparrot.dll                                     [main]bin\n  +library/JSONReader.pbc                            [json]\n  parrot.pc                                         [main]pkgconfig\n  +parrot_debugger                                   [main]bin\n  +parrot_debugger.exe                               [main]bin\n  +pbc_disassemble                                   [main]bin\n  pbc_disassemble.exe                               [main]bin\n  -pbc_disassemble                                   [main]bin\n  +pbc_dump                                          [main]bin\n  pbc_dump.exe                                      [main]bin\n  -pbc_dump                                          [main]bin\n  +pbc_info                                          [main]bin\n  pbc_info.exe                                      [main]bin\n  -pbc_info                                          [main]bin\n  +pbc_merge                                         [main]bin\n  pbc_merge.exe                                     [main]bin\n  -pbc_merge                                         [main]bin\n  +pbc_to_exe                                        [main]bin\n  pbc_to_exe.exe                                    [main]bin\n  -pbc_to_exe                                        [main]bin\n  -parrot_debugger.exe                               [main]bin\n  -parrot_debugger                                   [main]bin\n  +pirc                                              [main]bin\n  pirc.exe                                          [main]bin\n  -pirc                                              [main]bin\n  runtime/parrot/dynext/digest_group.bundle         [library]\n  runtime/parrot/dynext/digest_group.dll            [library]\n  runtime/parrot/dynext/digest_group.dylib          [library]\n  @@ -145,38 +145,32 @@\n  runtime/parrot/include/vtable_methods.pasm        [main]\n  runtime/parrot/include/warnings.pasm              [main]\n  runtime/parrot/library/CGI/QueryHash.pbc          [main]\n  -runtime/parrot/library/config.pbc                 [main]\n  -runtime/parrot/library/config.pir                 [main]\n  +runtime/parrot/library/Data/Dumper.pbc            [main]\n  runtime/parrot/library/Data/Dumper/Base.pbc       [main]\n  runtime/parrot/library/Data/Dumper/Default.pbc    [main]\n  -runtime/parrot/library/Data/Dumper.pbc            [main]\n  -runtime/parrot/library/dumper.pbc                 [main]\n  runtime/parrot/library/Getopt/Obj.pbc             [main]\n  +runtime/parrot/library/MIME/Base64.pbc            [main]\n  +runtime/parrot/library/Math/Rand.pbc              [main]\n  runtime/parrot/library/Math/Random/mt19937ar.pbc  [main]\n  -runtime/parrot/library/Math/Rand.pbc              [main]\n  -runtime/parrot/library/MIME/Base64.pbc            [main]\n  runtime/parrot/library/NCI/call_toolkit_init.pbc  [main]\n  -runtime/parrot/library/ncurses.pbc                [main]\n  +runtime/parrot/library/OpenGL.pbc                 [main]\n  runtime/parrot/library/OpenGL_funcs.pir           [main]\n  -runtime/parrot/library/OpenGL.pbc                 [main]\n  runtime/parrot/library/P6object.pbc               [main]\n  -runtime/parrot/library/Parrot/Capture_PIR.pbc     [main]\n  -runtime/parrot/library/Parrot/Coroutine.pbc       [main]\n  -runtime/parrot/library/Parrot/Exception.pbc       [main]\n  -runtime/parrot/library/Parrot/HLLCompiler.pbc     [main]\n  -runtime/parrot/library/parrotlib.pbc              [main]\n  -runtime/parrot/library/pcre.pbc                   [main]\n  +runtime/parrot/library/PCT.pbc                    [pct]\n  runtime/parrot/library/PCT/Grammar.pbc            [pct]\n  runtime/parrot/library/PCT/HLLCompiler.pbc        [pct]\n  runtime/parrot/library/PCT/PAST.pbc               [pct]\n  -runtime/parrot/library/PCT.pbc                    [pct]\n  +runtime/parrot/library/PGE.pbc                    [main]\n  runtime/parrot/library/PGE/Dumper.pbc             [main]\n  runtime/parrot/library/PGE/Glob.pbc               [main]\n  runtime/parrot/library/PGE/Hs.pbc                 [main]\n  -runtime/parrot/library/PGE.pbc                    [main]\n  runtime/parrot/library/PGE/Perl6Grammar.pbc       [main]\n  runtime/parrot/library/PGE/Text.pbc               [main]\n  runtime/parrot/library/PGE/Util.pbc               [main]\n  +runtime/parrot/library/Parrot/Capture_PIR.pbc     [main]\n  +runtime/parrot/library/Parrot/Coroutine.pbc       [main]\n  +runtime/parrot/library/Parrot/Exception.pbc       [main]\n  +runtime/parrot/library/Parrot/HLLCompiler.pbc     [main]\n  runtime/parrot/library/Protoobject.pbc            [main]\n  runtime/parrot/library/Stream/Base.pbc            [main]\n  runtime/parrot/library/Stream/Combiner.pbc        [main]\n  @@ -188,6 +182,12 @@\n  runtime/parrot/library/Stream/Sub.pbc             [main]\n  runtime/parrot/library/Stream/Writer.pbc          [main]\n  runtime/parrot/library/TGE.pbc                    [tge]\n  +runtime/parrot/library/config.pbc                 [main]\n  +runtime/parrot/library/config.pir                 [main]\n  +runtime/parrot/library/dumper.pbc                 [main]\n  +runtime/parrot/library/ncurses.pbc                [main]\n  +runtime/parrot/library/parrotlib.pbc              [main]\n  +runtime/parrot/library/pcre.pbc                   [main]\n  src/call_list.txt                                 [devel]src\n  src/glut_callbacks.c                              []\n  src/jit_emit.h                                    []\n  Index: ports/cygwin/README\n  ===================================================================\n  --- ports/cygwin/README (revision 37749)\n  +++ ports/cygwin/README (working copy)\n  @@ -147,7 +147,7 @@\n  /usr/lib/parrot/1.0.0/library/Getopt/Obj.pir\n  /usr/lib/parrot/1.0.0/library/HTTP/Daemon.pir\n  /usr/lib/parrot/1.0.0/library/Iter.pir\n-  /usr/lib/parrot/1.0.0/library/JSON.pir\n-  /usr/lib/parrot/1.0.0/library/JSONWriter.pir\n  /usr/lib/parrot/1.0.0/library/libpcre.pir\n  /usr/lib/parrot/1.0.0/library/Math/Rand.pbc\n  /usr/lib/parrot/1.0.0/library/Math/Rand.pir\n  \n  # Index: runtime/parrot/library/Config/JSON.pir\n  \n  --- runtime/parrot/library/Config/JSON.pir  (revision 37749)\n  +++ runtime/parrot/library/Config/JSON.pir  (working copy)\n  @@ -33,7 +33,7 @@\n   text = fh.'readall'()\n  \n   # convert the text to an object and return it.\n-    load_bytecode 'compilers/json/JSON.pbc'\n-    load_bytecode 'library/JSONReader.pbc'\n  \n   .local pmc JSON, config\n   JSON = compreg \"JSON\"\n  @@ -77,7 +77,7 @@\n   close $P1\n  \n  .end\n  -.include 'library/JSON.pir'\n  +.include 'library/JSONWriter.pir'\n  \n  # Local Variables:\n  \n  # mode: pir\n  \n  # Index: runtime/parrot/library/JSON.pir\n  \n  --- runtime/parrot/library/JSON.pir (revision 37749)\n  +++ runtime/parrot/library/JSON.pir (working copy)\n  @@ -1,376 +0,0 @@\n  \n  ## -=head1 TITLE\n  \n  ## -JSON.pir - PIR implementation of JSON data interchange format.\n  \n  ## -=head1 SYNOPSIS\n  \n  ## -Use the C\u003c_json\u003e method to generate a JSON representation of a PMC.\n- .include 'library/JSON.pir'\n\n## \\- $S0 = _json( $P0 )\n\n## -To generate a PMC from a JSON string, see L\u003ccompilers/json/JSON.pir\u003e.\n\n## -=cut\n\n## -=head1 FUNCTIONS\n\n## -This library provides the following functions:\n\n## -=over 4\n\n## -=item (string) = _json(pmc, ?pretty )\n\n-Convert a PMC to a JSON-serialized string. Note: If you pass in a cyclic\n\n## -structure, JSON will eventually throw a maximum recursion depth exception.\n\n## -=over 4\n\n## -=item pmc\n\n## -Required. The PMC to dump.\n\n## -=item pretty\n\n-Optional. Boolean: If true, then the generated string will be very\n-readable for humans. Defaults to false, which will generate the\n\n## -most compact string possible.\n\n## -=back\n\n## -=cut\n\n## -.const string _json_prefix = '  '\n\n-.sub _json\n-    .param pmc thing\n-    .param int pretty     :optional\n\n## \\-    .param int has_pretty :opt_flag\n\n## \\-    .local string result\n-    if has_pretty goto done_init\n\n## \\-    pretty = 0\n\n-done_init:\n-    result = _json_any(thing,pretty,0)\n-    unless pretty goto plain\n-    result .= \"\\n\"\n  -plain:\n-    .return (result)\n  -.end\n  -\n  -.sub _json_any\n-    .param pmc thing\n-    .param int pretty\n\n## \\-    .param int indent\n\n-done_init:\n\n## \\-    if_null thing, json_null\n-    $I0 = does thing, \"array\"\n\n## \\-    if $I0 goto json_array\n-    $I0 = does thing, \"hash\"\n\n## \\-    if $I0 goto json_hash\n-    $I0 = does thing, \"string\"\n\n## \\-    if $I0 goto json_string\n-    $I0 = does thing, \"boolean\"\n\n## \\-    if $I0 goto json_boolean\n-    $I0 = does thing, \"integer\"\n\n## \\-    if $I0 goto json_integer\n-    $I0 = does thing, \"float\"\n\n## \\-    if $I0 goto json_float\n-    # Default to a null. We could in the future make this more\n-    # clever, or conditional.\n  -json_null:\n-    .tailcall _json_null(thing,pretty,indent)\n  -json_string:\n-    .tailcall _json_string(thing,pretty,indent)\n  -json_array:\n-    .tailcall _json_array(thing,pretty,indent)\n  -json_hash:\n-    .tailcall _json_hash(thing,pretty,indent)\n  -json_boolean:\n-    .tailcall _json_boolean(thing,pretty,indent)\n  -json_integer:\n-    .tailcall _json_number(thing,pretty,indent)\n  -json_float:\n\n## \\-    .tailcall _json_number(thing,pretty,indent)\n\n## -.end\n\n-.sub '_json_null'\n-  .param pmc thing  # ignored, but needed for the ``API''\n-  .param int pretty\n\n## \\-  .param int indent\n-  unless pretty goto plain\n\n## \\-  unless indent goto plain\n-  .local string result\n-  result = repeat _json_prefix, indent\n-  result .= 'null'\n\n## \\-  .return (result)\n\n-plain:\n-  .return ('null')\n  -.end\n  -\n  -.sub '_json_string'\n-  .param string thing\n-  .param int pretty\n\n## \\-  .param int indent\n\n## \\-  .local string result\n\n## \\-  thing = escape thing\n-  result = '\"' . thing\n\n## \\-  result = result . '\"'\n-  unless pretty goto plain\n\n## \\-  unless indent goto plain\n-  $S0 = repeat _json_prefix, indent\n\n## \\-  result = $S0 . result\n\n-plain:\n-  .return (result)\n  -.end\n  -\n  -.sub '_json_boolean'\n-  .param pmc thing\n-  .param int pretty\n\n## \\-  .param int indent\n\n## \\-  .local string result\n-  result = 'true'\n-  if thing goto got_value\n\n## \\-  result = 'false'\n\n## -got_value:\n-  unless pretty goto plain\n\n## \\-  unless indent goto plain\n-  $S0 = repeat _json_prefix, indent\n\n## \\-  result = $S0 . result\n\n-plain:\n-  .return (result)\n  -.end\n  -\n  -.sub '_json_number'\n-  .param pmc thing\n-  .param int pretty\n\n## \\-  .param int indent\n\n## \\-  .local string result\n\n## \\-  result = thing\n-  unless pretty goto plain\n\n## \\-  unless indent goto plain\n-  $S0 = repeat _json_prefix, indent\n\n## \\-  result = $S0 . result\n\n-plain:\n-  .return (result)\n  -.end\n  -\n  -.sub '_json_array'\n-  .param pmc thing\n-  .param int pretty\n\n## \\-  .param int indent\n\n## \\-  .local string result\n-  result = '['\n-  .local int len\n\n## \\-  len = thing\n-  unless pretty goto pre_loop\n\n## \\-  unless indent goto pre_loop\n-  $S0 = repeat _json_prefix, indent\n-  result = $S0 . result\n-  if len goto pre_loop\n\n## \\-  result .= \"\\n\"\n\n-pre_loop:\n-  inc indent\n-  .local int pos\n-  pos = 0\n-  unless pretty goto loop\n-  if len == 0 goto done_loop\n\n## \\-  result .= \"\\n\"\n\n-loop:\n-  if pos \u003e= len goto done_loop\n-  $P1 = thing[pos]\n-  $S0 = _json_any($P1,pretty,indent)\n-  result .= $S0\n-  inc pos\n-  if pos == len goto loop\n-  result .= \",\"\n-  unless pretty goto loop\n-  result .= \"\\n\"\n\n## \\-  goto loop\n\n-done_loop:\n\n## \\-  dec indent\n-  .local string optional_newline,optional_indent\n-  optional_newline = ''\n\n## \\-  optional_indent = ''\n-  unless pretty goto done\n-  if len == 0 goto indent1\n\n## \\-  optional_newline = \"\\n\"\n\n-indent1:\n-  unless indent goto done\n\n## \\-  optional_indent = repeat _json_prefix, indent\n\n-done:\n-  result .= optional_newline\n-  result .= optional_indent\n\n## \\-  result .= ']'\n\n## \\-  .return (result)\n\n## -.end\n\n-.sub '_json_hash'\n-  .param pmc thing\n-  .param int pretty\n\n## \\-  .param int indent\n-  .local int not_empty\n\n## \\-  not_empty = thing\n-  .local pmc keys\n-  keys = new 'ResizablePMCArray'\n-  .local pmc iter\n-  iter = new 'Iterator', thing\n-  iter = 0\n\n## \\-  .local string key\n\n-iter_loop:\n-  unless iter, done_iter\n-  shift key, iter\n-  push keys, key\n\n## \\-  goto iter_loop\n\n-done_iter:\n\n## \\-  keys.'sort'()\n\n## \\-  .local string result,separator\n-  result = '{'\n\n## \\-  separator = ':'\n-  unless pretty goto pre_loop\n-  separator = ' : '\n\n## \\-  unless indent goto pre_loop\n-  $S0 = repeat _json_prefix, indent\n-  result = $S0 . result\n-  if not_empty goto pre_loop\n\n## \\-  result .= \"\\n\"\n\n-pre_loop:\n-  inc indent\n-  .local int pos\n-  pos = 0\n-  unless pretty goto loop\n-  unless not_empty goto done_loop\n\n## \\-  result .= \"\\n\"\n\n-loop:\n-  if pos \u003e= not_empty goto done_loop\n-  key = keys[pos]\n-  $S0 = _json_string(key,pretty,indent)\n-  result .= $S0\n-  result .= separator\n-  $P1 = thing[key]\n\n## \\-  $S0 = _json_any($P1,pretty,indent)\n-  # remove any leading whitespace on the value's string.\n\n## \\-  unless pretty goto space_loop_skip\n-  .local int space_pos,space_len\n-  space_pos = 0\n\n## \\-  space_len = length $S0\n\n-space_loop:\n-  if space_pos \u003e= space_len goto space_loop_done\n-  $I0 = ord $S0, space_pos\n\n## \\-  if $I0 != 32 goto space_loop_done\n-  inc space_pos\n\n## \\-  goto space_loop\n\n-space_loop_done:\n\n## \\-  $S0 = substr $S0, space_pos\n\n## -space_loop_skip:\n-  result .= $S0\n-  inc pos\n-  if pos == not_empty goto loop\n-  result .= \",\"\n-  unless pretty goto loop\n-  result .= \"\\n\"\n\n## \\-  goto loop\n\n-done_loop:\n\n## \\-  dec indent\n-  .local string optional_newline,optional_indent\n-  optional_newline = ''\n\n## \\-  optional_indent = ''\n-  unless pretty goto done\n-  unless not_empty goto indent1\n\n## \\-  optional_newline = \"\\n\"\n\n-indent1:\n-  unless indent goto done\n\n## \\-  optional_indent = repeat _json_prefix, indent\n\n-done:\n-  result .= optional_newline\n-  result .= optional_indent\n\n## \\-  result .= '}'\n-  .return (result)\n  -.end\n  -\n  -=back\n  -\n  -=head1 TODO\n  -\n  -=over 4\n  -\n  -=item 1\n  -\n  -Thunk a better way to deal with the maximum recursion depth exception (Or make it official)\n  -\n  -=back\n  -\n  -=cut\n  -\n  -# Local Variables:\n  -#   mode: pir\n  -#   fill-column: 100\n  -# End:\n  -# vim: expandtab shiftwidth=4 ft=pir:\n  Index: runtime/parrot/library/JSONWriter.pir\n  ===================================================================\n  --- runtime/parrot/library/JSONWriter.pir   (revision 37749)\n  +++ runtime/parrot/library/JSONWriter.pir   (working copy)\n  @@ -1,15 +1,15 @@\n  =head1 TITLE\n\n-JSON.pir - PIR implementation of JSON data interchange format.\n+JSONWriter.pir - PIR implementation of JSON data interchange format.\n\n =head1 SYNOPSIS\n\n Use the C\u003c_json\u003e method to generate a JSON representation of a PMC.\n- .include 'library/JSON.pir'\n- .include 'library/JSONWriter.pir'\n  $S0 = _json( $P0 )\n\n-To generate a PMC from a JSON string, see L\u003ccompilers/json/JSON.pir\u003e.\n+To generate a PMC from a JSON string, see L\u003ccompilers/json/JSONReader.pir\u003e.\n\n =cut\n\nProperty changes on: runtime\\parrot\\library\\JSONWriter.pir\n\n---\n\nAdded: svn:mergeinfo\n   Merged /branches/assert_args/runtime/parrot/library/JSON.pir:r34776-34857\n   Merged /branches/jit_h_files/runtime/parrot/library/JSON.pir:r34166-35215\n   Merged /branches/RELEASE_0_8_2/runtime/parrot/library/JSON.pir:r34004-34020\n   Merged /branches/removing_stm/runtime/parrot/library/JSON.pir:r35464-35502\n\n# Index: t/compilers/json/from_parrot.t\n\n--- t/compilers/json/from_parrot.t  (revision 37749)\n+++ t/compilers/json/from_parrot.t  (working copy)\n@@ -33,7 +33,7 @@\n     $S0 = _json( s, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n \"\"\n OUT\n@@ -48,7 +48,7 @@\n     $S0 = _json( s, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n \"abcdeABCDE01234$%^\u0026_\"\n OUT\n@@ -63,7 +63,7 @@\n     $S0 = _json( s, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n \"abcde\\ABCDE\\\"01234\\n$%^\u0026_\"\n OUT\n@@ -89,7 +89,7 @@\n     $S0 = _json( i, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n 0\n 35\n@@ -116,7 +116,7 @@\n     $S0 = _json( n )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n 0\n 2.5\n@@ -143,7 +143,7 @@\n     $S0 = _json( n, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n \"abcde\\ABCDE\\\"01234\\n$%^\u0026*\"\n -42\n@@ -172,7 +172,7 @@\n     $S0 = _json( array, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n [0,1,2,3,4,5,6,7,8,9]\n OUT\n@@ -199,7 +199,7 @@\n     $S0 = _json( array, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n [\n   0,\n@@ -233,7 +233,7 @@\n     $S0 = _json( array, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n [\n   35,\n@@ -263,7 +263,7 @@\n     $S0 = _json( array, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n [\n   0,\n@@ -290,7 +290,7 @@\n     $S0 = _json( hash, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n {\n   \"alpha\" : 29,\n@@ -315,7 +315,7 @@\n     $S0 = _json( hash, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n {\"alpha\":29,\"beta\":\"B\",\"delta\":\"DELTA\",\"gamma\":3.1}\n OUT\n@@ -352,7 +352,7 @@\n     $S0 = _json( world, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n {\n   \"population\" : 1234567890,\n@@ -403,7 +403,7 @@\n     $S0 = _json( world, 0 )\n     say $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n {\"population\":1234567890,\"some_country\":[[{\"Perl\":\"Highway\",\"Python\":\"Grove\",\"Ruby\":\"Lane\"},{}],[]]}\n OUT\n@@ -428,7 +428,7 @@\n     $S0 = _json( s, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n \"\"\n \"\"\n@@ -456,7 +456,7 @@\n     $S0 = _json( i, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n 0\n 0\n@@ -484,7 +484,7 @@\n     $S0 = _json( b, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n false\n false\n@@ -510,7 +510,7 @@\n     $S0 = _json( n, 1 )\n     print $S0\n .end\n-.include 'library/JSON.pir'\n+.include 'library/JSONWriter.pir'\n CODE\n null\n null\n\n# Index: t/compilers/json/to_parrot.t\n\n--- t/compilers/json/to_parrot.t    (revision 37749)\n+++ t/compilers/json/to_parrot.t    (working copy)\n@@ -689,7 +689,7 @@\n     return pir_output_is( \u003c\u003c\"END_PIR\", $dumped, $reason, %args );\n\n .sub test :main\n-    load_bytecode 'compilers/json/JSON.pbc'\n-    load_bytecode 'library/JSONReader.pbc'\n   load_bytecode 'library/dumper.pbc'\n  \n   .local pmc JSON, result\n  @@ -710,7 +710,7 @@\n   return pir_error_output_like( \u003c\u003c\"END_PIR\", qr/not a valid JSON value/, $reason, %args );\n  \n  .sub test :main\n-    load_bytecode 'compilers/json/JSON.pbc'\n-    load_bytecode 'library/JSONReader.pbc'\n  \n   .local pmc JSON, result\n   JSON = compreg \"JSON\"\n  \n  # Index: t/library/mime_base64.t\n  \n  --- t/library/mime_base64.t (revision 37749)\n  +++ t/library/mime_base64.t (working copy)\n  @@ -24,7 +24,7 @@\n   load_bytecode 'MIME/Base64.pir'\n   load_bytecode 'PGE.pbc'\n   load_bytecode 'PGE/Util.pbc'\n-    load_bytecode 'compilers/json/JSON.pbc'\n-    load_bytecode 'library/JSONReader.pbc'\n  \n   .local pmc plan, is, ok\n   plan = get_hll_global [ 'Test'; 'More' ], 'plan'\n\n```\n```","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1238129569,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNjc=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503367"},"message":"Trac commenter: bsdz\n\n```\n    \u003cp\u003e\n```\n\nPatch to rename to JSONReader and JSONWriter\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c1ee4af33970ee80260d659da672a9306b51181"},"timestamp":1238215442,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNjg=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503368"},"message":"\u003cp\u003e\nRather than putting in deprecation stubs, we'll just enter a deprecation notice now for the old library names (done in 37768) and make the change in 1.5.\n\u003c/p\u003e\n\n\u003cp\u003e\nFor consistency and clarity, let's move these to library/JSON/Reader.pbc, library/JSON/Writer.pbc and library/JSON/Config.pbc. (With the class names ['JSON'; 'Reader'] etc).\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1272110146,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNjk=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503369"},"message":"\u003cp\u003e\ncompilers/json is gone, use data_json instead.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"099af60226e2576bd4ff0f5c2614b710c745cab6"},"timestamp":1273512988,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNzA=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503370"},"message":"\u003cp\u003e\nSo, resolving ticket.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1273522790,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNzE=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-3503371"},"message":"\u003cp\u003e\nOriginal issue still not resolved.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336523722,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1OTAyNjI=","github-url":"https://github.com/parrot/parrot/issues/494#issuecomment-5590262"},"message":"Is this something we still want to work on? If so, we're probably going to need an updated patch.","files":null}]}