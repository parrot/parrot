{"version":1,"ops":[{"type":3,"author":{"id":"783ccc49b4a31d108e0fcf9c029db4964b59348d"},"timestamp":1244906968,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NjI=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502562"},"message":"1130 byte attachment from flh\nat http://trac.parrot.org/parrot/raw-attachment/ticket/760/readline_eof.patch\n\n# ```Index: src/pmc/filehandle.pmc\n\n--- src/pmc/filehandle.pmc  (revision 39534)\n+++ src/pmc/filehandle.pmc  (working copy)\n@@ -368,6 +368,10 @@\n             string_result = Parrot_str_new(INTERP, r, 0);\n             mem_sys_free(r);\n         }\n-        else {\n-            Parrot_io_set_flags(interp, SELF,\n-                (PARROT_FILEHANDLE(SELF)-\u003eflags | PIO_F_EOF));\n- ```\n     }\n  ```\n  \n  #else\n         if (got_prompt)\n             fprintf(stderr, \"%s\", prompt-\u003estrstart);\n  \n  # Index: compilers/pct/src/PCT/HLLCompiler.pir\n  \n  --- compilers/pct/src/PCT/HLLCompiler.pir   (revision 39534)\n  +++ compilers/pct/src/PCT/HLLCompiler.pir   (working copy)\n  @@ -591,8 +591,9 @@\n  \n   ##  display a prompt ourselves if readline isn't present\n  interactive_read:\n-    $I0 = isfalse stdin # check if we've reached EOF\n-    if $I0 goto interactive_end\n   code = stdin.'readline_interactive'(prompt)\n-    if null code goto interactive_end\n   unless code goto interactive_loop\n   concat code, \"\\n\"\n   push_eh interactive_trap\n\n```\n```","files":null},{"type":3,"author":{"id":"783ccc49b4a31d108e0fcf9c029db4964b59348d"},"timestamp":1244924968,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NjM=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502563"},"message":"\u003cp\u003e\nReadline sets EOF in FileHandle and HLLCompiler checks EOF\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1245121545,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NjQ=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502564"},"message":"\u003cp\u003e\nI vote against this patch, at least as it stands now.  The original 1.0.0 behavior of returning NULL upon reaching EOF needs to be restored for the 1.4 release (because it has not been deprecated and HLL's obviously depend on it).\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1245122211,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NjU=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502565"},"message":"\u003cp\u003e\nThe problem appears to be r39065, which changed readline_interactive to always return a string instead of returning NULL on EOF.  This needs to be fixed before 1.4.0.\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1245122912,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NjY=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502566"},"message":"\u003cp\u003e\nBe very nice if we could get a fix in for the 1.3 release.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1245130988,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Njc=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502567"},"message":"\u003cp\u003e\nAfter some discussion on irc, reverting to the original behavior of returning PMCNULL on EOF in r39575\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"783ccc49b4a31d108e0fcf9c029db4964b59348d"},"timestamp":1245159334,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Njg=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502568"},"message":"\u003cp\u003e\nRe-reading myself: it's Control-D of course, not G :)\n\u003c/p\u003e\n\n\u003cp\u003e\nReturning a PMCNULL does the trick, yet there still is an inconsistency: PIO_F_EOF is not set when readline is used, while it is set upon reaching EOF when readline is not used.\n\u003c/p\u003e\n\n\u003cp\u003e\nIs there any plan to fix it some day?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1245159862,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1Njk=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502569"},"message":"\u003cp\u003e\nForgot to comment that part. In the irc discussion we decided that we may need a deprecation notice for that changes. We'll discuss it at parrotsketch, create RFC tickets, or both. Stay tuned.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c1ee4af33970ee80260d659da672a9306b51181"},"timestamp":1246674597,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NzA=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502570"},"message":"\u003cp\u003e\nI don't recall seeing this come up in parrotsketch. Looks like we've restored the 1.0 behavior. IIRC, the readline launched with 1.0 didn't set EOF (and couldn't set it, because there was no way to detect it without reading ahead.)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1246769710,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NzE=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502571"},"message":"\u003cp\u003e\nMy fault, forgot to take a note for commenting it at parrotsketch. The behavior has been reverted, yes.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe problem is that the method return a STRING * when not eof and PMCNULL when EOF, so if a string register is used for the returned value we get a PMCNULL access on EOF. Returning NULL makes more sense but breaks existing code, as this ticket shows, so it need a proposal for deprecation.\n\u003c/p\u003e\n\n\u003cp\u003e\nOn the other part, setting the EOF flag *after* reading EOF is a reasonable behavior and can be easily implemented.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1299203160,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1NzI=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-3502572"},"message":"\u003cp\u003e\nfix formatting in desc.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336525284,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1OTA1ODU=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-5590585"},"message":"It looks like \"parrot\" above says this change was reverted and the code is working how it had been prior to the change. Is this true? Can we close this ticket? (At the very least, can we take the \"Blocker\" priority tag off it, since we are clearly not blocking anything on it?)","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336568943,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1OTk1MjY=","github-url":"https://github.com/parrot/parrot/issues/273#issuecomment-5599526"},"message":"I'm closing this ticket now. It appears this is no longer broken and, in either case, this is clearly not high priority for any of our developers or users. Years later, I think we declare the current behavior of .readline_interactive to be \"the way it is\" and any requests to change the status quo can be discussed in new tickets.","files":null},{"type":4,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336568943,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTUwODAyNDU="},"status":2}]}