{"version":1,"ops":[{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1258519361,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MjY=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502626"},"message":"\u003cp\u003e\nA refresher from Perl 5 testing: TODO and SKIP are similar concepts, but they have distinct uses.\n\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003eTODO is used when a test _should_ pass, but is known to not pass (yet) in some or all circumstances.\n\u003c/li\u003e\u003cli\u003eSKIP is used when a test should not or cannot run at all, due to circumstances outside the control of the testing code (and coders).\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\nEither SKIP or TODO will prevent a FAILure due to false positives, but TODO has another role; since the TODO-ed test actually runs, the test harness can communicate that the test \"succeeded unexpectedly\". This success is an important piece of info.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1258519451,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2Mjc=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502627"},"message":"\u003cp\u003e\nMisleading documentation is here:\n\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003eexamples/tutorial/90_writing_tests.pir\n\u003cpre class=\"wiki\"\u003etodo(1, 42, \"todo test\")\n\u003c/pre\u003e\u003c/li\u003e\u003cli\u003eruntime/parrot/library/Test/More.pir\n\u003cpre class=\"wiki\"\u003etodo(0, 'this is a failed test', 'reason for todo')\n\u003c/pre\u003e\u003c/li\u003e\u003c/ul\u003e","files":null},{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1258521373,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2Mjg=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502628"},"message":"\u003cp\u003e\nInstances I know of:\n\u003c/p\u003e\n\n\u003col\u003e\u003cli\u003eConditioned, therefore correct, but non-optimal; the first 4 abandon is() and similar functions to avoid duplicate code:\n\u003cul\u003e\u003cli\u003et/compilers/imcc/syn/subflags.t\n\u003c/li\u003e\u003cli\u003et/library/p6object.t\n\u003c/li\u003e\u003cli\u003et/pmc/array.t\n\u003c/li\u003e\u003cli\u003et/pmc/packfile.t\n\u003c/li\u003e\u003cli\u003et/pmc/complex.t - uses todo() via a macro, and still has to duplicate two tests!\n\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e\u003col start=\"2\"\u003e\u003cli\u003e Mixed usage:\n\u003cul\u003e\u003cli\u003et/oo/metamodel.t\n\u003col\u003e\u003cli\u003eCorrect via conditioning\n\u003c/li\u003e\u003cli\u003eMisused via \u003ctt\u003e0\u003c/tt\u003e\n\u003c/li\u003e\u003c/ol\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e\u003col start=\"3\"\u003e\u003cli\u003eHardcoded \u003ctt\u003e1\u003c/tt\u003e - all need to have conditioning logic:\n\u003cul\u003e\u003cli\u003et/op/arithmetics.t\n\u003c/li\u003e\u003cli\u003et/op/io.t\n\u003c/li\u003e\u003cli\u003et/op/number.t\n\u003c/li\u003e\u003cli\u003et/pmc/float.t\n\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e\u003col start=\"4\"\u003e\u003cli\u003eHardcoded \u003ctt\u003e0\u003c/tt\u003e - these are all special cases:\n\u003cul\u003e\u003cli\u003et/pmc/class.t  - This almost gets it right, via exception handler. I think the current code will produce an extra test run if the code starts succeeding.\n\u003c/li\u003e\u003cli\u003et/pmc/default.t - Needs to use an exception handler, similar to class.t\n\u003c/li\u003e\u003cli\u003et/op/inf_nan.t - where the ops are not implemented, the code must be commented out, or the PIR will mis-parse. Their todo()s should be skip()s.\n\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ol\u003e","files":null},{"type":3,"author":{"id":"611fed679c0580ceebb58a6d3e11b3ce00d4a1c8"},"timestamp":1259384511,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzA=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502630"},"message":"5762 byte attachment from bubaflub\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1302/t_op_inf_nan_t.patch\n\n```diff --git t/op/inf_nan.t t/op/inf_nan.t\nindex e31db51..4a94d7d 100644\n--- t/op/inf_nan.t\n+++ t/op/inf_nan.t\n@@ -234,53 +234,53 @@ Tests for mathematical operations with Inf and Nan.\n     $N0 = 'Inf'\n     #$N1 = cot $N0\n     #is($N1, 'NaN', 'cot: cot Inf')\n-    todo(0, 'cot Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = '-Inf'\n   #$N1 = cot $N0\n   #is($N1, 'NaN', '... cot -Inf')\n-    todo(0, 'cot -Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = 'NaN'\n   #$N1 = cot $N0\n   #is($N1, 'NaN', '... cot NaN')\n-    todo(0, 'cot NaN', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n  .end\n  \n  .sub test_coth\n     $N0 = 'Inf'\n     #$N1 = coth $N0\n     #is($N1, 1, 'coth: coth Inf')\n-    todo(0, 'coth Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = '-Inf'\n   #$N1 = coth $N0\n   #is($N1, -1, '... coth -Inf')\n-    todo(0, 'coth -Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = 'NaN'\n   #$N1 = coth $N0\n   #is($N1, 'NaN', '... coth NaN')\n-    todo(0, 'coth NaN', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n  .end\n  \n  .sub test_acot \n     $N0 = 'Inf'\n     #$N1 = acot $N0\n     #is($N1, 'NaN', 'acot: acot Inf')\n-    todo(0, 'acot Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = '-Inf'\n   #$N1 = acot $N0\n   #is($N1, 'NaN', '... acot -Inf')\n-    todo(0, 'acot -Inf', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = 'NaN'\n   #$N1 = acot $N0\n   #is($N1, 'NaN', '... acot NaN')\n-    todo(0, 'acot NaN', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = '-2'\n   #$N1 = acot $N0\n   #is($N1, 'NaN', '... acot -2')\n-    todo(0, 'acot -2', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n   $N0 = '2'\n   #$N1 = acot $N0\n   #is($N1, 'NaN', '... acot 2')\n-    todo(0, 'acot 2', 'cot/coth/acot not implemented for real numbers')\n-    skip(1, 'cot/coth/acot not implemented for real numbers')\n  .end\n  \n  .sub test_sec\n  @@ -416,19 +416,19 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'Inf'\n   $I0 = floor $N0\n   #is($I0, 'Inf', 'floor Inf')\n-    todo(0, 'floor Inf', 'rounding nan/inf gives something like -2147483648')\n-    skip(1, 'rounding nan/inf gives something like -2147483648')\n   $N0 = 'NaN'\n   $I0 = floor $N0\n   #is($I0, 'NaN', 'floor Inf')\n-    todo(0, 'floor NaN', 'rounding nan/inf gives something like -2147483648')\n-    skip(1, 'rounding nan/inf gives something like -2147483648')\n   $N0 = 'Inf'\n   $I0 = ceil $N0\n   #is($I0, 'Inf', 'floor Inf')\n-    todo(0, 'ceil Inf', 'rounding nan/inf gives something like -2147483648')\n-    skip(1, 'rounding nan/inf gives something like -2147483648')\n   $N0 = 'NaN'\n   $I0 = ceil $N0\n   #is($I0, 'NaN', 'floor Inf')\n-    todo(0, 'ceil NaN', 'rounding nan/inf gives something like -2147483648')\n-    skip(1, 'rounding nan/inf gives something like -2147483648')\n  .end\n  \n  .sub test_nan_complex\n  @@ -437,7 +437,7 @@ Tests for mathematical operations with Inf and Nan.\n   set $P1, \"1 + i\"\n   $P1 += $N0\n   #is($P1, 'NaN', '1+i + NaN')\n-    todo(0, '1+i + NaN should be NaN')\n-    skip(1, '1+i + NaN should be NaN')\n  .end\n  \n  .sub test_fdiv_integer_pmc_nan\n  @@ -447,7 +447,7 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'NaN'\n   fdiv $P1, $P2, $N0\n   #is($P1, 'NaN', 'fdiv with Integer PMCs and NaN')\n-    todo(0, 'fdiv with Integer PMCs and NaN', 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n-    skip(1, 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n  .end\n  \n  .sub test_fdiv_float_pmc_nan\n  @@ -457,7 +457,7 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'NaN'\n   fdiv $P1, $P2, $N0\n   #is($P1, 'NaN','fdiv with Float PMCs and NaN')\n-    todo(0,'fdiv with Float PMCs and NaN', 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n-    skip(1, 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n  .end\n  \n  .sub test_fdiv_float_integer_pmc_nan\n  @@ -467,7 +467,7 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'NaN'\n   fdiv $P1, $P2, $N0\n   #is($P1, 'NaN', 'fdiv with Float and Integer PMCs and NaN')\n-    todo(0, 'fdiv with Float and Integer PMCs and NaN', 'fdiv/mod/cmod do not play nicely with PMCs and NaN')  \n-    skip(1, 'fdiv/mod/cmod do not play nicely with PMCs and NaN')  \n  .end\n  \n  .sub test_cmod_float_integer_pmc_nan\n  @@ -477,7 +477,7 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'NaN'\n   cmod $P1, $P2, $N0\n   #is($P1, 'NaN', 'cmod with Float and Integer PMCs and NaN')\n-    todo(0, 'cmod with Float and Integer PMCs and NaN', 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n-    skip(1, 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n  .end\n  \n  .sub test_mod_float_integer_pmc_nan\n  @@ -487,7 +487,7 @@ Tests for mathematical operations with Inf and Nan.\n   $N0 = 'NaN'\n   mod $P1, $P2, $N0\n   #is($P1, 'NaN', 'mod with Float and Integer PMCs and NaN')\n-    todo(0, 'mod with Float and Integer PMCs and NaN', 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n-    skip(1, 'fdiv/mod/cmod do not play nicely with PMCs and NaN')\n  .end\n  \n  # Local Variables:\n\n```\n```","files":null},{"type":3,"author":{"id":"611fed679c0580ceebb58a6d3e11b3ce00d4a1c8"},"timestamp":1259405994,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzE=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502631"},"message":"\u003cp\u003e\nIs this what you were looking for?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"611fed679c0580ceebb58a6d3e11b3ce00d4a1c8"},"timestamp":1259406111,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzI=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502632"},"message":"\u003cp\u003e\npatch to change todo to skip in t/op/inf_nan.t\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1273350042,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzM=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502633"},"message":"\u003cp\u003e\nUtil:  Does bubaflub's patch satisfy your concerns as expressed in item 4, 3rd bullet point above?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1274840970,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzQ=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502634"},"message":"\u003cp\u003e\nbubaflub's patch *does* satisfy those concerns.\n\u003c/p\u003e\n\n\u003cp\u003e\nMy intent was (and still is) to unify the TODOs (now SKIPs) that were split up in the Perl-\u0026gt;PIR conversion.\nI should not have let that intent delay the application of the patch.\n\u003c/p\u003e\n\n\u003cp\u003e\nIn r46993, I applied t_op_inf_nan_t.patch (with whitespace trimmed to allow it to apply cleanly).\n\u003c/p\u003e\n\n\u003cp\u003e\nbubaflub++\nkid51++\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284924689,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzU=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502635"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1302#comment:7\" title=\"Comment 7 for Ticket #1302\"\u003eUtil\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n bubaflub's patch *does* satisfy those concerns.\n My intent was (and still is) to unify the TODOs (now SKIPs) that were split up in the Perl-\u0026gt;PIR conversion.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nUtil,\n\u003c/p\u003e\n\n\u003cp\u003e\nCan you describe where we stand on the issues raised in this ticket?  Are there specific TODOs and SKIPs that could be listed for various individuals to work on?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1307827240,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MzY=","github-url":"https://github.com/parrot/parrot/issues/287#issuecomment-3502636"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1302#comment:8\" title=\"Comment 8 for Ticket #1302\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Util,\n Can you describe where we stand on the issues raised in this ticket?  Are there specific TODOs and SKIPs that could be listed for various individuals to work on?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nCan we get an update on the status of this ticket?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null}]}