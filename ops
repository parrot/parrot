{"version":1,"ops":[{"type":1,"author":{"id":"fe8af3263289cd763d1456c9b165be9f1ccc1f9b"},"timestamp":1390737813,"metadata":{"github-id":"MDU6SXNzdWUyNjMxMjU0Nw==","github-url":"https://github.com/parrot/parrot/issues/1030","origin":"github"},"title":"libffi configure test fails on 64bit archs if stack protection kicks in","message":"The third argument to ffi_call() should take a pointer to a ffi_args, not int.  Otherwise this will generate a stack overflow, failing the test.  This bug is only found if some SSP heuristic is used that is stricter than the default -fstack-protector (like -fstack-protector-all or -fstack-protector-strong of recent GCC and OpenBSDâ€™s toolchain).  Analysed by Martynas Venckus.\n\n```\n--- config/auto/libffi/test_c.in.orig   Sun Jan 26 02:03:26 2014\n+++ config/auto/libffi/test_c.in        Sun Jan 26 02:03:35 2014\n@@ -13,7 +13,7 @@ int main() {\n     ffi_type *args[1];\n     void *values[1];\n     char *s;\n-    int rc;\n+    ffi_arg rc;\n\n     /* Initialize the argument info vectors */\n     args[0] = \u0026ffi_type_pointer;\n```","files":null}]}