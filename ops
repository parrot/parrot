{"version":1,"ops":[{"type":1,"author":{"id":"56b030459ff5c3e63b58d71e1bed10897e6a7686"},"timestamp":1285332159,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NDg5","github-url":"https://github.com/parrot/parrot/issues/292","origin":"github"},"title":"PMC Creation Functions Can Cause Segfaults","message":"The exported Parrot_pmc_new(), Parrot_pmc_new_noinit(), Parrot_pmc_new_init(), Parrot_pmc_new_init_int(), Parrot_pmc_new_constant_noinit(), Parrot_pmc_new_constant(), Parrot_pmc_new_constant_init(), and Parrot_pmc_new_constant_init() functions all take an INTVAL base_type parameter.  The functions use this parameter as an index into the given interpreter's vtable array to determine which PMC to create.\n\nThese functions perform no appropriate checking to determine if the base_type is positive or within the appropriate range of values for the known vtable types.  Any extension could crash Parrot by passing in an invalid value.\n\nWe should consider changing the type of the base_type to UINTVAL, but we should also perform bounds checking against interp-\u003en_vtable_alloced in all of these functions (probably with a static function).\n\nOriginally http://trac.parrot.org/parrot/ticket/1802","files":null}]}