{"version":1,"ops":[{"type":3,"author":{"id":"759a2f344e030946ca2071689ac2fa4d3b0705ec"},"timestamp":1266363506,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MDY=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503706"},"message":"\u003cp\u003e\nI was trying to distinguish between a getter (0 args) and a setter (1 arg), and the getter was grabbing things with 1 arg, which I think is a total error.\n\u003c/p\u003e\n\n\u003cp\u003e\nI understand that its a (sloppy) unix idiom to often pretend that :main receives 1,2, or 3 args, so I could see :main setting up a complex :multi (and/or implied .param's) for that.\n\u003c/p\u003e\n\n\u003cp\u003e\nEverything else is an error.  Squash it now, it ain't going to get better with time.  Add a catch-all dummy .param option if you must.\n\u003c/p\u003e\n\n\u003cp\u003e\nBy the way, my zero-arity getter was marked :multi(), making it twice the error (?) for it to accept arity-1 calls, ESPECIALLY since there was a arity-1 acceptor (ie, the setter) sitting there, ready.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"759a2f344e030946ca2071689ac2fa4d3b0705ec"},"timestamp":1266364032,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MDc=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503707"},"message":"\u003cp\u003e\nPS.  I initially annotated the setter with :multi(P), which didn't accept anything I sent at it.  :multi(PMC) fixed that (as did :multi(_)), so my getter and setter work for 0 and 1 args, but not 2, etc.\n\u003c/p\u003e\n\n\u003cp\u003e\nCould someone add some examples (besides :main) of why you would want 0-arity sub's to be grab-all's?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"759a2f344e030946ca2071689ac2fa4d3b0705ec"},"timestamp":1266364101,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MDg=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503708"},"message":"\u003cp\u003e\nPPS.  That is, the http doc's suggest P, and make no mention of PMC as an option to :multi.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"759a2f344e030946ca2071689ac2fa4d3b0705ec"},"timestamp":1266364316,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MDk=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503709"},"message":"\u003cp\u003e\nPPPS.  I don't stop thinking:\n\u003c/p\u003e\n\n\u003cp\u003e\nmy getter is marked :multi(), yet accepts arity-2 calls.  I can't see how that's correct.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1266584480,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTA=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503710"},"message":"\u003cp\u003e\nIt seems that throwing an exception when no function of the correct arity is found should be the correct behavior. This probably incurs a deprecation policy.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1266623472,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTE=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503711"},"message":"\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n my getter is marked :multi(), yet accepts arity-2 calls.  I can't see how that's correct.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThe :multi() pragma is used only to constrain the types and minimum number of arguments, it does not provide an arity-based constraint.  In particular,  :multi(\u003ca class=\"missing wiki\"\u003eFoo?\u003c/a\u003e)  simply says that the first argument must be of type 'Foo', it doesn't limit the sub to calls with only one argument.\n\u003c/p\u003e\n\n\u003cp\u003e\n:multi(_) says that a sub requires at least one argument (but may have more), and that argument may be of any type.\n\u003c/p\u003e\n\n\u003cp\u003e\nThus \":multi()\" simply says that a given sub is a MultiSub and has to have at least zero arguments to be invoked (but is allowed to have more).\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1294161622,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTI=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503712"},"message":"\u003cp\u003e\ngci task created for this ticket\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314489254,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTM=","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-3503713"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1033#comment:8\" title=\"Comment 8 for Ticket #1033\"\u003ecotto\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n gci task created for this ticket\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThis wasn't taken up by any of the GCI students.  whiteknight, given the work you've done on IMCC, do you have any opinion on this?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"646f0669ead6eaf64196bebf3884a5eff162357a"},"timestamp":1380653300,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI1NDc3MDAz","github-url":"https://github.com/parrot/parrot/issues/600#issuecomment-25477003"},"message":"Although it's been more than a year since I was poking around bytecode/IMCC, I believe this is caused by the fact that IMCC doesn't emit any of the get_param, etc. ops when there are no .param directives.  So argument handling is simply never called.  (And hence, never has an opportunity to check arity.)","files":null}]}