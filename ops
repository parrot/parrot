{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1340040116,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MDI4MjE=","github-url":"https://github.com/parrot/parrot/issues/792#issuecomment-6402821"},"message":"On the contrary, both ia64 boxes that I looked at (gcc60 and gcc66) have a /sbin/sysctl. I believe this is actually some kind of non-standard chroot/jail setup where all the normal /sbin binaries are not present.\n\nIn any case, we should detect if /sbin/sysctl exists before trying to use it.","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1340061845,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTIxNjU=","github-url":"https://github.com/parrot/parrot/issues/792#issuecomment-6412165"},"message":"Here is the relevant code from `config/init/hints/linux.pm`:\n\n```\n 71     my $osvers = `/sbin/sysctl -n kernel.osrelease`;\n 72     chomp $osvers;\n 73 \n 74     my %linux_selections = (\n 75         ccflags         =\u003e $ccflags,\n...\n 83         osvers          =\u003e $osvers,\n...\n 90     );\n```\n\nTwo problems:\n- If `/sbin/sysctl` does not exist, what should we fall back to in determining `osvers`?\n- If we make this change for linux, what do we do for the other OSes that make use of `sysctl`?  Similar code exists in `config/init/hints/darwin.pm` and `config/init/hints/freebsd.com`.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1340076091,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTUxOTA=","github-url":"https://github.com/parrot/parrot/issues/792#issuecomment-6415190"},"message":"We should assume that some kind of chroot/jail environment could remove sysctl on any platform, so our fix should be platform agnostic.\n\nMy vote would be to fall back to `uname` when syctl is not available. `uname -r` on a Ubuntu machine returns something like: `2.6.35-32-generic`","files":null}]}