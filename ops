{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1339781769,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzNjIyMjA=","github-url":"https://github.com/parrot/parrot/issues/793#issuecomment-6362220"},"message":"What about implementing bitwise NOT as the two's complement minus 1 ?\n\nhttps://en.wikipedia.org/wiki/Bitwise_operation","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1339782156,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzNjIzMzY=","github-url":"https://github.com/parrot/parrot/issues/793#issuecomment-6362336"},"message":"If there's a reason @leto's suggestion wouldn't work, bitwise NOT would be appropriate for M0.","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1339783717,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzNjI5MTY=","github-url":"https://github.com/parrot/parrot/issues/793#issuecomment-6362916"},"message":"would this be very portable? If so then sure that's ok, though one would expect bitwise ops to be very very quick. (that's why you would start manipulating bits in the first place). Also does one need to consider signed-ness of values?","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1339827690,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzNzExNDk=","github-url":"https://github.com/parrot/parrot/issues/793#issuecomment-6371149"},"message":"@kjs for now I would ignore signedness. And your question about performance of bitwise ops is very dear to my heart. I think the best way forward is to implement the minimum viable implementation right now, where we can get performance data. If bitwise ops are a bottleneck or too slow, we can add an M0 op. In general, the basic philosophy of M0 (as far as I can tell) is to not add any more ops without good data. @cotto and I have talked about needing more performance data to decide about exactly this issue. We ended up doing a bunch of research and making this wiki page: https://github.com/parrot/parrot/wiki/CPU-and-VM-Instruction-Set-Comparison Sadly, no specific tasks really came out of it and that is where M0 development stagnated until recently.","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1339858375,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYzNzM3NTk=","github-url":"https://github.com/parrot/parrot/issues/793#issuecomment-6373759"},"message":"ok fair enough. I understand M0's design philosophy.Not x is implemented as -x -1 now. When (if ever?) M1 is finished, optimizations can be considered then.\n\nIf you want to save ops: one could implement isge as isgt and goto_if I think; that would save 2 ops (for _i and _n)) \n\nClosing ticket now as issue is resolved.","files":null},{"type":4,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1339858375,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTc4NzY3Nzc="},"status":2}]}