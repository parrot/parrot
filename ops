{"version":1,"ops":[{"type":1,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1319044874,"metadata":{"github-id":"MDU6SXNzdWUxOTk2MjE4","github-url":"https://github.com/parrot/parrot/issues/173","origin":"github"},"title":"Script to cross-compile Parrot with qemu","message":"This was originally: http://trac.parrot.org/parrot/ticket/610\n\nMay I suggest that we cheat a little and use qemu attain the goal of what we want from cross-compiling, without actually cross-compiling.\n\nI stole this idea from how emacs is cross-compiled in OpenEmbedded. Here is the rough idea:\n\n1) We add some arguments to Configure.pl to specify a target architechture 2) Our config subsystem learns how to detect if qemu is available 3) If qemu isn't available, die if attempting to cross compile 4) If qemu is available, start a qemu process of the wanted target architecture, then run the entire build process within qemu\n\nThe output of this will be binaries for architecture X, which are actually compiled, through the magic unicorn farts of qemu, for architecture Y.\n\nI think that this is actually feasible in the short term, unlike _actually_ modifying our config+build system to natively cross-compile, which I highly doubt will happen before the heat death of the universe.\n\nTo clarify, after qemu is started, another run of Configure.pl inside of qemu will be needed, and then a build.","files":null}]}