{"version":1,"ops":[{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1276344890,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwOTI=","github-url":"https://github.com/parrot/parrot/issues/424#issuecomment-3503092"},"message":"\u003cp\u003e\nThis code now segfaults in r47563\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bca615f854f7ca1044265d74ef4974a08d695fb1"},"timestamp":1278906205,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwOTM=","github-url":"https://github.com/parrot/parrot/issues/424#issuecomment-3503093"},"message":"\u003cp\u003e\nFixed in r48074; needs tests.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bca615f854f7ca1044265d74ef4974a08d695fb1"},"timestamp":1279068507,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwOTQ=","github-url":"https://github.com/parrot/parrot/issues/424#issuecomment-3503094"},"message":"\u003cp\u003e\npmichaud++ points out that while the patch does fix the problem at hand, it also breaks the imo less important case of resumable exceptions. So we need a fix that handles both before this ticket is closed.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e19:48 \u0026lt;@pmichaud\u0026gt; jnthn: I'm a bit concerned about the fix for TT #1631\n19:48 \u0026lt;@jnthn\u0026gt; Adding the pop_eh?\n19:48 \u0026lt;@pmichaud\u0026gt; right.\n19:48 \u0026lt;@jnthn\u0026gt; I don't think a CATCH should catch stuff thrown within it.\n19:48 \u0026lt;@pmichaud\u0026gt; doing the pop_eh removes the handler.\n19:48 \u0026lt;@ingy\u0026gt; greetings\n19:48 \u0026lt;@jnthn\u0026gt; Right, that's what I intended.\n19:48 \u0026lt;@ingy\u0026gt; jnthn: I agree\n19:48 \u0026lt;@pmichaud\u0026gt; perhaps not, but triggering a CATCH shouldn't disable it for\n                  all subsequent exceptions, either.\n19:49 \u0026lt;@pmichaud\u0026gt; die \"1\";  die \"2\";  CATCH { resume }\n19:49 \u0026lt;@jnthn\u0026gt; Oh. :S\n19:49 -!- cosimo [~cosimo@pat-tdc.opera.com] has quit [Remote host closed the\n          connection]\n19:50 \u0026lt;@jnthn\u0026gt; OTOH, I'd take getting basic exceptions and throws from within\n               the block over resumable exceptions, if it's the choice between\n               them.\n19:50 \u0026lt;@jnthn\u0026gt; (until we work out a way to do both)\n19:50 \u0026lt;@pmichaud\u0026gt; we have to be able to handle both, though.\n19:52 \u0026lt;@pmichaud\u0026gt; we need a way to throw exceptions such that they skip the\n                  current handler.\n19:53 \u0026lt;@pmichaud\u0026gt; (or the current handler otherwise ignores them)\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1279072353,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMwOTU=","github-url":"https://github.com/parrot/parrot/issues/424#issuecomment-3503095"},"message":"\u003cp\u003e\nAfter thinking about it further, I've decided to revert r48074.  The behavior before the patch was the correct one (it still is), and I'm not at all comfortable with changing it right before a supported Parrot release.  Rakudo and nqp-rx will have to come up ways to handle throwing exceptions from inside of handlers such that the handler doesn't immediately catch them.\n\u003c/p\u003e\n\n\u003cp\u003e\nReverted in r48081.\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null}]}