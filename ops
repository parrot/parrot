{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284924398,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDA=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503800"},"message":"\u003cp\u003e\nThis is part of our long-term technical debt.  Excerpts from the discussion in the original RT:\n\u003c/p\u003e\n\n\u003cp\u003e\nLeopold Toetsch on Mar 31 2006:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003eI've tried:\n$ perl Configure.pl --cc=gcc --link=gcc --ld=gcc --cxx=gcc\n--verbose-step=gcc\nand got:\nDetermining if your C compiler is actually gcc...gcc\n-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -xarch=v8 -D_TS_ERRNO\n-I./include -c test.c\ngcc: language arch=v8 not recognized\nFrom perl -V:\nCompiler:\ncc='cc', ccflags ='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\n-xarch=v8 -D_TS_ERRNO',\noptimize='-xO3 -xspace -xildoff',\nThat is, our config system is still using perl5 config vars blindly w/o\nfurther inspection and ignores commandline option at least partially.\n$ uname -a\nSunOS z1.t2000.develooper.com 5.10 Generic_118833-03 sun4v sparc\nSUNW,Sun-Fire-T200\n$ perl -v\nThis is perl, v5.8.4 built for sun4-solaris-64int\n$ cc -V\ncc: Sun C 5.8 2005/10/13\n$ gcc --version\ngcc (GCC) 3.4.3 (csl-sol210-3_4-branch+sol_rpath)\n\u003c/pre\u003e\u003cp\u003e\nAndy Dougherty subsequently explained that this is not a Solaris-specific problem:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e...[B]ut Solaris is probably one of the more\npopular platforms where this is appears. (The usual issue is that the\nvendor supplies a perl compiled with the vendor's compiler, but an end\nuser wishes to use gcc.)\n\u003c/pre\u003e\u003cp\u003e\nAndy also noted:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003eAnyone can check [for the existence of this problem] by editing\ntheir perl Config settings and seeing that they get passed through\nunquestioningly to parrot.\n\u003c/pre\u003e\u003cp\u003e\nSo, the problem with \u003ctt\u003eccflags\u003c/tt\u003e is really a subset of our larger dependency on the Perl t \u003ctt\u003e%Config\u003c/tt\u003e with which we begin our configuration in the second configuration step: \u003ctt\u003einit::defaults\u003c/tt\u003e.  The problem will go away whenever we can figure out a way to extract ourselves from that dependency.  TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/619\" title=\"roadmap: eliminate perl 5 dependency (closed: wontfix)\"\u003e#619\u003c/a\u003e is a long-term roadmap ticket covering this issue and then some.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1285012772,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDE=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503801"},"message":"\u003cpre class=\"wiki\"\u003e\u0026gt;  So, the problem with `ccflags` is really a subset of our larger dependency\n\u0026gt;  on the Perl t `%Config` with which we begin our configuration in the\n\u0026gt;  second configuration step: `init::defaults`.  The problem will go away\n\u0026gt;  whenever we can figure out a way to extract ourselves from that\n\u0026gt;  dependency.  TT #619 is a long-term roadmap ticket covering this issue and\n\u0026gt;  then some.\nI have never understood TT #619, particularly the bit about replacing\nreasonably portable Perl with a Unix shell script (and, presumably,\nparallel sets of hand-maintained config files for any non-unix platforms,\nsuch as Windows).\n--\n    Andy Dougherty      doughera@lafayette.edu\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1291708961,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDI=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503802"},"message":"\u003cp\u003e\nSee branch nwellnhof/compiler_flags which doesn't read ccflags from Perl's $Config hash.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1291763903,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDM=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503803"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:5\" title=\"Comment 5 for Ticket #1044\"\u003enwellnhof\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n See branch nwellnhof/compiler_flags which doesn't read ccflags from Perl's $Config hash.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThank you for taking on this challenge.  I would, however, recommend being\ncareful not to throw out the baby with the bathwater.  The perl %Config\nhash contains a lot of information.  In the absence of any other useful\ninformation, it's probably better than nothing.\n\u003c/p\u003e\n\n\u003cp\u003e\nPhrased differently:  What should Configure.pl do when faced with a new\nsystem for which you haven't yet put in the correct flags (e.g. there is\nno hints file, or the hints file has not been updated with the correct\nflags)? Perhaps in that situation, as long as the same compiler is being\nused, the perl %Config values should be used.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1292366102,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDQ=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503804"},"message":"\u003cp\u003e\nIMO, the Configure script should never use flags from the Perl config hash by default. But we could add an extra option to Configure.pl to use the compiler and linker flags from Perl as default. Something like --from-perl or --perl-defaults.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292410141,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDU=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503805"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:7\" title=\"Comment 7 for Ticket #1044\"\u003enwellnhof\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n IMO, the Configure script should never use flags from the Perl config hash by default.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nWe have to have something as default, if only because we have to have a starting point.\n\u003c/p\u003e\n\n\u003cp\u003e\nWhat would be a better choice than \u003ctt\u003e%Config\u003c/tt\u003e?\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1292445735,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDY=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503806"},"message":"\u003cp\u003e\nThe problem with %Config is that it's completely unreliable on platforms where more than one C compiler is commonly used. Especially on Windows. I don't think we will ever have a reliable build system on Windows if we use %Config as default.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe default compiler and linker flags should simply depend on the compiler with some additional tweaks by platform. I don't see a problem with that. I don't know of any other open source project that relies on Perl5's Config to build.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1292537527,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDc=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503807"},"message":"\u003cp\u003e\nI still don't understand why you want to throw away information even if it's the same compiler and you don't have anything else to go on, but since I'm not the one doing the work, I won't pursue it any further.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1292539761,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDg=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503808"},"message":"\u003cp\u003e\nFirst of all, it's a long term goal to reduce the dependency on Perl 5 in Parrot's config, build and test system.\n\u003c/p\u003e\n\n\u003cp\u003e\nThen, as I described above, using basically random compiler and linker flags from another project breaks if Perl was compiled with a different compiler.\n\u003c/p\u003e\n\n\u003cp\u003e\nEven if you use the same compiler, there are some compiler and linker flags in Perl's Config hash that Parrot simply doesn't need. Even worse, some of them cause build failures with Parrot. Have a look at all the code in the configuration system that removes certain conflicting flags. It seems that this has caused numerous build failures in that past and it might cause build failures with every new or untested Perl version.\n\u003c/p\u003e\n\n\u003cp\u003e\nI had a look at many configs from Smolder builds, and sometimes Parrot is linked against completely unneeded libraries just because Perl happens to use them. Do we want to special case every one of them?\n\u003c/p\u003e\n\n\u003cp\u003e\nIf we are building with a supported compiler on a supported platform, it isn't very hard to determine the correct compiler and linker flags. So I don't see what information we are throwing away. IMO, the whole thing has been a hack from the beginning that was probably nice to get the config system started but should have been fixed a long time ago.\n\u003c/p\u003e\n\n\u003cp\u003e\nAnd as I said above, I can offer to add an option to use the Perl flags as default.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292797144,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MDk=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503809"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:5\" title=\"Comment 5 for Ticket #1044\"\u003enwellnhof\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n See branch nwellnhof/compiler_flags which doesn't read ccflags from Perl's $Config hash.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI'm searching for a way to see what has happened in the branch from the point at which it was created.  I knew how to do this in Subversion, but that method won't work in Git.  My hunch is that this was the first commit in the branch:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003ecommit d2c2cc40f16a4aa5f7dd979808b282fb78664f02\nAuthor: Nick Wellnhofer \u0026lt;wellnhofer@aevum.de\u0026gt;\nDate:   Sat Oct 2 06:36:55 2010 +0200\n    [configure] Don't use compiler and linker flags from Perl\n\u003c/pre\u003e\u003cp\u003e\n... but I'm having trouble figuring out what the state of 'master' was at the point where this branch was created.\n\u003c/p\u003e\n\n\u003cp\u003e\nSuggestions?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1292799192,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTA=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503810"},"message":"\u003cp\u003e\nTo see the list of commits that are new in my branch, run:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003egit log master..nwellnhof/compiler_flags\n\u003c/pre\u003e\u003cp\u003e\nTo see a diff of those commits, run:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003egit diff master...nwellnhof/compiler_flags\n\u003c/pre\u003e\u003cp\u003e\nNotice the three dots.\n\u003c/p\u003e\n\n\u003cp\u003e\nOr have a look on github. Click on \"Branch List\" on the main page, then on \"Compare\" next to my branch. This should take you to the here: \u003ca   href=\"https://github.com/parrot/parrot/compare/master...nwellnhof%2Fcompiler_flags\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ehttps://github.com/parrot/parrot/compare/master...nwellnhof%2Fcompiler_flags\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nHope this helps,\n\u003c/p\u003e\n\n\u003cp\u003e\nNick\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292824296,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTE=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503811"},"message":"9214 byte attachment from jkeenan\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1044/master.compiler_flags.impact.txt\n\n```Working on branch master\nElement: a\n\n# 2  init::defaults\n\n  before: ''\n   after: '.a'\n\nElement: ar\n\n# 2  init::defaults\n\n  before: ''\n   after: 'ar'\n\nElement: cc\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: cc_o_out\n\n# 2  init::defaults\n\n  before: ''\n   after: '-o '\n\nElement: cc_shared\n\n# 2  init::defaults\n\n  before: ''\n   after: '-fPIC'\n\nElement: ccflags\n\n# 2  init::defaults\n\n  before: ''\n   after: '-fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n\n# 4  init::hints\n\n  before: '-fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'\n   after: '-fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'\n\n# 6  inter::progs\n\n  before: '-fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'\n   after: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'\n\n# 14  auto::attributes\n\n  before: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE'\n   after: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD '\n\n# 48  auto::gettext\n\n  before: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD '\n   after: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT'\n\n# 58  auto::libffi\n\n  before: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT'\n   after: ' -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT  '\n\nElement: ld\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: ld_load_flags\n\n# 2  init::defaults\n\n  before: ''\n   after: '-shared -O2 -L/usr/local/lib -fstack-protector'\n\n# 4  init::hints\n\n  before: '-shared -O2 -L/usr/local/lib -fstack-protector'\n   after: '-shared -O2 -L/usr/local/lib -fstack-protector -fPIC'\n\nElement: ld_share_flags\n\n# 2  init::defaults\n\n  before: ''\n   after: '-shared -O2 -L/usr/local/lib -fstack-protector'\n\n# 4  init::hints\n\n  before: '-shared -O2 -L/usr/local/lib -fstack-protector'\n   after: '-shared -O2 -L/usr/local/lib -fstack-protector -fPIC'\n\nElement: ldflags\n\n# 2  init::defaults\n\n  before: ''\n   after: ' -fstack-protector -L/usr/local/lib'\n\nElement: libparrot_shared\n\n# 2  init::defaults\n\n  before: ''\n   after: 'libparrot.so'\n\n# 4  init::hints\n\n  before: 'libparrot.so'\n   after: 'libparrot.so.2.10.1'\n\nElement: libparrot_static\n\n# 2  init::defaults\n\n  before: ''\n   after: 'libparrot.a'\n\nElement: libs\n\n# 2  init::defaults\n\n  before: ''\n   after: '-lnsl -lgdbm -ldl -lm -lcrypt -lutil -lc -lgdbm_compat'\n\n# 4  init::hints\n\n  before: '-lnsl -lgdbm -ldl -lm -lcrypt -lutil -lc -lgdbm_compat'\n   after: '-lnsl -lgdbm -ldl -lm -lcrypt -lutil -lc -lgdbm_compat -lpthread -lrt'\n\n# 6  inter::progs\n\n  before: '-lnsl -lgdbm -ldl -lm -lcrypt -lutil -lc -lgdbm_compat -lpthread -lrt'\n   after: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt'\n\n# 43  auto::gmp\n\n  before: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt'\n   after: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp'\n\n# 44  auto::readline\n\n  before: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp'\n   after: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline'\n\n# 48  auto::gettext\n\n  before: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline'\n   after: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline '\n\n# 58  auto::libffi\n\n  before: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline '\n   after: '-lnsl -ldl -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline  -lffi  '\n\nElement: link\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: link_dynamic\n\n# 2  init::defaults\n\n  before: ''\n   after: '-Wl,-E'\n\nElement: linkflags\n\n# 2  init::defaults\n\n  before: ''\n   after: ' -fstack-protector -L/usr/local/lib'\n\n# 4  init::hints\n\n  before: ' -fstack-protector -L/usr/local/lib'\n   after: ' -fstack-protector -L/usr/local/lib -Wl,-E'\n\n# 58  auto::libffi\n\n  before: ' -fstack-protector -L/usr/local/lib -Wl,-E'\n   after: ' -fstack-protector -L/usr/local/lib -Wl,-E  '\n\nElement: load_ext\n\n# 2  init::defaults\n\n  before: ''\n   after: '.so'\n\nElement: o\n\n# 2  init::defaults\n\n  before: ''\n   after: '.o'\n\nElement: optimize\n\nElement: ranlib\n\n# 2  init::defaults\n\n  before: ''\n   after: ':'\n\nElement: sPRIgldbl\n\nElement: share_ext\n\n# 2  init::defaults\n\n  before: ''\n   after: '.so'\n\nWorking on branch nwellnhof/compiler_flags\nElement: a\n\n# 2  init::defaults\n\n  before: ''\n   after: '.a'\n\nElement: ar\n\n# 2  init::defaults\n\n  before: ''\n   after: 'ar'\n\nElement: cc\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: cc_o_out\n\n# 2  init::defaults\n\n  before: ''\n   after: '-o '\n\nElement: cc_shared\n\n# 10  auto::gcc\n\n  before: ''\n   after: '-fPIC'\n\nElement: ccflags\n\n# 4  init::hints\n\n  before: ''\n   after: ' -D_GNU_SOURCE'\n\n# 14  auto::attributes\n\n  before: ' -D_GNU_SOURCE'\n   after: ' -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD '\n\n# 48  auto::gettext\n\n  before: ' -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD '\n   after: ' -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT'\n\n# 57  auto::libffi\n\n  before: ' -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT'\n   after: ' -D_GNU_SOURCE -DHASATTRIBUTE_CONST  -DHASATTRIBUTE_DEPRECATED  -DHASATTRIBUTE_MALLOC  -DHASATTRIBUTE_NONNULL  -DHASATTRIBUTE_NORETURN  -DHASATTRIBUTE_PURE  -DHASATTRIBUTE_UNUSED  -DHASATTRIBUTE_WARN_UNUSED_RESULT  -DHASATTRIBUTE_HOT  -DHASATTRIBUTE_COLD  -DHAS_GETTEXT  '\n\nElement: ld\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: ld_load_flags\n\n# 10  auto::gcc\n\n  before: ''\n   after: '-shared -fPIC'\n\nElement: ld_share_flags\n\n# 10  auto::gcc\n\n  before: ''\n   after: '-shared -fPIC'\n\nElement: ldflags\n\nElement: libparrot_shared\n\n# 2  init::defaults\n\n  before: ''\n   after: 'libparrot.so'\n\n# 4  init::hints\n\n  before: 'libparrot.so'\n   after: 'libparrot.so.2.10.1'\n\nElement: libparrot_static\n\n# 2  init::defaults\n\n  before: ''\n   after: 'libparrot.a'\n\nElement: libs\n\n# 4  init::hints\n\n  before: ''\n   after: ' -lpthread -lrt'\n\n# 43  auto::gmp\n\n  before: ' -lpthread -lrt'\n   after: ' -lpthread -lrt -lgmp'\n\n# 44  auto::readline\n\n  before: ' -lpthread -lrt -lgmp'\n   after: ' -lpthread -lrt -lgmp -lreadline'\n\n# 48  auto::gettext\n\n  before: ' -lpthread -lrt -lgmp -lreadline'\n   after: ' -lpthread -lrt -lgmp -lreadline '\n\n# 57  auto::libffi\n\n  before: ' -lpthread -lrt -lgmp -lreadline '\n   after: ' -lpthread -lrt -lgmp -lreadline  -lffi  '\n\nElement: link\n\n# 2  init::defaults\n\n  before: ''\n   after: 'cc'\n\nElement: link_dynamic\n\nElement: linkflags\n\n# 57  auto::libffi\n\n  before: ''\n   after: '  '\n\nElement: load_ext\n\n# 2  init::defaults\n\n  before: ''\n   after: '.so'\n\nElement: o\n\n# 2  init::defaults\n\n  before: ''\n   after: '.o'\n\nElement: optimize\n\nElement: ranlib\n\n# 2  init::defaults\n\n  before: ''\n   after: ':'\n\nElement: sPRIgldbl\n\nElement: share_ext\n\n# 2  init::defaults\n\n  before: ''\n   after: '.so'\n\n```\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292824326,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTI=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503812"},"message":"2222 byte attachment from jkeenan\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1044/tracetwobranches.pl\n\n``` #!/usr/local/bin/perl\n# tracetwobranches.pl\nuse strict;\nuse warnings;\nuse 5.10.0;\nuse Carp;\nuse File::Temp;\nuse Getopt::Long;\nuse lib qw( /home/jimk/gitwork/parrot/lib );\nuse Parrot::Configure::Trace;\n\nmy $topdir = q{/home/user};\nmy $sandbox = qq{$topdir/gitwork/parrot};\nchdir $sandbox or croak \"Unable to change to $sandbox: $!\";\nmy (@branches, @els);\nmy $max_step = '';\nGetOptions(\n    'branch=s' =\u003e \\@branches,\n    'max-step=i' =\u003e \\$max_step,\n    'el=s' =\u003e \\@els,\n) or exit(1);\n\ncroak \"Must provide 2 branches as command-line arguments\"\n    unless (@branches == 2);\ncroak \"Must provide at least 1 Parrot::Configure 'data' element\"\n    unless @els;\nmy @outputs;\nforeach my $br (@branches) {\n    push @outputs, traceformatteddiff($br, \\@els, $max_step);\n}\n\nsay $_ for @outputs;\nprepare_run($branches[0]);\n\nsub traceformatteddiff {\n    my ($br, $elsref, $max_step) = @_;\n    my $rv = prepare_run($br);\n    my $output = '';\n    $output .= \"Working on branch $br\\n\";\n    croak \"prepare_run() did not exit properly\" unless $rv;\n    system(qq{$^X Configure.pl --configure_trace})\n        and croak \"Unable to configure\";\n    croak \".configure_trace.sto not found\"\n        unless (-e './.configure_trace.sto');\n    my $obj = Parrot::Configure::Trace-\u003enew();\n    croak \"Parrot::Configure::Trace object undefined\"\n        unless defined $obj;\n    foreach my $el (@$elsref) {\n        $output .= \"Element: $el\\n\";\n        my $attr = $obj-\u003ediff_data_c( {\n            attr        =\u003e $el,\n        } );\n        foreach my $step (@$attr) {\n            my $human_step = $step-\u003e{number} + 1;\n            unless ($max_step and $human_step \u003e $max_step) {\n                $output .= sprintf(\"# %2d  %s\\n\" =\u003e\n                    ($human_step, $step-\u003e{name})\n                );\n                $output .= \"  before: '$step-\u003e{before}'\\n\";\n                $output .= \"   after: '$step-\u003e{after}'\\n\";\n            }\n        }\n        $output .= \"\\n\";\n    }\n\n    return $output;\n}\n\nsub prepare_run {\n    my $br = shift;\n    if (-e 'Makefile') {\n        system(q{make realclean --quiet 1\u003e/dev/null})\n            and croak \"Unable to make realclean\";\n    }\n    system(qq{git checkout $br})\n        and croak \"Unable to checkout $br\";\n    return 1;\n}\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292845845,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTM=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503813"},"message":"\u003cp\u003e\nLooking at this ticket over the past few days, I have come to believe that we'll need empirical data to decide which way to proceed.  At some point, it will be a judgment call as to which way of setting configuration data is 'better', but data can inform this judgment.\n\u003c/p\u003e\n\n\u003cp\u003e\nI wrote a program tonight, based on Parrot::Configure::Trace, which looks at how elements in the \u003ctt\u003edata\u003c/tt\u003e section of the Parrot::Configure object evolve over the course of configuration.  By focusing on the elements modified in the compiler_flags branch, we can see the differences in how they evolve over the course of configuration.\n\u003c/p\u003e\n\n\u003cp\u003e\nPlease see attached patches.  One is the program I wrote.  The other is an edited version of the output comparing the \u003ctt\u003emaster\u003c/tt\u003e and \u003ctt\u003enwellnhof/compiler_flags\u003c/tt\u003e branches on Linux/i386 through the first 14 configuation steps.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292845896,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTQ=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503814"},"message":"\u003cp\u003e\n'master' vs 'compiler_flags': impact on affected elements\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1292845926,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTU=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503815"},"message":"\u003cp\u003e\nProgram used to compare branches\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314492339,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTY=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503816"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:11\" title=\"Comment 11 for Ticket #1044\"\u003enwellnhof\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n First of all, it's a long term goal to reduce the dependency on Perl 5 in Parrot's config, build and test system.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nnwellnhof,\n\u003c/p\u003e\n\n\u003cp\u003e\nCan we get an update on the status of the issues discussed in this ticket and in the \u003ci\u003enwellnhof/compiler_flags\u003c/i\u003e branch?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"18879c4084549ff2c7022dc058bcf4940fadd0f2"},"timestamp":1314507935,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTc=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503817"},"message":"\u003cp\u003e\nI didn't get any further feedback on the compiler_flags branch. I still think it's the right approach but we will need a lot of testing on all kinds of platforms.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314563416,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTg=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503818"},"message":"4991 byte attachment from jkeenan\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1044/compiler_flags.darwin.build.failure.txt\n\n```ranlib: file: blib/lib/libparrot.a(variable_size_pool.o) has no symbols\n: blib/lib/libparrot.a\n/usr/local/bin/perl -MExtUtils::Command -e mkpath blib/lib\n/usr/bin/g++ -shared -fPIC -L\"/Users/jimk/gitwork/parrot/blib/lib\" -L/sw/lib -L/opt/local/lib  -o blib/lib/libparrot.3.7.0.so -install_name \"/usr/local/lib/libparrot.so\" \\\n        src/string/api.o src/ops/core_ops.o src/core_pmcs.o src/datatypes.o src/debug.o src/dynext.o src/embed.o src/embed/api.o src/embed/bytecode.o src/embed/strings.o src/embed/pmc.o src/string/encoding.o src/exceptions.o src/exit.o src/extend.o src/extend_vtable.o src/gc/alloc_memory.o src/gc/alloc_resources.o src/gc/api.o src/gc/gc_ms.o src/gc/gc_inf.o src/gc/gc_ms2.o src/gc/gc_gms.o src/gc/mark_sweep.o src/gc/system.o src/gc/fixed_allocator.o src/gc/variable_size_pool.o src/gc/string_gc.o src/global_setup.o src/hash.o src/hll.o src/call/pcc.o src/call/args.o src/interp/inter_cb.o src/interp/inter_create.o src/interp/inter_misc.o src/call/ops.o src/call/context.o src/call/context_accessors.o src/key.o src/library.o src/list.o src/pointer_array.o src/misc.o src/multidispatch.o src/namespace.o src/nci/api.o src/nci/signatures.o src/nci/core_thunks.o src/nci/extra_thunks.o src/oo.o src/packfile/object_serialization.o src/pmc.o src/runcore/main.o src/runcore/cores.o src/runcore/profiling.o src/scheduler.o src/spf_render.o src/spf_vtable.o src/sub.o src/thread.o src/runcore/trace.o src/utils.o src/vtables.o src/warnings.o src/packfile/api.o src/packfile/output.o src/packfile/pf_items.o src/packfile/segments.o src/longopt.o src/platform/generic/io.o src/platform/generic/socket.o src/platform/generic/file.o src/platform/generic/time.o src/platform/generic/encoding.o src/platform/generic/env.o src/platform/generic/dl.o src/platform/generic/math.o src/platform/generic/itimer.o src/platform/generic/exec.o src/platform/generic/misc.o src/platform/darwin/hires_timer.o src/platform/darwin/sysmem.o src/platform/generic/uid.o src/platform/generic/error.o src/platform/generic/entropy.o  src/io/core.o src/io/api.o src/io/buffer.o src/io/filehandle.o src/io/socket_api.o src/pmc/default.o src/pmc/null.o src/pmc/env.o src/pmc/key.o src/pmc/unmanagedstruct.o src/pmc/managedstruct.o src/pmc/exception.o src/pmc/parrotlibrary.o src/pmc/parrotinterpreter.o src/pmc/parrotthread.o src/pmc/lexpad.o src/pmc/timer.o src/pmc/pointer.o src/pmc/sub.o src/pmc/continuation.o src/pmc/coroutine.o src/pmc/eval.o src/pmc/nci.o src/pmc/float.o src/pmc/integer.o src/pmc/bigint.o src/pmc/bignum.o src/pmc/complex.o src/pmc/string.o src/pmc/boolean.o src/pmc/fixedintegerarray.o src/pmc/iterator.o src/pmc/fixedstringarray.o src/pmc/hash.o src/pmc/orderedhash.o src/pmc/oplib.o src/pmc/opcode.o src/pmc/addrregistry.o src/pmc/arrayiterator.o src/pmc/bytebuffer.o src/pmc/callcontext.o src/pmc/capture.o src/pmc/class.o src/pmc/eventhandler.o src/pmc/exceptionhandler.o src/pmc/exporter.o src/pmc/filehandle.o src/pmc/fixedbooleanarray.o src/pmc/fixedfloatarray.o src/pmc/fixedpmcarray.o src/pmc/handle.o src/pmc/hashiterator.o src/pmc/hashiteratorkey.o src/pmc/imageiofreeze.o src/pmc/imageiosize.o src/pmc/imageiostrings.o src/pmc/imageiothaw.o src/pmc/imccompiler.o src/pmc/lexinfo.o src/pmc/mappedbytearray.o src/pmc/multisub.o src/pmc/namespace.o src/pmc/nativepccmethod.o src/pmc/object.o src/pmc/orderedhashiterator.o src/pmc/packfile.o src/pmc/packfileannotation.o src/pmc/packfileannotations.o src/pmc/packfilebytecodesegment.o src/pmc/packfileconstanttable.o src/pmc/packfiledebug.o src/pmc/packfiledirectory.o src/pmc/packfileopmap.o src/pmc/packfilerawsegment.o src/pmc/packfilesegment.o src/pmc/packfileview.o src/pmc/pmcproxy.o src/pmc/ptr.o src/pmc/ptrbuf.o src/pmc/ptrobj.o src/pmc/resizablebooleanarray.o src/pmc/resizablefloatarray.o src/pmc/resizableintegerarray.o src/pmc/resizablepmcarray.o src/pmc/resizablestringarray.o src/pmc/role.o src/pmc/scalar.o src/pmc/scheduler.o src/pmc/schedulermessage.o src/pmc/sockaddr.o src/pmc/socket.o src/pmc/stringbuilder.o src/pmc/stringhandle.o src/pmc/stringiterator.o src/pmc/structview.o src/pmc/task.o src/pmc/threadinterpreter.o src/pmc/undef.o src/string/encoding/shared.o src/string/encoding/tables.o src/string/encoding/null.o src/string/encoding/ascii.o src/string/encoding/latin1.o src/string/encoding/binary.o src/string/encoding/utf8.o src/string/encoding/utf16.o src/string/encoding/ucs2.o src/string/encoding/ucs4.o compilers/imcc/imcparser.o compilers/imcc/imclexer.o compilers/imcc/imc.o compilers/imcc/main.o compilers/imcc/symreg.o compilers/imcc/instructions.o compilers/imcc/cfg.o compilers/imcc/reg_alloc.o compilers/imcc/sets.o compilers/imcc/debug.o compilers/imcc/optimizer.o compilers/imcc/pbc.o compilers/imcc/parser_util.o compilers/imcc/pcc.o compilers/imcc/api.o -lgmp -lreadline -lintl \npowerpc-apple-darwin8-g++-4.0.1: unrecognized option '-shared'\npowerpc-apple-darwin8-g++-4.0.1: -install_name only allowed with -dynamiclib\nmake: **\\* [blib/lib/libparrot.3.7.0.so] Error 1\n\n```\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314580347,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MTk=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503819"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:16\" title=\"Comment 16 for Ticket #1044\"\u003enwellnhof\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n I didn't get any further feedback on the compiler_flags branch. I still think it's the right approach but we will need a lot of testing on all kinds of platforms.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThanks for responding to the cage cleaner's inquiry.\n\u003c/p\u003e\n\n\u003cp\u003e\n1. In order to continue work on this, I will take the ticket.  I have merged master into the branch in order to capture what has been done in master since you originally created the branch.\n\u003c/p\u003e\n\n\u003cp\u003e\n2. I had merge conflicts in three files during that merge.  The ones I'm most worried about are in \u003ci\u003econfig/init/hints/mswin32.pm\u003c/i\u003e.  I fear I may have deleted work that was done after the branch point which should be retained.  So more eyeballs would be helpful here.\n\u003c/p\u003e\n\n\u003cp\u003e\n3. I have tested the branch on linux/i386 with an all-gcc build and an all=g++ build.  \u003ctt\u003emake test\u003c/tt\u003e completes successfully in both cases.  I am currently testing the branch on darwin/ppc with my customary mixed build, gcc for the compiler and g++ for \u003ctt\u003eld\u003c/tt\u003e and \u003ctt\u003elink\u003c/tt\u003e.  I expect all tests will pass except the one in \u003ci\u003et/dynpmc/select.t\u003c/i\u003e that is currently failing.\n\u003c/p\u003e\n\n\u003cp\u003e\n4. I agree with you that we will need to get this branch tested on other OSes before we can merge it, particularly MSWin32 and the Cygwin/Msys variants that are now getting some attention.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314581209,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MjA=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503820"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1044#comment:17\" title=\"Comment 17 for Ticket #1044\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n 3.   I am currently testing the branch on darwin/ppc with my customary mixed build, gcc for the compiler and g++ for \u003ctt\u003eld\u003c/tt\u003e and \u003ctt\u003elink\u003c/tt\u003e.  I expect all tests will pass except the one in \u003ci\u003et/dynpmc/select.t\u003c/i\u003e that is currently failing.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI was too optimistic.  I'm getting a build failure on Darwin. Will attach the tail of the \u003ctt\u003emake\u003c/tt\u003e log.  Motion backward toward Square One.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1314581416,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM4MjE=","github-url":"https://github.com/parrot/parrot/issues/628#issuecomment-3503821"},"message":"\u003cp\u003e\nat 82fc9fd911b\n\u003c/p\u003e","files":null}]}