{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1286505983,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3Mzc=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502737"},"message":"1372 byte attachment from ellefu\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1819/patch.txt\n\n```--- tools/dev/mk_language_shell.in      (revision 49475)\n+++ tools/dev/mk_language_shell.in      (working copy)\n@@ -656,12 +656,9 @@\n */\n\n```\n METHOD PMC* get() {\n```\n-        PMC\\* property;\n-        INTVAL array_t;\n-        STRING\\* property_name;\n-        PMC\\* property = VTABLE_getprop(INTERP, SELF, property_name);\n- ```\n     STRING* property_name = string_from_literal(INTERP, \"property\");\n  ```\n- ```\n     property_name = string_from_literal(INTERP, \"property\");\n  ```\n-        shape = VTABLE_getprop(INTERP, SELF, property_name);\n       if (PMC_IS_NULL(property)) {\n          /*\n           \\* No property has been set yet. This means that we are\n  @@ -671,7 +668,7 @@\n           \\* specify it?\n           _/\n           /_\n-            array_t = Parrot_pmc_get_type_str(INTERP,\n- ```\n         INTVAL array_t = Parrot_pmc_get_type_str(INTERP,\n           string_from_literal(INTERP, \"@lang@\"));\n       */\n       property = Parrot_pmc_new(INTERP, VTABLE_type(INTERP, SELF));\n  ```\n  \n  @@ -710,7 +707,7 @@\n       old_property = VTABLE_getprop(INTERP, SELF, property_name);\n       VTABLE_setprop(INTERP, SELF, property_name, new_property);\n- ```\n     /* how big are these property? */\n  ```\n-        /\\* how big are these properties? */\n       old_size = size(INTERP, SELF, old_property);\n       new_size = size(INTERP, SELF, new_property);\n\n```\n```","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1286523983,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3Mzg=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502738"},"message":"Trac commenter: ellefu\n\n```\n    \u003cp\u003e\n```\n\nPatch for mk_language_shell.pl bug\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1286528622,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3Mzk=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502739"},"message":"1584 byte attachment from ellefu\nat http://trac.parrot.org/parrot/raw-attachment/ticket/1819/updated_patch.txt\n\n# ```Index: tools/dev/mk_language_shell.in\n\n--- tools/dev/mk_language_shell.in      (revision 49475)\n+++ tools/dev/mk_language_shell.in      (working copy)\n@@ -647,6 +647,8 @@\n     SUPER();\n };\n\n+/*\n+\n =item C\u003cPMC* get()\u003e\n\n Returns a vector-like PMC.\n@@ -656,12 +658,9 @@\n */\n\n```\n METHOD PMC* get() {\n```\n-        PMC\\* property;\n-        INTVAL array_t;\n-        STRING\\* property_name;\n-        PMC\\* property = VTABLE_getprop(INTERP, SELF, property_name);\n- ```\n     STRING* property_name = string_from_literal(INTERP, \"property\");\n  ```\n- ```\n     property_name = string_from_literal(INTERP, \"property\");\n  ```\n-        shape = VTABLE_getprop(INTERP, SELF, property_name);\n       if (PMC_IS_NULL(property)) {\n          /*\n           \\* No property has been set yet. This means that we are\n  @@ -671,7 +670,7 @@\n           \\* specify it?\n           _/\n           /_\n-            array_t = Parrot_pmc_get_type_str(INTERP,\n- ```\n         INTVAL array_t = Parrot_pmc_get_type_str(INTERP,\n           string_from_literal(INTERP, \"@lang@\"));\n       */\n       property = Parrot_pmc_new(INTERP, VTABLE_type(INTERP, SELF));\n  ```\n  \n  @@ -710,7 +709,7 @@\n       old_property = VTABLE_getprop(INTERP, SELF, property_name);\n       VTABLE_setprop(INTERP, SELF, property_name, new_property);\n- ```\n     /* how big are these property? */\n  ```\n-        /\\* how big are these properties? */\n       old_size = size(INTERP, SELF, old_property);\n       new_size = size(INTERP, SELF, new_property);\n\n```\n```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1286543567,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NDA=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502740"},"message":"\u003cp\u003e\nI tried mk_language_shell --with-pmc with parrot 49387 and it compiled and passed tests.\n\u003c/p\u003e\n\n\u003cp\u003e\nCan you attach the output of \"parrot_config revision\" and the complete error message that you get when compiling?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1286546534,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NDE=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502741"},"message":"Trac commenter: ellefu\n\n\u003cp\u003e\nAha! I see the problem. In SVN, there's a separate bug which is masking this bug -- a missing C open-comment after init(). I'll attach a new patch. It may be compiling on your system, but it's not working -- it's just ignoring everything in the .pmc file after init()! pmc2c's almost complete lack of error reporting is becoming quite troublesome.\n\u003c/p\u003e\n\n\u003cp\u003e\nIf I add this patch to my working copy:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e--- tools/dev/mk_language_shell.in      (revision 49475)\n+++ tools/dev/mk_language_shell.in      (working copy)\n@@ -647,6 +647,8 @@\n     SUPER();\n };\n+/*\n+\n =item C\u0026lt;PMC\\* get()\u0026gt;\n Returns a vector-like PMC.\n\u003c/pre\u003e\u003cp\u003e\n...I get this output when I try to do \u003ctt\u003eparrot setup.pir build\u003c/tt\u003e:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003ecc -c -o  src/pmc/yourmom.o [ten million gcc switches] src/pmc/yourmom.c\n./src/pmc/yourmom.pmc: In function 창Parrot_YourMom_nci_get창:\n./src/pmc/yourmom.pmc:111: error: 창shape창 undeclared (first use in this function)\n./src/pmc/yourmom.pmc:111: error: (Each undeclared identifier is reported only once\n./src/pmc/yourmom.pmc:111: error: for each function it appears in.)\nexit status: 256\n\u003c/pre\u003e\u003cp\u003e\n...which is the bug my initial patch addressed. I'll update the attachment to contain both fixes. Thanks!\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1286634429,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NDI=","github-url":"https://github.com/parrot/parrot/issues/315#issuecomment-3502742"},"message":"\u003cp\u003e\nellefu, I applied (but didn't commit) your patch (updated_patch.txt), and while it does fix some obvious problems, the generated PMC still doesn't build.  You're welcome to get the PMC to build properly (and I'll be glad to apply such a patch).\n\u003c/p\u003e\n\n\u003cp\u003e\nIf you're feeling more ambitious, I think it'd be helpful if new HLL developers had a more user-friendly PMC as a template.  Looking at the generated PMC, it's not entirely clear what it is or what it's supposed to do.  When a new developer comes along, it'd be better to present a PMC with common semantics (i.e. Integer, Hash, etc) so that the developer won't have to spend as much time figuring out what the PMC does before moving on to figuring out how it does it.  That said, I'm sure any new developer will spend lots of time looking at Parrot's core PMCs and any dynpmcs available, so there's no need for the template PMC to be anything more than a good clear starting point.\n\u003c/p\u003e","files":null}]}