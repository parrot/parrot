{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1423226800,"metadata":{"github-id":"MDU6SXNzdWU1NjgwNzc1Ng==","github-url":"https://github.com/parrot/parrot/issues/1201","origin":"github"},"title":"Check and fix -Wcast-align for strict-align RISC platforms","message":"See #1200\nwe need a ARMv5 or MIPS platform which do require word aligned pointers and throw these warnings.\nWe might need to add a config probe on those platforms for a PARROT_HAS_STRICT_WORDALIGN\n# ifdef and check the alignment then at runtime with a possible needed memcpy before we can access the pointer value.\n\n```\n--- src/packfile/api.c\n+++ src/packfile/api.c\n@@ -341,10 +341,11 @@ PackFile *\n Parrot_pf_deserialize(PARROT_INTERP, ARGIN(STRING *str))\n {\n     ASSERT_ARGS(Parrot_pf_deserialize)\n-    PackFile       * const pf  = Parrot_pf_new(interp, 0);\n-    const opcode_t * const ptr =\n-            (const opcode_t *)Parrot_str_cstring(interp, str);\n-    const int length           = Parrot_str_byte_length(interp, str);\n+    PackFile       * const pf   = Parrot_pf_new(interp, 0);\n+    const char     * const cstr = Parrot_str_cstring(interp, str);\n+    /* XXX -Wcast-align Need to check alignment for RISC, or memcpy */\n+    const opcode_t * const ptr  = (const opcode_t *)cstr;\n+    const int length            = Parrot_str_byte_length(interp, str);\n\n     if (!Parrot_pf_unpack(interp, pf, ptr, length)) {\n         Parrot_pf_destroy(interp, pf);\n@@ -2687,6 +2688,7 @@ read_pbc_file_packfile_handle(PARROT_INTERP, ARGIN(STRING * const fullname),\n     PackFile * const pf = Parrot_pf_new(interp, 0);\n     pf-\u003eoptions = 0;\n\n+    /* XXX -Wcast-align Need to check alignment for RISC, or memcpy */\n     if (!Parrot_pf_unpack(interp, pf, (opcode_t *)program_code, (size_t)program_size))\n         Parrot_ex_throw_from_c_args(interp, NULL, EXCEPTION_INVALID_OPERATION,\n                 \"Can't unpack packfile %Ss\", fullname);\n@@ -2796,6 +2798,7 @@ read_pbc_file_packfile(PARROT_INTERP, ARGIN(STRING * const fullname),\n     pf = Parrot_pf_new(interp, is_mapped);\n     pf-\u003eoptions = 0;\n\n+    /* XXX -Wcast-align Need to check alignment for RISC, or memcpy */\n     if (!Parrot_pf_unpack(interp, pf, (opcode_t *)program_code, (size_t)program_size))\n         Parrot_ex_throw_from_c_args(interp, NULL, EXCEPTION_INVALID_OPERATION,\n                 \"Can't unpack packfile %Ss\", fullname);\ndiff --git src/packfile/pf_items.c src/packfile/pf_items.c\nindex ec96a9da..9bbd366 100644\n--- src/packfile/pf_items.c\n+++ src/packfile/pf_items.c\n@@ -1085,6 +1085,7 @@ PF_fetch_opcode(ARGIN_NULLOK(const PackFile *pf), ARGMOD(const opcode_t **stream\n         const unsigned char *ucstream = *(const unsigned char **)stream;\n         opcode_t o  = (pf-\u003efetch_op)(ucstream);\n         ucstream   += pf-\u003eheader-\u003ewordsize;\n+        /* XXX -Wcast-align Need to check alignment for RISC, or memcpy */\n         *stream     = (const opcode_t *)ucstream;\n         return o;\n     }\n```","files":null}]}