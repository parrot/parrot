{"version":1,"ops":[{"type":1,"author":{"id":"099af60226e2576bd4ff0f5c2614b710c745cab6"},"timestamp":1330942166,"metadata":{"github-id":"MDU6SXNzdWUzNTA0MDk4","github-url":"https://github.com/parrot/parrot/issues/727","origin":"github"},"title":"Memory related (non-GC version) macros are deprecated and will be removed.","message":"Hello.\n\nNext macros:\n# define mem_sys_memcopy memcpy\n# define mem_sys_memmove memmove\n# define mem_allocate_typed(type)            (type *)mem_sys_allocate(sizeof (type))\n# define mem_allocate_n_typed(n, type)       (type *)mem_sys_allocate((n) \\* sizeof (type))\n# define mem_allocate_zeroed_typed(type)     (type *)mem_sys_allocate_zeroed(sizeof (type))\n# define mem_allocate_n_zeroed_typed(n, type) (type *)mem_sys_allocate_zeroed((n) \\* sizeof (type))\n# define mem_realloc_n_typed(p, n, type)     (p) = (type *)mem_sys_realloc((p), (n) \\* sizeof (type))\n\nhave nothing to do with parrot functionality and just custom macros for malloc/free. They are not part of parrot's provided facilities and will be removed.\n\nFunctions mem_sys_allocate, mem_sys_reallocate and mem_sys_free will be also removed.\n\nAny HLL should move to use:\n1. Standard malloc/free functions.\n2. Or better, GC backed mem_gc_\\* macros.\n## \n\nBacek","files":null}]}