{"version":1,"ops":[{"type":1,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1234372026,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NTY3","github-url":"https://github.com/parrot/parrot/issues/366","origin":"github"},"title":"ignore print -0 test errors on win32","message":"The win32 msvcrt has a special limitation not to print -0 as -0, instead it prints 0.\n\nopenbsd seems to have the same problem. cygwin is not affected, since it uses newlib, which is similar to the glibc in this regard.\n\nFor now I fixed the failing tests, but there should be a workaround.\n\n```\nt\\pmc\\complex.t:\nnot ok 380 - sinh of 0-2i\n# Have: 0.000000-0.909297i\n# Want: -0.000000-0.909297i\nnot ok 381 - sinh of 0+2i\n# Have: 0.000000+0.909297i\n# Want: -0.000000+0.909297i\n\nt\\pmc\\float.t:\nnot ok 23 - neg 0\n#   Failed test 'neg 0'\n#   at t\\pmc\\float.t line 509\n#                   '0'\n#     doesn't match '/^-0/\n# '\n\nt\\op\\arithmetics.t:\nnot ok 7 - turn a native number into its negative\n#   Failed test 'turn a native number into its negative'\n#   at t\\op\\arithmetics.t line 175.\n#          got: '0\n#0\n# -123.456789\n#123.456789\n#0\n#0\n# -123.456789\n#123.456789\n# '\n#     expected: '-0\n#0\n# -123.456789\n#123.456789\n# -0\n#0\n# -123.456789\n#123.456789\n# '\n```\n\nThe internal numeric representation seems not to be affected.\nIn detail, this patch does not help. It's just the printer.\n\n```\nIndex: parrot-svn/src/ops/math.ops\n===================================================================\n--- parrot-svn.orig/src/ops/math.ops\n+++ parrot-svn/src/ops/math.ops\n@@ -774,7 +774,17 @@ inline op neg(inout INT) :base_core {\n }\n\n inline op neg(inout NUM) :base_core {\n+#ifdef WIN32\n+  /* The msvcrt is broken for neg -0.0 */\n+  if ($1 == -0.0) {\n+    $1 = -0.0;\n+  }\n+  else {\n+    $1 = - $1;\n+  }\n+#else\n   $1 = - $1;\n+#endif\n }\n\n inline op neg(invar PMC) :base_core {\n@@ -786,7 +796,17 @@ inline op neg(out INT, in INT) :base_cor\n }\n\n inline op neg(out NUM, in NUM) :base_core {\n+#ifdef WIN32\n+  /* The msvcrt is broken for neg -0.0 */\n+  if ($2 == -0.0) {\n+    $1 = -0.0;\n+  }\n+  else {\n+    $1 = - $1;\n+  }\n+#else\n   $1 = - $2;\n+#endif\n }\n\n inline op neg(out PMC, invar PMC) :base_core { \n```\n\nOriginally http://trac.parrot.org/parrot/ticket/313","files":null}]}