{"version":1,"ops":[{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1271819428,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NzE=","github-url":"https://github.com/parrot/parrot/issues/326#issuecomment-3502771"},"message":"\u003cp\u003e\nHere is a partial analysis, tested on r45670:\n\u003c/p\u003e\n\n\u003cp\u003e\nI don't think that this problem is really about the size of the .pbc file.\n\u003c/p\u003e\n\n\u003cp\u003e\nThis problem occurs with *any* PBC built from PIR containing Unicode literal strings. Only large PIR modules happen to contain Unicode literals right now, hence the appearance that PBC size is an element of the problem.\n\u003c/p\u003e\n\n\u003cp\u003e\nFor example, the following code complies to .pbc and executes correctly, but fails to disassemble:\n\u003c/p\u003e\n\n\u003cp\u003e\n$ cat unicode_minimal_crash.pir\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e.sub _main\n    $S0 = 'd'\n    $I0 = index unicode:\"abc\\x{a0}def\", $S0\n    print \"The answer is \"\n    say $I0\n    end\n.end\n\u003c/pre\u003e\u003cp\u003e\n$ ./parrot -o unicode_minimal_crash.pbc unicode_minimal_crash.pir\n\u003c/p\u003e\n\u003cp\u003e\n$ ./parrot unicode_minimal_crash.pbc\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003eThe answer is 4\n\u003c/pre\u003e\u003cp\u003e\n$ ./pbc_disassemble unicode_minimal_crash.pbc\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e=head1 Constant-table\nPMC_CONST(0): 'ParrotInterpreter'\nPMC_CONST(1): abcÂ def\nPMC_CONST(2): d\nPMC_CONST(3): The answer is\nPMC_CONST(4): unicode_minimal_crash.pir\nPMC_CONST(5):\nPMC_CONST(6): _main\n=cut\n#   Seq_Op_Num- Relative-PC SrcLn#:\n# Current Source Filename 'unicode_minimal_crash.pir'\n000000000000-000000000000 000003:   set_s_sc S0,\"d\"\n000000000001-000000000003 000004:   index_i_sc_s I0,\"abcInvalid character for UTF-8 encoding\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1271823781,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NzI=","github-url":"https://github.com/parrot/parrot/issues/326#issuecomment-3502772"},"message":"\u003cp\u003e\nThe problem is that the string is converted to C string and later sent char by char to the output file, which is a encoding nightmare. To fix the problem the C string usage must be avoided. in the meantime, workaround added in r45831.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1282910179,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI3NzM=","github-url":"https://github.com/parrot/parrot/issues/326#issuecomment-3502773"},"message":"\u003cp\u003e\nCurrent failure mode:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e\n$ pbc_disassemble perl6.pbc\nCould not load oplib `io_ops'\n\u003c/pre\u003e","files":null}]}