{"version":1,"ops":[{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1350230022,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk0MjA4NDM=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9420843"},"message":"Could we get a few more details about the environment in which the above tests are being run?  When I do the above on my system (Kubuntu 12.04.1, 64-bit) I don't see the record separator changing.\n\nAlso, would it be possible to set a GDB watchpoint on `((Parrot_Handle_attributes*)interp-\u003epiodata-\u003etable[0]-\u003edata)-\u003erecord_separator` , and give a backtrace?  Then we might be able to find out what is causing the record separator to be changed.\n\nThanks for the excellent debugging!\n\nPm","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1350231353,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk0MjEyMDI=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9421202"},"message":"Try the following in NQP on your system and see if the record separator changes unacceptably:\n\n```\n(gdb) run -e 'my $IN := pir::getstdin__P; $IN.encoding(\"utf8\"); pir::print__is($IN.readline);'\n```\n\nPm","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1350237637,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk0MjM2OTY=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9423696"},"message":"I'm on Cygwin, which I did not mention before as I (apparently incorrectly?) believed that this bug (`$*IN.get` not terminating on `\\n`) was well-known and one of the reasons why Rakudo does not use current Parrot.\n\nPlaying around some more with the debugger, this appears to be a GC bug: The string header gets recycled while still referenced from the attribute structure.\n\nPerhaps you've got better luck reproducing the bug by running something more involved - I first stumbled upon it when I ran `k-nucleotide.p6.pl` from [perl6-examples/shootout](https://github.com/perl6/perl6-examples/tree/master/shootout):\n\n```\n$ perl6 k-nucleotide.p6.pl \u003ck-nucleotide.input\n\n\n  0     ggt\n  0     ggta\n  0     ggtatt\n  0     ggtattttaatt\n  0     ggtattttaatttatagt\n```\n\nis not the expected output.","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1350239967,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk0MjQxMjE=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9424121"},"message":"On Sun, Oct 14, 2012 at 11:00:42AM -0700, Gerhard R. wrote:\n\n\u003e I'm on Cygwin, which I did not mention before as I (apparently incorrectly?)\n\u003e believed that this bug ($*IN.get not terminating on \\n) was well-known and one\n\u003e of the reasons why Rakudo does not use current Parrot.\n\nIt's a well-known bug, yes, but it's only manifesting on some systems.\nI haven't been able to reproduce it in any of my environments yet.\n\n\u003e Playing around some more with the debugger, this appears to be a GC bug: The\n\u003e string header gets recycled while still referenced from the attribute\n\u003e structure.\n\nHow much memory on that system?  That would indicate how often GC is occurring.\n\nAFAICT, in looking at handle.pmc I can't find where the 'record_separator'\nand 'encoding' fields ever get marked during GC.  (All of the other PMCs I've\nlooked at containing STRING attributes have explicit mark() vtables and\nexplicit calls to Parrot_gc_mark_STRING_alive().)\n\nPm","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1350829815,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk2NDMwODQ=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9643084"},"message":"Here's some PIR which triggers the bug on my system:\n\n```\n$ cat rs.pir\n.sub 'printrs'\n    .param pmc handle\n    .local string rs\n\n    rs = handle.'record_separator'()\n    print \"record separator is [[[\"\n    print rs\n    print \"]]]\\n\"\n\n.end\n\n.sub 'main' :main\n    .local pmc stdin\n\n    stdin = getstdin\n    printrs(stdin)\n\n    # all of these are necessary to trigger the bug\n    stdin.'encoding'('utf8')\n    sweep 1\n    stdin.'readline'()\n\n    printrs(stdin)\n\n.end\n\n$ echo NOT_A_SEPARATOR | install/bin/parrot rs.pir\nrecord separator is [[[\n]]]\nrecord separator is [[[NOT_A_SEPARATOR\n]]]\n```","files":null},{"type":3,"author":{"id":"7549479df4e8546ed0184fe84c8396ddb96232a3"},"timestamp":1350851511,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk2NDcyMjQ=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9647224"},"message":"Could you test 3c558c8a54ee87699e9426f111d21db59dd38b36\n\nOn my PC it works as expected with the minimal PIR test case provided here.","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1350853371,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDk2NDc1NDk=","github-url":"https://github.com/parrot/parrot/issues/860#issuecomment-9647549"},"message":"I just rebuilt Parrot/NQP/Rakudo. All test cases mentioned here now pass on my machine.","files":null},{"type":4,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1350853372,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Mjc0MzMxMTU="},"status":2}]}