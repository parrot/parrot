{"version":1,"ops":[{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1362913444,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0Njc5NTI1","github-url":"https://github.com/parrot/parrot/issues/942#issuecomment-14679525"},"message":"The code hangs in the `recv()` call right before\n\n```\n#0  Parrot_io_internal_recv (interp=0x80039ac8, os_handle=4,\n    buf=0x8446d824 \"\", len=252) at src/platform/generic/socket.c:695\n#1  0x6ddfe95d in io_socket_read_b (interp=0x80039ac8, handle=0x8444400c,\n    buffer=0x8446d824 \"\", byte_length=252) at src/io/socket.c:266\n#2  0x6ddfca1d in Parrot_io_buffer_fill (interp=0x80039ac8, buffer=0x84464de0,\n    handle=0x8444400c, vtable=0x800ef738) at src/io/buffer.c:618\n#3  0x6de0291c in io_readline_encoded_string (interp=0x80039ac8,\n    handle=0x8444400c, vtable=0x800ef738, buffer=0x84464de0,\n    encoding=0x6df32940, rs=0x815acbd0) at src/io/utilities.c:425\n#4  0x6ddf9161 in Parrot_io_readline_s (interp=0x80039ac8, handle=0x8444400c,\n    terminator=0x815acbd0) at src/io/api.c:977\n```\n\nI used the following 2 scripts to reproduce the issue:\n- `server.pl`\n  \n  ```\n  use v6;\n  use MONKEY_TYPING;\n  \n  augment class IO::Socket::INET {\n      method readline {\n          my Mu $PIO  := nqp::getattr(self, $?CLASS, '$!PIO');\n          $PIO.encoding(nqp::unbox_s(PARROT_ENCODING(self.encoding)));\n          nqp::p6box_s($PIO.readline(nqp::unbox_s($!input-line-separator)));\n      }\n  }\n  \n  my $socket = IO::Socket::INET.new(\n      :localhost\u003c127.0.0.1\u003e,\n      :localport(1234),\n      :listen\n  ).accept;\n  \n  while $_ = $socket.readline {\n      .perl.say \n  }\n  ```\n- `client.pl`\n  \n  ```\n  use v6;\n  \n  my $socket = IO::Socket::INET.new(:host\u003c127.0.0.1\u003e, :port(1234));\n  $socket.send(\"A\\n\");\n  $socket.send(\"B\\n\");\n  \n  $*IN.get;\n  ```","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1364170306,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzcyNzU3","github-url":"https://github.com/parrot/parrot/issues/942#issuecomment-15372757"},"message":"Can this issue be closed?","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1364208168,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Mzg2NTky","github-url":"https://github.com/parrot/parrot/issues/942#issuecomment-15386592"},"message":"No. The fix that was merged regressed other stuff and has been reverted: While it did fix alway waiting for the maximal length of bytes in case of variable-length codings (and thus potentially blocking indefinitely), it ended up reading not enough in other cases.\n\nThe (imo) proper fix turned out to be more involved as I folded the logic into EOF handling. See #944.","files":null}]}