{"version":1,"ops":[{"type":3,"author":{"id":"099af60226e2576bd4ff0f5c2614b710c745cab6"},"timestamp":1252948770,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4MTk=","github-url":"https://github.com/parrot/parrot/issues/348#issuecomment-3502819"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/816\" title=\"bug: PMC 'Undef' does not support logical_not (new)\"\u003eAustin_Hastings\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n This code in Close:\n {{{\n    ok(!(o.flat()), \"flat: New object (undef flat) is false\");\n }}}\n compiles to:\n {{{\n     $P51 = o.\"flat\"()\n     not $P52, $P51\n     \"ok\"($P52, \"flat: New object (undef flat) is false\")\n }}}\n And then fails, with:\n {{{\n logical_not() not implemented in class 'Undef'\n }}}\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nUndef.logical_not was implemented in r41259.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Grepping for logical_not in *.pmc gives back only scalar.pmc.\n   * While I know that Perl's Undef has 0/nil/false/\"\" behavior, is that right for Parrot? (To what extent is Undef just a safe Null?)\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nNo. Undef is not \"safe Null\". Undef is something declared but not defined. Null is undeclared at all.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n   * Should there even be a 'not' opcode? We've got isfalse.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nSome weird languages can have semantic of \"Foo == !Foo\" :)\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n   * Should other pmc types be implementing logical_not?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nNot all of them. But all scalar types probably should.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n   * Should Undef be a subclass of scalar, and so inherit?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nIt's actually really good idea from my point of view. I would recommend to open \"RFC ticket\" with this proposal.\n\u003c/p\u003e\n\n\u003cp\u003e\n--\nBacek\n\u003c/p\u003e","files":null}]}