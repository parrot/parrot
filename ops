{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1288067008,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4OTU=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502895"},"message":"\u003cp\u003e\nWe probably want to actually store the string 'rtemsx.x' where x.x is the version of RTEMS in whichever config key stores the name of the operating system.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1288333257,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4OTY=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502896"},"message":"\u003cp\u003e\nAdding link for reference to \u003ca   href=\"http://rtems.com/\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ertems.com\u003c/a\u003e.\n\u003c/p\u003e\n\n\u003cp\u003e\nBTW, their web site has a great discussion of their use of \u003ca   href=\"http://www.rtems.com/wiki/index.php/RTEMS_Coverage_Analysis\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003eCoverage Analysis\u003c/a\u003e in testing.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1288383082,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4OTc=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502897"},"message":"\u003cpre class=\"wiki\"\u003e\u0026gt; Comment(by dukeleto):\n\u0026gt;\n\u0026gt;  We probably want to actually store the string 'rtemsx.x' where x.x is the\n\u0026gt;  version of RTEMS in whichever config key stores the name of the operating\n\u0026gt;  system.\n\"osname\" is currently set by config/auto/arch.pm, based on perl5's\n$Config{archname}, which, in turn, is based on the output of `uname -a`,\nalong with a lot of other heuristics accumulated over the years.\nPresumably, there is some existing file one could test for or existing\ncommand one could run to determine if this is RTEMS or not.\nParrot doesn't generally use perl5's Config{osvers}, though parrotbug uses\nit in bug reports.  Oddly, init/hints/freebsd.pm recomputes $osversion,\nbut never uses it.  I think it would make sense to add an \"osvers\" key to\nthe existing \"cpuarch\" and \"osname\" keys in the config/auto/arch.pm step.\n--\n    Andy Dougherty      doughera@lafayette.edu\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1288422450,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4OTg=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502898"},"message":"\u003cp\u003e\nReplying to \u003ca class=\"new ticket\" href=\"http://trac.parrot.org/parrot/ticket/1840\" title=\"feature: Config step to detect RTEMS (new)\"\u003edukeleto\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n We need a config step that checks for \u003cspan class=\"underline\"\u003ertems\u003c/span\u003e and sets the parrot_config key of 'rtems' to true or false, depending on whether the symbol is defined.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\ndukeleto:\n\u003c/p\u003e\n\n\u003cp\u003e\nPlease do a checkout of the \u003ci\u003egcc_defines\u003c/i\u003e branch from Subversion and configure on the machine where you have RTEMS.  Then call \u003ctt\u003egrep -i gccdefines__rtems__ lib/Parrot/Config/Generated.pm config_lib.pir\u003c/tt\u003e.  Then tell me if you can take it from there.\n\u003c/p\u003e\n\n\u003cp\u003e\n(Don't merge.  There are other issues I'll deal with.)\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1288566611,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI4OTk=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502899"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:5\" title=\"Comment 5 for Ticket #1840\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Please do a checkout of the \u003ci\u003egcc_defines\u003c/i\u003e branch from Subversion and configure on the machine where you have RTEMS.  Then call \u003ctt\u003egrep -i gccdefines__rtems__ lib/Parrot/Config/Generated.pm config_lib.pir\u003c/tt\u003e.  Then tell me if you can take it from there.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI'm unsure if this will be useful.  For comparison, perl 5's Configure also attempts to figure out the symbols #defined for the the current C preprocessor.  It's over 200 lines of shell code, running from line 21,467 to 21,687 in Configure.  The output is stored in $Config{cppsymbols}.  As far as I know, the output is no longer ever used.\n\u003c/p\u003e\n\n\u003cp\u003e\nWithin C code, if you want to check \u003ctt\u003e#ifdef __rtems__\u003c/tt\u003e, you simply do so.  You don't need any Configure probe.  Outside of C code, I agree you need to run some kind of probe, but this looks overly complicated to me.  As I have mentioned previously in this ticket, I think the osname probe is the more natural place to do this.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1288570013,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDA=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502900"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:6\" title=\"Comment 6 for Ticket #1840\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Outside of C code, I agree you need to run some kind of probe ....\n [T]he osname probe is the more natural place to do this.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nAndy,\n\u003c/p\u003e\n\n\u003cp\u003e\nThanks for taking another look at this.\n\u003c/p\u003e\n\n\u003cp\u003e\nHere I'm bumping up against the limits of my understanding of the problem we're trying to address in this ticket.  Are we:\n\u003c/p\u003e\n\n\u003cp\u003e\n* checking to see whether the OS on which we are trying to configure and build Parrot \u003cstrong\u003eis\u003c/strong\u003e RTEMS?  If so, then I would ask dukeleto:  \u003ci\u003eWhat do you get on your RTEMS box for \u003ctt\u003eosname\u003c/tt\u003e in \u003c/i\u003elib/Parrot/Config/Generated.pm\u003ci\u003e.\n\u003c/i\u003e\u003c/p\u003e\n\u003cp\u003e\nor:\n\u003c/p\u003e\n\n\u003cp\u003e\n* checking to determine whether the box on which we are working (and which is presumably capable of compiling Parrot) is capable of (cross-)compiling RTEMS?\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1288606210,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDE=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502901"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:7\" title=\"Comment 7 for Ticket #1840\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Replying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:6\" title=\"Comment 6 for Ticket #1840\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Here I'm bumping up against the limits of my understanding of the problem we're trying to address in this ticket.  Are we:\n * checking to see whether the OS on which we are trying to configure and build\n Parrot \u003cstrong\u003eis\u003c/strong\u003e RTEMS?\n or:\n * checking to determine whether the box on which we are working (and which is presumably capable of compiling Parrot) is capable of (cross-)compiling RTEMS?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI think it's more the latter.  Parrot's configure system doesn't include separate concepts of \"host\" and \"target\" systems, so something is going to have to force it somewhere.  Somehow, in the command-line invocation of Configure.pl, the user must indicate that cross-compiling is desired.\n\u003c/p\u003e\n\n\u003cp\u003e\nThere are many ways one might imagine that working, and, hence, many different ways one might imagine the relevant Configure steps working.  Hence confusion results.\n\u003c/p\u003e\n\n\u003cp\u003e\nI think that dukeleto might have the following scenario in mind:\n\u003c/p\u003e\n\n\u003cp\u003e\nIf the user wishes to cross-compile for RTEMS, then he or she specifies the cross-compiler for the -cc= (and -ld=, -link=, etc.) command-line options to Configure.pl.\nThen, in auto:cpuarch, Configure.pl could build the following simple program\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e#include \u0026lt;stdlib.h\u0026gt;\nint main(int argc, char *_argv)\n{\n#ifdef **rtems**\n    exit EXIT_SUCCESS;\n#else\n    exit EXIT_FAILURE;\n#endif\n}\n\u003c/pre\u003e\u003cp\u003e\ncompile it with the supplied compiler, run it, and check the return status.\nI don't know RTEMS at all, so I don't know how one actually runs such a cross-compiled command.  For some cross-compilation set-ups, actually running the command is difficult (it requires transferring the compiled program to another device.)  In such cases, it might be better to try just compiling something like this instead:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e#include \u0026lt;stdlib.h\u0026gt;\nint main(int argc, char *_argv)\n{\n#ifdef **rtems**\n    exit EXIT_SUCCESS;\n#else\n    error_undefined_variable;\n#endif\n}\n\u003c/pre\u003e\u003cp\u003e\nIf this compiles at all, then we are on rtems.\nThis would solve the immediate problem, but I suspect it will be insufficient to solve the whole cross-compiling program.  Other parts of the build system will also likely need to become cross-compiling aware.\n\u003c/p\u003e\n\n\u003cp\u003e\nIdeally, it would be nice to determine that osname=rtems (and hence that we are cross-compiling) much earlier in the process (before init::hints) so that one could write and use a config/init/hints/rtems.pm hint file, instead of sprinkling \u003ctt\u003e if($PConfig{$rtems}) \u003c/tt\u003e statements throughout all the other config files.  If Configure.pl allowed the user to specify arbitrary config keys from the command line, one might imagine accomplishing this by writing something like\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003eConfigure.pl --with-osname=rtems\n\u003c/pre\u003e\u003cp\u003e\nbut Configure.pl does not currently allow that.  Alternatively, the autoconf cross-compilation command-line syntax might offer a good model for what users would actually like to do, but extending Configure.pl in that direction is a different job for a different ticket.\n\u003c/p\u003e\n\n\u003cp\u003e\nI hope this helps a little.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1288613198,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDI=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502902"},"message":"\u003cp\u003e\nThe code snippets above are exactly what is needed by the C probe. Cross-compiling concerns will be taken care of in other tickets.\n\u003c/p\u003e\n\n\u003cp\u003e\nI agree with Andy that we will need a \u003ctt\u003e config/init/hints/rtems.pm \u003c/tt\u003e in the future.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1288685471,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDM=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502903"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:4\" title=\"Comment 4 for Ticket #1840\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e\u0026gt;\n\u0026gt; I think it would make sense to add an \"osvers\" key to\n\u0026gt; the existing \"cpuarch\" and \"osname\" keys in the\n\u0026gt; config/auto/arch.pm step.\n\u0026gt;\n\u003c/pre\u003e\u003cp\u003e\nI've created TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/1841\" title=\"RFC: Add 'osvers' key-value pair to Configure.pl (closed: fixed)\"\u003e#1841\u003c/a\u003e to discuss this issue by itself.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1288692827,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDQ=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502904"},"message":"\u003cp\u003e\nTry \u003ctt\u003esvn up\u003c/tt\u003e again after r49770.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1294053175,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5MDU=","github-url":"https://github.com/parrot/parrot/issues/371#issuecomment-3502905"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1840#comment:12\" title=\"Comment 12 for Ticket #1840\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cp\u003e\ndukeleto:\n\u003c/p\u003e\n\n\u003cp\u003e\nSince there is nothing more I can do about this issue right now, I am going to reassign this ticket to you.  You can take it up whenever you get back to hacking on RTEMS.\n\u003c/p\u003e\n\n\u003cp\u003e\nThanks.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null}]}