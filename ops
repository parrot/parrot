{"version":1,"ops":[{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1417905586,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY1OTE3MDk5","github-url":"https://github.com/parrot/parrot/issues/1155#issuecomment-65917099"},"message":"parrot provides UnManagedStruct for such callback data, which is not handled by the garbage collector, and ManagedStruct, which is. It's up to the HLL, nqp to use the correct pmc, i.e. UnManagedStruct.\nDid I miss something?","files":null},{"type":3,"author":{"id":"03baa7b0c54ed5a8b80e408c0638b7a2255b73ba"},"timestamp":1417906535,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY1OTE3NzI5","github-url":"https://github.com/parrot/parrot/issues/1155#issuecomment-65917729"},"message":"@rurban Possibly not; I was just making sure that the bug I fixed in MoarVM is not also present in Parrot.  If you don't think it is, feel free to close this!","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1417970722,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY1OTQzNDk0","github-url":"https://github.com/parrot/parrot/issues/1155#issuecomment-65943494"},"message":"I'm not sure. I'll write a test for it. \nAs I read in the meantime, the preferred object is now PtrBuf, which also doesn't touch the external buffers.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1418076445,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY2MTk2ODIz","github-url":"https://github.com/parrot/parrot/issues/1155#issuecomment-66196823"},"message":"Confirmed to work ok. Tested with test 61 in `t/nci.t`:\n\n```\n.sub test :main\n    .local string library_name\n    library_name = 'libnci_test'\n    .local pmc libnci_test\n    libnci_test = loadlib library_name\n\n    .local pmc nci_cstring_cstring\n    nci_cstring_cstring = dlfunc libnci_test, \"nci_cstring_cstring\", \"pp\"\n    .local string s, r\n    .local int l\n    .local pmc arg, result\n    s = \"Hello, world!\"\n    l = bytelength s\n    arg = new [\"ByteBuffer\"]\n    arg = s\n    arg[l] = 0\n    result = nci_cstring_cstring(arg)\nsweep 1\n    r = result.'as_string'(\"ascii\")\n    say r\n.end\n```\n\nConfigure with --ccflags=-DMEMORY_DEBUG\ncall it with `./parrot_old -D301 -t --gc-debug t/pmc/nci_61.pir`\nfind the address of the string buffer in the output:\n\n```\n0014 set P1, S1                         P1=ByteBuffer=PMC(7f917c015c70) S1=\"Hello, world!\"\nAllocated 13 at 0x7f917b5097c0\n0017 set P1[I0], 0                      P1=ByteBuffer=PMC(7f917c015c70) I0=[13]\nFreed 0x7f917b5097c0 (realloc -- 64 bytes)\nAllocated 64 at 0x7f917b5098e0\n001b set_args PC1 (1), P1               PC1=FixedIntegerArray(1)=PMC(7f917c015478) P1=ByteBuffer=PMC(7f917c015c70)\n001e invokecc P3                        P3=NCI=PMC(7f917c015860)\nAllocated 8 at 0x7f917b5097c0\nAllocated 8 at 0x7f917b504920\n0020 get_results PC1 (1), P2            PC1=FixedIntegerArray(1)=PMC(7f917c015478) P2=PMCNULL\n0023 sweep 1\n```\n\n`sweep 1` was added manually to observe if the GC frees the buffer and its containing ByteBuffer PMC.\nIt does not, as`0x7f917b5098e0` is not freed, the PMC at 7f917c015c70 neither.","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1418076445,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjA0NDk3MTk2"},"status":2}]}