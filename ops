{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1240670734,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzODY=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503386"},"message":"Trac commenter: doughera\n\n\u003cp\u003e\nAnother instance of this problem has been reported as a result of me packaging\nparrot version 1.0.0 for NetBSD's pkgsrc system.  The problem report can be seen\nat \u003ca   href=\"http://gnats.netbsd.org/41275/\"\u003e\u003cspan class=\"icon\"\u003eÂ \u003c/span\u003ehttp://gnats.netbsd.org/41275/\u003c/a\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nBriefly summarized: libparrot_ldflags in the config points to the build directory.\nAdditionally, on Solaris, RPATH in the installed binaries also point into the build\ndirectory, while it should point to the installed directory for the libraries.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1241032291,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzODc=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503387"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:1\" title=\"Comment 1 for Ticket #540\"\u003eheidnes\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Briefly summarized: libparrot_ldflags in the config points to the build directory.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI'm not sure if that's really a problem or not, since that variable isn't documented anywhere.  However, it looks to me as if it's intended only to be used during the build process.  The relevant variable for installed versions (also not documented anywhere) appears to be inst_libparrot_ldflags.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Additionally, on Solaris, RPATH in the installed binaries also point into the build\n directory, while it should point to the installed directory for the libraries.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nActually, what the report says is:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n In addition under Solaris, the variable \"rpath_blib\" references the build directory as well, similar to libparrot_ldflags\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThis is definitely not a problem.  The variable rpath_blib is actually documented to be relevant only for the build directory:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e    # Set -rpath (or equivalent) for executables to find the\n    # shared libparrot in the build directory.\n\u003c/pre\u003e\u003cp\u003e\nSo it retains a record of the build directory, but that's not important.  It is not intended to be used in any way.\n\u003c/p\u003e\n\n\u003cp\u003e\nA related problem is that so many of these variables are undocumented, and what little documentation there is sprinkled throughout parrot's config/ directory doesn't get collected or installed anywhere.  So someone working with an installed parrot has no easy way to determine whether such references are important or harmless.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1241033552,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzODg=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503388"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:2\" title=\"Comment 2 for Ticket #540\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Replying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:1\" title=\"Comment 1 for Ticket #540\"\u003eheidnes\u003c/a\u003e:\n\u003c/p\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Briefly summarized: libparrot_ldflags in the config points to the build directory.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n I'm not sure if that's really a problem or not, since that variable isn't documented anywhere.  However, it looks to me as if it's intended only to be used during the build process.  The relevant variable for installed versions (also not documented anywhere) appears to be inst_libparrot_ldflags.\n\u003c/p\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nAHA!\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you. Somehow I missed this when trying to get partcl linking against an installed parrot, and was getting the build directory.\n\u003c/p\u003e\n\n\u003cp\u003e\nWhile surprising (I would think we would not want inst_ variants, but instead would want parrot_config to just use the installed versions in the regularly named variables), now I can almost get partcl building again. Thanks.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1243372954,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzODk=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503389"},"message":"\u003cp\u003e\nFixed for most Unix-like sytems with r39045 (see TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/698\" title=\"patch: [PATCH] Mac OS X build fix (closed: fixed)\"\u003e#698\u003c/a\u003e).  Behavior on Win32 shouldn't have changed.  A Win32 expert will need to consider carefully what the appropriate settings should be.  I'll leave it open for now until that is settled.  (AIX will also likely need separate treatment,\nbut that should probably be a new ticket.)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1295085617,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTA=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503390"},"message":"\u003cp\u003e\nIf we have no further complaints about this problem, I'd like to close it in 7 days.  Taking ticket solely for that purpose.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1295303517,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTE=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503391"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:5\" title=\"Comment 5 for Ticket #540\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n If we have no further complaints about this problem, I'd like to close it in 7 days.  Taking ticket solely for that purpose.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI never heard from a Win32 expert, so I don't know if this problem is still present on Win32.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1295682467,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTI=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503392"},"message":"\u003cp\u003e\n7 days ... and no objections heard.  Closing ticket.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1296194155,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTM=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503393"},"message":"\u003cp\u003e\nThis has partially resurfaced:  extra_nci_thunks.so now links against -lparrot.  I don't know why.  However, it isn't installed, so perhaps it doesn't matter.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296206079,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTQ=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503394"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:8\" title=\"Comment 8 for Ticket #540\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n This has partially resurfaced:  extra_nci_thunks.so now links against -lparrot.  I don't know why.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nIs there any way other than examining the output of \u003ctt\u003emake\u003c/tt\u003e to determine this?  I.e., is there any command I could run against a file to see what it links against?\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n However, it isn't installed, so perhaps it doesn't matter.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nWhy would we create a \u003ctt\u003e.so\u003c/tt\u003e file if it doesn't get installed?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296206912,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTU=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503395"},"message":"\u003cp\u003e\nIs \u003ci\u003eruntime/parrot/dynext/libglutcb.so\u003c/i\u003e also affected in this way?\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e713-g++ -shared -O2 -L/usr/local/lib -fstack-protector -fPIC\n  -fstack-protector -L/usr/local/lib  \\\n714-    -o runtime/parrot/dynext/libglutcb.so src/glut_callbacks.o\n  src/glut_nci_thunks.o \\\n715:    -L\"/home/jimk/gitwork/parrot/blib/lib\" -lparrot -lpthread\n  -lm -L/usr/lib  -licuuc -licudata -lpthread -lm -lnsl -ldl\n  -lm -lcrypt -lutil -lpthread -lrt -lgmp -lreadline  -lffi   -lglut -lGLU -lGL\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1296263990,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTY=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503396"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:10\" title=\"Comment 10 for Ticket #540\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Replying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:8\" title=\"Comment 8 for Ticket #540\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n This has partially resurfaced:  extra_nci_thunks.so now links against -lparrot.  I don't know why.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n Is there any way other than examining the output of \u003ctt\u003emake\u003c/tt\u003e to determine this?  I.e., is there any command I could run against a file to see what it links against?\n\u003c/p\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nOn linux, at least,\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ctt\u003e ldd runtime/parrot/dynext/extra_nci_thunks.so \u003c/tt\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nwill list all libraries it links against.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n However, it isn't installed, so perhaps it doesn't matter.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n Why would we create a \u003ctt\u003e.so\u003c/tt\u003e file if it doesn't get installed?\n\u003c/p\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI have no idea.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296295451,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTc=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503397"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:11\" title=\"Comment 11 for Ticket #540\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Is \u003ci\u003eruntime/parrot/dynext/libglutcb.so\u003c/i\u003e also affected in this way?\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e$ ldd runtime/parrot/dynext/libglutcb.so |grep 'not found'\n        libparrot.so.3.0.0 =\u0026gt; not found\n$ ldd runtime/parrot/dynext/extra_nci_thunks.so |grep 'not found'\n        libparrot.so.3.0.0 =\u0026gt; not found\n\u003c/pre\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\nApparently so.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296299114,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTg=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503398"},"message":"Replying to #540 jkeenan:\n\nIs \u003ci\u003eruntime/parrot/dynext/libglutcb.so\u003c/i\u003e also affected in this way?\n\n```\n $ ldd runtime/parrot/dynext/libglutcb.so |grep 'not found'\n         libparrot.so.3.0.0 =\u0026gt; not found\n $ ldd runtime/parrot/dynext/extra_nci_thunks.so |grep 'not found'\n         libparrot.so.3.0.0 =\u0026gt; not found\n```\n\nApparently so.\n\nIf I apply this patch,\n\n```\ndiff --git a/config/gen/makefiles/root.in b/config/gen/makefiles/root.in\nindex 4be06ad..8a9d3ce 100644\n--- a/config/gen/makefiles/root.in\n+++ b/config/gen/makefiles/root.in\n@@ -2943,7 +2943,7 @@ src/glut_nci_thunks$(O) : $(PARROT_H_HEADERS) \\\n $(LIBGLUTCB_SO): $(LIBPARROT) src/glut_callbacks$(O) src/glut_nci_thunks$(O)\n        $(LD) $(LD_LOAD_FLAGS) $(LDFLAGS) \\\n     @ld_out@$@ src/glut_callbacks$(O) src/glut_nci_thunks$(O) \\\n-    $(ALL_PARROT_LIBS) @opengl_lib@\n+    @opengl_lib@\n src/extra_nci_thunks.c : src/nci/extra_thunks.nci $(NCI_THUNK_GEN)\n        $(NCI_THUNK_GEN) --dynext --no-warn-dups \\\n@@ -2959,8 +2959,7 @@ src/extra_nci_thunks$(O) : $(PARROT_H_HEADERS) src/extra_n\n $(EXTRANCITHUNKS_SO) : $(LIBPARROT) src/extra_nci_thunks$(O)\n        $(LD) $(LD_LOAD_FLAGS) $(LDFLAGS) \\\n-    @ld_out@$@ src/extra_nci_thunks$(O) \\\n-    $(ALL_PARROT_LIBS)\n+    @ld_out@$@ src/extra_nci_thunks$(O)\n # emacs etags\n # this needs exuberant-ctags\n```\n\n... I clear up the 'not found' entry and all tests pass, but in the case of extra_nci_thunks a lot of other linkages get wiped out.\n\n```\n$ ldd runtime/parrot/dynext/libglutcb.so\n        linux-gate.so.1 =\u0026gt;  (0xb7ff2000)\n        libglut.so.3 =\u0026gt; /usr/lib/libglut.so.3 (0xb7f97000)\n        libGLU.so.1 =\u0026gt; /usr/lib/libGLU.so.1 (0xb7f15000)\n        libGL.so.1 =\u0026gt; /usr/lib/libGL.so.1 (0xb7eb2000)\n        libc.so.6 =\u0026gt; /lib/libc.so.6 (0xb7d73000)\n        libm.so.6 =\u0026gt; /lib/libm.so.6 (0xb7d4d000)\n        libXext.so.6 =\u0026gt; /usr/lib/libXext.so.6 (0xb7d3f000)\n        libX11.so.6 =\u0026gt; /usr/lib/libX11.so.6 (0xb7c50000)\n        libstdc++.so.6 =\u0026gt; /usr/lib/libstdc++.so.6 (0xb7b62000)\n        libgcc_s.so.1 =\u0026gt; /lib/libgcc_s.so.1 (0xb7b55000)\n        libXxf86vm.so.1 =\u0026gt; /usr/lib/libXxf86vm.so.1 (0xb7b4f000)\n        libXdamage.so.1 =\u0026gt; /usr/lib/libXdamage.so.1 (0xb7b4c000)\n        libXfixes.so.3 =\u0026gt; /usr/lib/libXfixes.so.3 (0xb7b47000)\n        libpthread.so.0 =\u0026gt; /lib/libpthread.so.0 (0xb7b2f000)\n        libdl.so.2 =\u0026gt; /lib/libdl.so.2 (0xb7b2b000)\n        libdrm.so.2 =\u0026gt; /usr/lib/libdrm.so.2 (0xb7b23000)\n        /lib/ld-linux.so.2 (0x80000000)\n        libXau.so.6 =\u0026gt; /usr/lib/libXau.so.6 (0xb7b1f000)\n        libxcb-xlib.so.0 =\u0026gt; /usr/lib/libxcb-xlib.so.0 (0xb7b1d000)\n        libxcb.so.1 =\u0026gt; /usr/lib/libxcb.so.1 (0xb7b05000)\n        libXdmcp.so.6 =\u0026gt; /usr/lib/libXdmcp.so.6 (0xb7b00000)\n$ ldd runtime/parrot/dynext/extra_nci_thunks.so\n        linux-gate.so.1 =\u0026gt;  (0xb7fc3000)\n        libc.so.6 =\u0026gt; /lib/libc.so.6 (0xb7e5a000)\n        /lib/ld-linux.so.2 (0x80000000)\n```\n\nPerhaps `extra_nci_thunks.so` doesn't need all those linkages.","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296336496,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzOTk=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503399"},"message":"\u003cp\u003e\nplobsing,\n\u003c/p\u003e\n\n\u003cp\u003e\nCould you comment on the issues raised in comments 10+ in this ticket?  Can we eliminate the linkage of extra_nci_thunks against libparrot?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1296385835,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDA=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503400"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:15\" title=\"Comment 15 for Ticket #540\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n plobsing,\n Could you comment on the issues raised in comments 10+ in this ticket?  Can we eliminate the linkage of extra_nci_thunks against libparrot?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nextra_nci_thunks.c includes function calls to Parrot_pcc_fill_params_from_c_args(), which is part of libparrot. These calls are essential to the operation of this library, therefore it must be linked against libparrot to operate correctly.\n\u003c/p\u003e\n\n\u003cp\u003e\nAs to the purpose of this library, it is the repetition of extra_thunks.nci as a dynlib, used to demonstrate the viability of using dynlibs to provide additional nci thunks. One can configure --without-extra-nci-thunks, load this library, and run tests that depend on these thunks (eg: t/pmc/nci.t) which would normally fail with this configuration. I intended the configure-without-extra/load-as-separate-library as the default approach, however, this approach never caught on (I've heard complaints that \"you can't use anything but the built-in signatures\" months after this was no longer the case). I think it still has value, although I'm a bit burned out on the whole NCI thing.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Thank you very much.\n kid51\n\u003c/p\u003e\n\u003c/blockquote\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1296392745,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDE=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503401"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:16\" title=\"Comment 16 for Ticket #540\"\u003eplobsing\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n extra_nci_thunks.c includes function calls to Parrot_pcc_fill_params_from_c_args(), which is part of libparrot. These calls are essential to the operation of this library, therefore it must be linked against libparrot to operate correctly.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI don't understand this.  The same could be said about other items in dynext/, but they aren't linked directly against libparrot.  I don't see why extra_nci_thunks.so needs special treatment.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"c750eb0960e029df836e56dc77bb8c148fcf5723"},"timestamp":1296472175,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDI=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503402"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:17\" title=\"Comment 17 for Ticket #540\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Replying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:16\" title=\"Comment 16 for Ticket #540\"\u003eplobsing\u003c/a\u003e:\n\u003c/p\u003e\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n extra_nci_thunks.c includes function calls to Parrot_pcc_fill_params_from_c_args(), which is part of libparrot. These calls are essential to the operation of this library, therefore it must be linked against libparrot to operate correctly.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n I don't understand this.  The same could be said about other items in dynext/, but they aren't linked directly against libparrot.  I don't see why extra_nci_thunks.so needs special treatment.\n\u003c/p\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nPerhaps it is based on a misunderstanding of dynamic linking, but my preference is a direct and explicit link for all parrot-expecting dynext libraries. The simple reason is that an implicit \"whatever loads me will have these symbols defined\" approach breaks down occasionally. For example, blizkost had (and subsequently worked around at the cost of developer time) issues with XS libraries because these libraries made exactly that assumption, and it proved not to be true.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1296528878,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDM=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503403"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:18\" title=\"Comment 18 for Ticket #540\"\u003eplobsing\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Perhaps it is based on a misunderstanding of dynamic linking, but my preference is a direct and explicit link for all parrot-expecting dynext libraries. The simple reason is that an implicit \"whatever loads me will have these symbols defined\" approach breaks down occasionally.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI understand that as a general idea, but in this specific case, I find it difficult to imagine a useful program trying to load extra_nci_thunks.so that hasn't already loaded libparrot.\n\u003c/p\u003e\n\n\u003cp\u003e\nMoreover, I still don't see any reason for treating some of the dynext/*.so files differently from the others.  Whatever is done for one should probably be done for all.\n\u003c/p\u003e\n\n\u003cp\u003e\nIf the dynext/*.so files *are* to be linked against -lparrot, then the appropriate rpath should be set so that the correct version of -lparrot is found.  As a practical matter, this likely means that two copies of each have to be built:  Those built to be used in the build directory need to be linked with rpath_blib, while those that are to be installed need to be linked with rpath_lib.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1299398532,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDQ=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503404"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:19\" title=\"Comment 19 for Ticket #540\"\u003edoughera\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n in this specific case, I find it difficult to imagine a useful program trying to load extra_nci_thunks.so that hasn't already loaded libparrot.\n Moreover, I still don't see any reason for treating some of the dynext/*.so files differently from the others.  Whatever is done for one should probably be done for all.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nplobsing,\n\u003c/p\u003e\n\n\u003cp\u003e\nCan you comment on this?\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n If the dynext/*.so files *are* to be linked against -lparrot, then the appropriate rpath should be set so that the correct version of -lparrot is found.  As a practical matter, this likely means that two copies of each have to be built:  Those built to be used in the build directory need to be linked with rpath_blib, while those that are to be installed need to be linked with rpath_lib.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nIt seems to me that either we don't link \u003ci\u003edynext/*.so\u003c/i\u003e files against \u003ctt\u003e-lparrot\u003c/tt\u003e, or else we undertake the work described by doughera with respect to \u003ctt\u003erpath_blib\u003c/tt\u003e or \u003ctt\u003erpath_lib\u003c/tt\u003e.  The former seems simpler.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1305511114,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDU=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503405"},"message":"\u003cp\u003e\nI no longer find \u003ci\u003eruntime/parrot/dynext/extra_nci_thunks.so\u003c/i\u003e.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e[parrot] 522 $ find . -type f -name '_extra-nci-thunks_'\n[parrot] 523 $ find . -type f -name '_extra_nci_thunks_'\n\u003c/pre\u003e\u003cp\u003e\nDoes that render the issues raised in this ticket moot?  If so, can we close this ticket?\n\u003c/p\u003e\n\n\u003cp\u003e\nAnd what does that mean for other places where 'extra(_|-)nci(_|-) appears in our code?\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$ ack -il --match 'extra(_|-)nci(_|-)thunks' *\nMANIFEST.SKIP\nconfig/auto/warnings.pm\nconfig/init/defaults.pm\nlib/Parrot/Configure/Options/Conf/Shared.pm\nlib/Parrot/Configure/Options/Conf.pm\nsrc/global_setup.c\nt/steps/init/defaults-01.t\n\u003c/pre\u003e\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306041956,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDY=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503406"},"message":"606 byte attachment from jkeenan\nat http://trac.parrot.org/parrot/raw-attachment/ticket/540/glut_nci_thunks.diff\n\n```\ndiff --git a/config/gen/makefiles/root.in b/config/gen/makefiles/root.in\nindex fbc3bad..ebb94d3 100644\n--- a/config/gen/makefiles/root.in\n+++ b/config/gen/makefiles/root.in\n@@ -2956,7 +2956,7 @@ src/glut_nci_thunks$(O) : $(PARROT_H_HEADERS) \\\n $(LIBGLUTCB_SO): $(LIBPARROT) src/glut_callbacks$(O) src/glut_nci_thunks$(O)\n        $(LD) $(LD_LOAD_FLAGS) $(LDFLAGS) \\\n     @ld_out@$@ src/glut_callbacks$(O) src/glut_nci_thunks$(O) \\\n-    $(ALL_PARROT_LIBS) @opengl_lib@\n+    @opengl_lib@\n\n src/extra_nci_thunks.c : src/nci/extra_thunks.nci $(NCI_THUNK_GEN)\n        $(NCI_THUNK_GEN) --dynext --no-warn-dups \\\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306059956,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDc=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503407"},"message":"\u003cp\u003e\nNo need for ALL_PARROT_LIBS here\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306060154,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDg=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503408"},"message":"\u003cp\u003e\nThe patch attached, \u003ci\u003eglut_nci_thunks_diff\u003c/i\u003e, eliminates the last case where a linkage was not found.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$ ldd runtime/parrot/dynext/*.so | grep 'not found'\n$\n\u003c/pre\u003e\u003cp\u003e\nI have tested in thru \u003ctt\u003emake test\u003c/tt\u003e and \u003ctt\u003emake fulltest\u003c/tt\u003e on linux/i386.  I propose that we apply the patch and close this ticket.\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1306066753,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MDk=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503409"},"message":"\u003cp\u003e\nIf winxed's opengl demo works with the attached patch, let's apply it and close this ticket.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1306130511,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MTA=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503410"},"message":"\u003cp\u003e\nI've tested in amd64 with the patch applied and all winxed examples using opengl works. I'm using libffi in this machine, don't know if that is relevant for the issue.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306130738,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MTE=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503411"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/540#comment:24\" title=\"Comment 24 for Ticket #540\"\u003eNotFound\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n I've tested in amd64 with the patch applied and all winxed examples using opengl works. I'm using libffi in this machine, don't know if that is relevant for the issue.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThanks for that test.  Thanks to all who contributed.  Closing ticket.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306135921,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM0MTI=","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-3503412"},"message":"\u003cp\u003e\nSadly, I had to reopen this ticket due to a \u003ca   href=\"http://tt.taptinder.org/file/cmdout/11376.txt\"\u003e\u003cspan class=\"icon\"\u003eÂ \u003c/span\u003ebuild error on Cygwin reported by taptinder\u003c/a\u003e -- a platform to which I don't have access.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1413208855,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4ODk1OTE0","github-url":"https://github.com/parrot/parrot/issues/507#issuecomment-58895914"},"message":"To re-iterate the problem: Some Unix/BSD system don't need to link shared libs explicitly to other shared libs which are already loaded. But not on windows/cygwin, and on darwin you need to add `-undefined dynamic_lookup`, which makes `gdb` debugging impossible. See #1096.\n\nGenerally libraries should link to their deps, even if they are already loaded. The order is also relevant, even if most Unix/BSD linkers don't care about the order. But then we'd need to relink with proper rpath settings, and this also makes relocation impossible, and testing in a DESTDIR requires `(DY)LD_LIBRARY_PATH` being set.\n\nSo if we have a rpath system don't add -lparrot. If we have a non-rpath system and use --debugging or require it for windows add -lparrot.\n\nAt least we'd need a test to check compiled-in paths in the installed versions, exe and dynamically loaded and linked libs. `otool -L` / `ldd` on systems which support these.","files":null}]}