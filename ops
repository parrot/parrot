{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1237736154,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMjg=","github-url":"https://github.com/parrot/parrot/issues/480#issuecomment-3503328"},"message":"965 byte attachment from bsdz\nat http://trac.parrot.org/parrot/raw-attachment/ticket/486/test.pir\n\n```.include 'datatypes.pasm'\n\n.sub main :main\n\n```\n# a workaround is to set this to min(2,size)\n.local int size\nsize = 1\n\n.local pmc a_rma, a_umc, a_n\na_rma = new 'ResizablePMCArray'\npush a_rma, .DATATYPE_DOUBLE\npush a_rma, 0\npush a_rma, 0\npush a_rma, .DATATYPE_DOUBLE\npush a_rma, 0\npush a_rma, 0\na_umc = new 'UnManagedStruct', a_rma\n\n.local pmc a_rma_outer\na_rma_outer = new 'ResizablePMCArray'\npush a_rma_outer, .DATATYPE_STRUCT\n$P0 = a_rma_outer[-1]\nsetprop $P0, \"_struct\", a_umc\npush a_rma_outer, size\npush a_rma_outer, 0\n\na_n = new 'ManagedStruct', a_rma_outer\n\na_n[0;0;0] = 10.5\na_n[0;0;1] = 20.2\n\n# if size = 2,3,4 then okay\n\n#a_n[0;1;0] = 10.5\n#a_n[0;1;1] = 20.2\n\n#a_n[0;2;0] = 10.5\n#a_n[0;2;1] = 20.2\n\n#a_n[0;3;0] = 10.5\n#a_n[0;3;1] = 20.2\n```\n\n.end\n\n# Local Variables:\n\n# mode: pir\n\n# fill-column: 100\n\n# End:\n\n# vim: expandtab shiftwidth=4 ft=pir:\n\n```\n```","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1296040274,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMjk=","github-url":"https://github.com/parrot/parrot/issues/480#issuecomment-3503329"},"message":"\u003cp\u003e\nFor the record, this is what I tried tonight:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e./parrot /home/user/tt486_test.pir\nNon existent array element in struct: count = 1 max=1\ncurrent instr.: 'main' pc 56 (/home/user/tt486_test.pir:30)\n\u003c/pre\u003e","files":null}]}