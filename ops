{"version":1,"ops":[{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1331921896,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NDUyNDQ=","github-url":"https://github.com/parrot/parrot/issues/735#issuecomment-4545244"},"message":"Yeah, Parrot passing all of the flags we expect to compile with down to all 3rd party/vendor code is probably not a feature.\n\n+1 to @moritz's suggestion of splitting CFLAGS into internal/vendor","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1331922220,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NDUzNTM=","github-url":"https://github.com/parrot/parrot/issues/735#issuecomment-4545353"},"message":"The reason why the build fails only on some platforms is probably related to the version of GNU make: according to the manual, make used to export variables by default, but no longer does so.\n\nIn particular, the recursive call to make which builds dyncall inherits its `CFLAGS` from Parrot only on older versions of make, whereas on newer ones, the value from the environment is used.","files":null},{"type":3,"author":{"id":"e6ebaecce565c58b3e91ddb32c09e93c5f646822"},"timestamp":1331926574,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NDY2MjQ=","github-url":"https://github.com/parrot/parrot/issues/735#issuecomment-4546624"},"message":"I'm glad to hear the general consensus be for \"hide our more restrictive CFLAGS from others\" rather than \"dumb down our CFLAGS\"","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416751172,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTE4NzY0","github-url":"https://github.com/parrot/parrot/issues/735#issuecomment-64118764"},"message":"How did we fix this?\nWe have a makefile expander which deals with those ccwarn or optimize overrides, which can easily be used by all the languages.","files":null}]}