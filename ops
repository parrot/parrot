{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1324341798,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTIzNDM=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3212343"},"message":"On 12/19/11 11:38 AM, Gerhard R. wrote:\n\n\u003e Configuration files passed to `perl Configure.pl --file=...` fail to accept arguments with whitespace in the `general` section -- in particular, the following code will fail:\n\u003e \n\u003e ```\n\u003e  =general\n\u003e \n\u003e  intval=long long\n\u003e ```\n\u003e \n\u003e It's probable that `lib/Parrot/Configure/Options/Conf/File.pm` is to blame, feel free to track this down further.\n\u003e \n\u003e For now, I'm using\n\u003e \n\u003e ```\n\u003e  =variables\n\u003e \n\u003e  LONGLONG=long long\n\u003e \n\u003e  =general\n\u003e \n\u003e  intval=$LONGLONG\n\u003e ```\n\u003e \n\u003e as a workaround.\n\nThanks for this report.  This is probably the first feedback we've had \non file-based configuration since I implemented the feature at \nparticle's request approximately four years ago!\n\nI will investigate the problem.  Thank you very much.\nJim Keenan","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1324434535,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMjg2ODE=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3228681"},"message":"Gerd,\n\nI don't think your code is a workaround -- I think it's the right way to do it.\n\nAfter all, if, on the command-line, I said:\n\n```\nperl Configure.pl --intval=long long\n```\n\nI would not expect the value assigned to 'intval' to work; the whitespace would defeat the processing of the option.  (At the very least, I would probably have to quote the string containing the wordspace.)\n\nSo if it doesn't work on the command-line, why would we expect it to work on its equivalent inside a configuration file?\n\nWhat I would like to do is to patch the documentation of file-based configuration in Configure.pl to recommend your approach.  That would mean the following:\n\n```\ndiff --git a/Configure.pl b/Configure.pl\nindex a6932fd..08d0d7a 100644\n--- a/Configure.pl\n+++ b/Configure.pl\n@@ -458,6 +458,13 @@ for the purpose of setting environmental variables used in options, like this:\n ... you would now place the assignments to C\u003cCC\u003e and C\u003cCX\u003e in the\n I\u003c=variables\u003e section of the configuration file (as above).\n\n+In addition, should you wish to use an option whose value contains whitespace\n+and would, if presented on the command-line, require quoting, you should\n+assign that string to a variable and then use the variable in the C\u003cgeneral\u003e\n+section below.\n+\n+    LONGLONG=long long\n+\n =back\n\n =item * general\n@@ -485,6 +492,8 @@ I\u003coption=value\u003e pairs or be options which will be assigned a true value.\n Note that when the value is a variable defined in the I\u003c=variables\u003e section,\n it must be preceded by a C\u003c$\u003e sign.\n\n+    intval=$LONGLONG\n+\n =item *\n\n You I\u003cmay\u003e list options here which are I\u003cconceptually\u003e limited to a single\n```\n\nHow does that sound?\n\nThank you very much.\nJim Keenan","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1324460985,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMzE3MTU=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3231715"},"message":"\u003e I don't think your code is a workaround -- I think it's the right way to do it.\n\u003e After all, if, on the command-line [...]\n\nWell, on the command line, I _can_ say\n\n```\nperl Configure.pl --intval=\"long long\"\n```\n\nand it's at least surprising that something which works in the `=variables` section (ie assigning values with spaces) will fail in the `=general` section.\n\nHowever, I'm actually no longer using configuration files, but switched to a hints file: I only needed to the ability to disable  `auto::arch`, for which I added a method `skip_step()` to `Parrot::Configure` so subsequent steps can be programatically disbaled from `init::hints`.\n\nAs to what I'm trying to do: I'm building native Win64 binaries via Cygwin, which is cross-compilation 'light' (it's not as complex as a full-blown cross-compilation as the build system can execute the host executables).\n\nLocally, `perl Configure.pl --hintsfile=cygcross64`  already works (or rather, would work if not for a segfault in `miniparrot`). What remains to be done is add some paths for the default configuration which uses the MinGW cross-compiler from the Cygwin package manager instead of a custom build of Clang I'm using; I'll publish the code once I've migrated my ssh key to the new machine...","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1325035336,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyODcyOTQ=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3287294"},"message":"On 12/21/11 4:49 AM, Gerhard R. wrote:\n\n\u003e \u003e I don't think your code is a workaround -- I think it's the right way to do it.\n\u003e \u003e After all, if, on the command-line [...]\n\u003e \n\u003e Well, on the command line, I _can_ say\n\u003e \n\u003e ```\n\u003e  perl Configure.pl --intval=\"long long\"\n\u003e ```\n\nI've done additional work in the 233/file_based_config branch which \nshould enable you to say:\n\n   intval=\"long long\"\n\n... in the '=general' section of a configuration file.  Can you try that \nout?\n\nThe branch is passing all tests in 'make test' and 'make fulltest'.\n\nThank you very much.\nJim Keenan","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1327133643,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTUxMjM=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3595123"},"message":"Testing a merge of master into this branch, since it is a bit stale.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1327135120,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTUxODk=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3595189"},"message":"+1 to merge the updated branch","files":null},{"type":3,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1327137571,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTUzMDY=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3595306"},"message":"Just got around to testing it (shame on me for taking so long):\n\nDefining variables in the `general` section works according to documentation, ie you need to quote values containing spaces.\n\nI still find it a bit unfortunate that the sytax in the `general` section is different from the one in the `variables` section (the latter does not require quotes), but it's probably not a good idea to spend any more time on such a rarely used feature, in particular since I have moved on to a different solution for various reasons.\n\nAnyway, my original problem is fixed and documentation is in place, so +1 for merging and closing the ticket from me.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1327138077,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTUzMjc=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3595327"},"message":"@jkeenan +1 to pulling the merge trigger, sooner rather than later","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1327149289,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1OTU5NTM=","github-url":"https://github.com/parrot/parrot/issues/233#issuecomment-3595953"},"message":"Merged in 3e6bc3e3b94076d0c0e49d0eedff8f788fbe851c.  Closing.","files":null},{"type":4,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1327149289,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50ODI1NDE3NA=="},"status":2}]}