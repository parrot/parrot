{"version":1,"ops":[{"type":1,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1258455491,"metadata":{"github-id":"MDU6SXNzdWUyODQ4ODk4","github-url":"https://github.com/parrot/parrot/issues/689","origin":"github"},"title":"Integer PMC missing math methods","message":"IMO, this code:\n\n```\n.sub main\n  $P1 = box 1.0\n  $N1 = $P1.'exp'()\n  say $N1\n  $P1 = box 1\n  $N1 = $P1.'exp'()\n  say $N1\n.end\n```\n\nshould print \n2.71828182845905\n2.71828182845905\n\n... but it dies with:\n\n```\n2.71828182845905\nMethod 'exp' not found for invocant of class 'Integer'\n```\n\nClearly, exp isn't defined on Integer, but IMO, all the math methods defined on Float should be defined on Integer. (otherwise, given an arbitrary numeric PMC, we have to jump through hoops.\n\n(Alternatively, we can remove these methods from the Float PMC and rely on the opcodes.)\n\nThis becomes even more confusing when you take in the morphing of the core types - a PMC that was a Float can morph into an Integer which is then unable to invoke the various methods.\n\nThis issue was originally opened as http://rt.perl.org/rt3/Ticket/Display.html?id=38896\n\nOriginally http://trac.parrot.org/parrot/ticket/1284","files":null}]}