{"version":1,"ops":[{"type":1,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1257427616,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NzE2","github-url":"https://github.com/parrot/parrot/issues/508","origin":"github"},"title":"'parrot foo' automatically finds and invokes foo.pbc","message":"I just recently committed examples/sdl/blue_rect.pl as an\nexample of exercising the SDL library using NQP. At the\nbeginning of the file the instructions read:\n\nTo run this file, execute the following command from\nthe Parrot directory:\n\n$ ./parrot compilers/nqp/nqp.pbc examples/sdl/blue_rect.pl\n\nTyping in that pathname is a bit of a pain -- what I'd really\nlike to be able to say is\n\n$ ./parrot nqp examples/sdl/blue_rect.pl\n\nand then since parrot can't immediately find anything called\n'nqp' to execute, it looks for nqp.pbc in a standard location\nor locations and invokes that. Similarly\n\n$ ./parrot perl6 blue_rect.pl\n$ ./parrot tgc --output=gen.pir PASTGrammar.tg\n$ ./parrot abc\n$ ./parrot tcl xyz.tcl\n$ ./parrot pynie hello.py\netc.\n\nBefore we get too far, let me point out what I'm _not_ asking for.\nSpecifically, I'm _not_ asking for parrot to automatically select \nan appropriate compiler based on a file's signature or magic, as \ndiscussed in RT#32374. In other words, I'm _not_ asking that\n\n$ ./parrot examples/sdl/blue_rect.pl\n\nbe able to automatically determine an appropriate compiler\nand invoke it on the script. While this is a very worthy and\nimportant goal, at the moment there seem to be so many issues \naround \"how does Parrot register compilers and figure out which \none to use\" that I fear it will be a while before this gets \nimplemented. I want something sooner than that.\n\nI'm also explicitly _not_ asking to try to handle or resolve\nthings based on Unix shebang lines, so that a file starting with\n# !/path/to/parrot nqp\n\nwill automatically be executed with nqp. Again, it's something\nwe will eventually want to consider, but given the vagaries\nof dealing with shebangs in so many different languages and\nplatforms it's not what I'm aiming to get from this ticket.\n\nAll I'm really looking is to be able to place the .pbc file for\na compiler or other application into a standard location where it\ncan be invoked from Parrot without having to give a complete\npath to the .pbc file.\n\nThis could also have the benefit of simplifying Makefiles as well.\nFor example, when I moved nqp from languages/ to compilers/ , I had\nto change the Makefile from\n\n$(PARROT) $(PARROT)/languages/nqp/nqp.pbc ....\n\nto\n\n$(PARROT) $(PARROT)/compilers/nqp/nqp.pbc ...\n\nWhile it was easy to do for this one case -- imagine if we had \n10 or 20 applications that were using nqp as part of the \nbuild process. With the approach proposed here, the Makefile\ncan have\n\n$(PARROT) nqp ...\n\nand it all just works.\n\nI would also be willing to accept an option-based version of\nthis, such as (pick an appropriate option name or letter):\n\n$ ./parrot --prog=nqp blue_rect.pl\n\nComments, suggestions, and (most importantly) implementations welcomed.\nThanks,\n\nPm\n\nOriginally http://trac.parrot.org/parrot/ticket/1196","files":null}]}