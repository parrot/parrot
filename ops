{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284798188,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5NTA=","github-url":"https://github.com/parrot/parrot/issues/384#issuecomment-3502950"},"message":"\u003cp\u003e\nCan anyone take this ticket on?  Should we?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1305968006,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5NTE=","github-url":"https://github.com/parrot/parrot/issues/384#issuecomment-3502951"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1356#comment:1\" title=\"Comment 1 for Ticket #1356\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Can anyone take this ticket on?  Should we?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI repeat the question.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1306036371,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5NTI=","github-url":"https://github.com/parrot/parrot/issues/384#issuecomment-3502952"},"message":"\u003cp\u003e\nI suspect that we would like this kind of functionality, if we can find a good way to inherit it between all our array types. Or, better yet, if we could find an intelligent and non-wasteful way to combine our array types, and implement a single sort routine. In any case, I feel like all our array types should either have built-in sort functionality or an easy way to access it.\n\u003c/p\u003e\n\n\u003cp\u003e\nOn another side note, because the Parrot_quicksort routine calls nested runloops to call the comparison routines, there is a very real possibility that an implementation in PIR could be faster than the current implementation in C. I'll play with that as a possible alternative.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1306479261,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI5NTM=","github-url":"https://github.com/parrot/parrot/issues/384#issuecomment-3502953"},"message":"\u003cp\u003e\nI have a preliminary finding that is quite interesting. I implemented a Quicksort routine in winxed for sorting ResizablePMCArrays. My quicksort is about 20% faster than the built-in sort method when a custom comparison routine is used. When the built-in C-level comparisons are used, the current method is 80% faster than the winxed version. I suspect the difference here is that the current method has optimizations for NCI PMCs to invoke them without PCC. When a custom comparison sort is used, as I suspect it would be for most HLL applications, the current version is significantly slower than a version written in pure PIR.\n\u003c/p\u003e\n\n\u003cp\u003e\nMy recommendation, and I am looking for feedback, is this: I would like to deprecate and remove the sort method from the various array types where it is present. In exchange, I would like to provide a pure-PIR version in the standard library. This sort library would not be a built-in method (although it could always be injected as such at runtime), but would be able to be used by all array and array-like types, including types which do not inherit from Parrot's current array types.\n\u003c/p\u003e\n\n\u003cp\u003e\nIf this sounds like an attractive trade-off, I will get the process started. If not, we can search for alternatives.\n\u003c/p\u003e","files":null}]}