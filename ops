{"version":1,"ops":[{"type":3,"author":{"id":"090edab1282a45bd2d4c0e11ceffc2d7454f9e77"},"timestamp":1245430390,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MDY=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502606"},"message":"\u003cp\u003e\nWith Lua, it's doable. It's just a code duplication.\n\u003c/p\u003e\n\n\u003cp\u003e\nBut, I think the reason of this deprecation is not enought.\nFor me, a good reason is something like :\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\nmultiple inheritance is a performance bottleneck.\n\u003c/p\u003e\n\u003c/blockquote\u003e","files":null},{"type":3,"author":{"id":"099af60226e2576bd4ff0f5c2614b710c745cab6"},"timestamp":1245432248,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MDc=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502607"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/774#comment:1\" title=\"Comment 1 for Ticket #774\"\u003efperrad\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n With Lua, it's doable. It's just a code duplication.\n But, I think the reason of this deprecation is not enought.\n For me, a good reason is something like :\n  multiple inheritance is a performance bottleneck.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI've got another reason - \"multiple inheritance will require to support full C++ style virtual/diamond inheritance\".\n\u003c/p\u003e\n\n\u003cp\u003e\nConsider this:\n{{[\n\u003c/p\u003e\n\n\u003cp\u003e\npmclass Base {\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\nATTR foo\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n};\n\u003c/p\u003e\n\n\u003cp\u003e\npmclass D1 extends Base {};\n\u003c/p\u003e\n\n\u003cp\u003e\npmclass D2 extends Base {};\n\u003c/p\u003e\n\n\u003cp\u003e\npmclass MyShinyClasss extends D1 extends D2 {\n\u003c/p\u003e\n\n\u003cp\u003e\nVTABLE bar { GETATTR(foo); }\n\u003c/p\u003e\n\n\u003cp\u003e\n};\n\u003c/p\u003e\n\n\u003cp\u003e\n}}}\n\u003c/p\u003e\n\n\u003cp\u003e\n(Code is sketched).\n\u003c/p\u003e\n\n\u003cp\u003e\nI know how to deal with this. Full implementation of \"virtual\" inheritance will work. But I don't want to implement good half of C++ compiler in pmc2c. And I don't want any parrot's developer to learn how to do this.\n\u003c/p\u003e\n\n\u003cp\u003e\n--\nBacek\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"090edab1282a45bd2d4c0e11ceffc2d7454f9e77"},"timestamp":1245507459,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MDg=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502608"},"message":"\u003cp\u003e\nWe don't need a C++ like multi-inheritance.\n\u003c/p\u003e\n\n\u003cp\u003e\nMulti-inheritance of abstract PMC without ATTR is enought.\nIt's more a Java like multi-inheritance.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"099af60226e2576bd4ff0f5c2614b710c745cab6"},"timestamp":1245518103,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MDk=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502609"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/774#comment:3\" title=\"Comment 3 for Ticket #774\"\u003efperrad\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n We don't need a C++ like multi-inheritance.\n Multi-inheritance of abstract PMC without ATTR is enought.\n It's more a Java like multi-inheritance.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nJava like multi-inheritance doesn't inherit implementation at all... And all our pmcs have exactly same set of VTables.\n\u003c/p\u003e\n\n\u003cp\u003e\n--\nBacek\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1291261648,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MTA=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502610"},"message":"\u003cp\u003e\nChanging to an RFC - this is asking for a design decision.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1291310029,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI2MTE=","github-url":"https://github.com/parrot/parrot/issues/279#issuecomment-3502611"},"message":"\u003cp\u003e\nI'd like to remove this because, as far as I can tell, it's an unintended quirk of the pmc2c code rather than an intentional feature.  That said, it's not costing us anything to keep it around.  If someone does want to remove it, please patch Lua first.  After that, we can remove this feature.  Until then, consider it deprecated pending proper notice.\n\u003c/p\u003e","files":null}]}