{"version":1,"ops":[{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1319077749,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0NjM5Mzc=","github-url":"https://github.com/parrot/parrot/issues/178#issuecomment-2463937"},"message":"pow was migrated to a dynamic opcode some time ago: see src/dynoplibs/trans.ops","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1319077798,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0NjM5NDI=","github-url":"https://github.com/parrot/parrot/issues/178#issuecomment-2463942"},"message":"I think pow is a dynop now. math_ops maybe?\n\nOn Oct 19, 2011 7:09 PM, \"Brian Gernhardt\" \u003c\nreply@reply.github.com\u003e\nwrote:\n\n\u003e Although abc is old, it's simple and a reasonable thing to expect new\n\u003e people to PCT to look at.  There are currently 6 failing tests:\n\u003e - All tests involving `pow` fail with `error:imcc:syntax error, unexpected\n\u003e   NREG, expecting '(' ('$N102')`.  This appears to be because there is no\n\u003e   `pow` opcode anymore.  This should be replaced with a runtime function.\n\u003e - One test fails because the variable `abc` gets aliased to the variable\n\u003e   `last` somehow.  Solving this one involves digging deeper into the PAST and\n\u003e   PIR generated by the language.\n\u003e \n\u003e ## \n\u003e \n\u003e Reply to this email directly or view it on GitHub:\n\u003e https://github.com/parrot/parrot/issues/178","files":null},{"type":3,"author":{"id":"646f0669ead6eaf64196bebf3884a5eff162357a"},"timestamp":1319112344,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0Njc3Mzg=","github-url":"https://github.com/parrot/parrot/issues/178#issuecomment-2467738"},"message":"Thanks for pointing out where pow went, I updated the issue.","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1319117554,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0Njg2MDI=","github-url":"https://github.com/parrot/parrot/issues/178#issuecomment-2468602"},"message":"The 'abc' issue is now fixed in bacd9dd.  The problem wasn't that the 'abc' symbol was aliasing to the 'last' symbol -- it was aliasing to something (likely the abc:: namespace) that was somehow stringifying to \"last\".\n\nResolved by creating a separate namespace for holding abc variables.\n\nThere's still a problem with the pow opcode, and adding \".loadlib 'trans_ops'\" doesn't seem to fix that.  I've entered this as a new issue (#179) to be resolved.\n\nClosing ticket.\n\nPm","files":null},{"type":4,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1319117554,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDQ3NDUzOA=="},"status":2}]}