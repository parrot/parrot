{"version":1,"ops":[{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393736259,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDk4MDg3NDY5"},"added":["Component-imcc"],"removed":[]},{"type":5,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393736261,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50OTgwODc0NzY="},"added":[],"removed":["Component-core"]},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1393776280,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM2NDU3NzU3","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-36457757"},"message":"The sub pmc gets the usage U_FIXUP | U_SUBID_LOOKUP, and is fixed up at\npbc.c: get_code_size() store_fixup\n\nIt crashes at `PackFile_fixup_subs(imcc-\u003einterp, PBC_IMMEDIATE, NULL);`\nalso without .const, just the .immediate pragma is enough.\n\n```\n.sub foo\n.end\n.sub baz :immediate :anon\n  .const \"Sub\" foo = \"foo\"\n  $P1 = foo.\"new\"()\n.end\n```\n\ncrashes also even if the foo sub exists.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1413310081,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5MDg5OTAw","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-59089900"},"message":"Dies now with the proper error message \"Method 'new' not found for non-object\"\nFixed in branch `rurban/null-call-gh1024`","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1413359678,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5MTY5OTA4","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-59169908"},"message":"`t/compilers/imcc/syn/const.t` test 41 is still unreliable\non the smokers. Needs to be improved when I can repro it.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1413363269,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5MTc2MDk0","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-59176094"},"message":"Merged with 786869f9f9defc64f006c807e421bec45c43782e into 6.9.0","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1413363269,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTc4NzA2Mjg3"},"status":2},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416677393,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MDg3OTUx","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-64087951"},"message":"still crashing on linux:\n\n```\n$ valgrind ./parrot -D40 -w  t/compilers/imcc/syn/const_41.pir\n==8231== Memcheck, a memory error detector\n==8231== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==8231== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==8231== Command: ./parrot -D40 -w /usr/src/parrot/parrot-git/t/compilers/imcc/syn/const_41.pir\n==8231==\n==8231== Invalid read of size 8\n==8231==    at 0x4D7C4C0: Parrot_set_p_pc(long*, parrot_interp_t*) (core_ops.c:20475)\n==8231==    by 0x4E01339: runops_fast_core(parrot_interp_t*, runcore_t*, long*) (cores.c:495)\n==8231==    by 0x4E007C6: runops_int(parrot_interp_t*, unsigned long) (main.c:221)\n==8231==    by 0x4DD50AF: runops(parrot_interp_t*, unsigned long) (ops.c:123)\n==8231==    by 0x4DCDFE3: Parrot_pcc_invoke_from_sig_object (pcc.c:340)\n==8231==    by 0x4DCD774: Parrot_pcc_invoke_sub_from_c_args (pcc.c:140)\n==8231==    by 0x4E15A99: do_1_sub_pragma(parrot_interp_t*, PMC*, pbc_action_enum_t) (api.c:744)\n==8231==    by 0x4E16347: do_sub_pragmas (api.c:995)\n==8231==    by 0x4E1952F: PackFile_fixup_subs (api.c:2477)\n==8231==    by 0x4F559E2: e_pbc_end_sub(_imc_info_t*, void*, IMC_Unit*) (pbc.c:2264)\n==8231==    by 0x4F464FD: emit_flush(_imc_info_t*, void*, IMC_Unit*) (instructions.c:700)\n==8231==    by 0x4F407C9: imc_compile_unit(_imc_info_t*, IMC_Unit*) (imc.c:125)\n==8231==  Address 0x5bd1f48 is 8 bytes before a block of size 24 alloc'd\n==8231==    at 0x4A06C20: realloc (vg_replace_malloc.c:662)\n==8231==    by 0x4DC16C1: gc_gms_reallocate_memory_chunk_zeroed(parrot_interp_t*, void*, unsigned long, unsigned long) (gc_gms.c:2031)\n\n==8231== Invalid read of size 8\n==8231==    at 0x4E9DDB9: Parrot_CallContext_push_pmc(parrot_interp_t*, PMC*, PMC*) (callcontext.pmc:1071)\n==8231==    by 0x4DCE580: Parrot_pcc_build_sig_object_from_op (args.c:410)\n==8231==    by 0x4D53F58: Parrot_set_args_pc(long*, parrot_interp_t*) (core_ops.c:13965)\n==8231==    by 0x4E01339: runops_fast_core(parrot_interp_t*, runcore_t*, long*) (cores.c:495)\n==8231==    by 0x4E007C6: runops_int(parrot_interp_t*, unsigned long) (main.c:221)\n==8231==    by 0x4DD50AF: runops(parrot_interp_t*, unsigned long) (ops.c:123)\n==8231==    by 0x4DCDFE3: Parrot_pcc_invoke_from_sig_object (pcc.c:340)\n==8231==    by 0x4DCD774: Parrot_pcc_invoke_sub_from_c_args (pcc.c:140)\n==8231==    by 0x4E15A99: do_1_sub_pragma(parrot_interp_t*, PMC*, pbc_action_enum_t) (api.c:744)\n==8231==    by 0x4E16347: do_sub_pragmas (api.c:995)\n==8231==    by 0x4E1952F: PackFile_fixup_subs (api.c:2477)\n==8231==    by 0x4F559E2: e_pbc_end_sub(_imc_info_t*, void*, IMC_Unit*) (pbc.c:2264)\n==8231==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n```","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416677393,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQxOTcyMTc2OTg="},"status":1},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416688419,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MDk0Mzk1","github-url":"https://github.com/parrot/parrot/issues/1024#issuecomment-64094395"},"message":"WONTFIX invalid registers for :immediate subs, as all globals are not fixed up by \ndefinition, they are even cleared. That's a big :immediate limitation.\nSee http://trac.parrot.org/parrot/ticket/1324\n\nBut I added debugging assertions to detect rhs invalid pmc registers in set_p_pc?, \nand CallContext also has a NULL check now.","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1416691804,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTk3MjQ1Mzc1"},"status":2}]}