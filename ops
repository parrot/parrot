{"version":1,"ops":[{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455524843,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE4NDEwOTY1Ng==","github-url":"https://github.com/parrot/parrot/issues/991#issuecomment-184109656"},"message":"Almost every fast language implementation uses such a recursion limit around 1000. It's not entirely unexpected, and it is certainly not a bad default value.\n\nHowever with the documented parrot CPS system it is unexpected. The problem was the \"pdd calling convention refactor\" with 2.3.0 which broke CPS and the calling convention and performance completely.\n\ne.g. https://github.com/parrot/parrot-bench#comments\nRELEASE_2_3_0: -11.86% new pcc calling convention\n\nSince we cannot revert this deoptimization, and the default of 1000 is reasonable, closing.","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455524995,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NTUwMzYzNDgz"},"status":2}]}