{"version":1,"ops":[{"type":1,"author":{"id":"4277d85693ce7ae3559eb0a94f3b50be93446600"},"timestamp":1327950579,"metadata":{"github-id":"MDU6SXNzdWUzMDI1MDMw","github-url":"https://github.com/parrot/parrot/issues/709","origin":"github"},"title":"config/auto/warnings.pm and t/steps/auto/warnings-01.t broken under clang","message":"In response to [this mail](http://lists.parrot.org/pipermail/parrot-dev/2012-January/006576.html), I took a look at the first test failure when using clang - it turns out that both the configure script and the test are broken:\n\nThe configure script fails to detect clang; relevant [code snippet](https://github.com/parrot/parrot/blob/master/config/auto/warnings.pm#L282):\n\n```\nif ( defined $conf-\u003edata-\u003eget('gccversion') ) {\n    $compiler = $conf-\u003edata-\u003eget('g++') ? 'g++' : 'gcc';\n}\n# [...]\nelsif ( $conf-\u003eoption_or_data('cc') =~ /clang/ ) {\n    $compiler = 'clang';\n}\n```\n\nAs clang is supposed to be a drop-in replacement for gcc, it provides a `gccversion` and the `elsif` is never reached.\n\nThe test expects that `auto::warnings` is skipped if the compiler is not gcc; relevant [code snippet](https://github.com/parrot/parrot/blob/master/t/steps/auto/warnings-01.t#L43):\n\n```\n$conf-\u003edata-\u003eset( gccversion =\u003e undef );\n# [...]\nis($step-\u003eresult(), q{skipped}, \"Got expected result\");\n```\n\nThis is wrong for both clang and icc as `auto::warnings` supposedly knows how to deal with these compilers.","files":null}]}