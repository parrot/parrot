{"version":1,"ops":[{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1356107174,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExNjE4ODE1","github-url":"https://github.com/parrot/parrot/issues/173#issuecomment-11618815"},"message":"We should not care about qemu when trying to do remote \"cross\" compilation, as the qemu host might be running on real HW. No one cares if it's qemu, kvm, vmware, virtualbox or real HW, it just needs to be accessible, via network (sshd) or serial /dev/ttyS0.\n\nI actually did a few qemu builds, and there was no need to teach Configure.PL anything, \nas everything is done on the remote host.\n\n```\nscp bootstrap-parrot.sh crosshost:\nssh crosshost bootstrap-parrot.sh\nssh crosshost \"cd parrot \u0026 perl Configure.PL \u0026 make \u0026 make smoke\"\n```\n\n`bootstrap-parrot.sh` should check for git, perl, and download or update parrot.\n\nThis can be done form a simple `bootstrap-qemu.sh` script. \nThe setup of such a machine can be automated via poky/bitbake. See http://www.pokylinux.org/\n\nI published some of my custom debian machines at http://perl514.cpanel.net/qemu/, and I'll provide some ARM machines also, built with poky.\nTo build a core-image-minimal-qemuarm and the default core-image-minimal-qemux86 I only needed 2hrs and temp. 50GB-100GB, final 30GB.\nSo it should be doable on a fresh SSD.\n\nI'm happy to provide a tested `bootstrap-qemu.sh` script, which downloads poky, and sets up such an image automatically.\nIt needs python though :)\n\n# \n\n--cross=config_host.pir should be used for real native cross compilation, and I see no need for a configure probe. The user has to provide all the setup and information beforehand.\nNative cross compilation via --cross would also need to cheat and either manually set mosty config values \nor bypass our config probes, using an existing config_lib.pir.\nFrom this information the makefiles need to be generated.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1356110031,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExNjIwMjg0","github-url":"https://github.com/parrot/parrot/issues/173#issuecomment-11620284"},"message":"@rurban : very interesting! I was thinking of the case where people have qemu locally and want to basically run Configure.pl under qemu. For example, I did something like that to get Parrot running on RTEMS with qemu.\n\nPerhaps what we need is a nice document which describes how to go about using qemu+parrot to do cross builds.\n\nHave you looked into creating a BitBake/Poky recipe for Parrot? I haven't looked at that stuff in about 2 years, when it used to be called OpenEmbedded. Now it seems that Poky is part of the Yocto project, which is developed by the Intel Open Technology Center.","files":null},{"type":3,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455643665,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE4NDc4NjU0NA==","github-url":"https://github.com/parrot/parrot/issues/173#issuecomment-184786544"},"message":"Some documentation is now at http://blogs.perl.org/users/rurban/2012/07/architecture-testing.html\nI usie qemu images regularly to update native_pbc and for smoking","files":null},{"type":4,"author":{"id":"86141a663c2eb7543d1a51ec6253a1d54de912fd"},"timestamp":1455643665,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NTUyMzU2MDAy"},"status":2}]}