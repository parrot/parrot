{"version":1,"ops":[{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1265577907,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzQ=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503334"},"message":"\u003cp\u003e\nMy guess is this:\nPerhaps this has something to do with the comment on the last line? The lexer will match the # and everything up to and including the newline character, but it encounters EOF before it can read the NL.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1265583776,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzU=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503335"},"message":"\u003cp\u003e\nThe test t/compilers/imcc/syn/pasm.t actually tests that Parrot will fail if there is no trailing newline. If we \"fix\" that behavior, we need to update or delete that test.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aa8915ba52969f979af836ca4704fd27e613004f"},"timestamp":1265592746,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzY=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503336"},"message":"\u003cp\u003e\nIf that is the case, then the error message should be made more explicit: \"missing newline at eof\" or some such.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2e07d1e375724352b47c35e84b16d7b9852990d2"},"timestamp":1265717327,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzc=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503337"},"message":"\u003cp\u003e\nUnlike Windows, Unix/Linux/POSIX considers that a file without a trailing newline is not a \"text\" file. In a \"text file\", every line \u003ci\u003eincludes\u003c/i\u003e its trailing newline, even (especially) the last one.\n\u003c/p\u003e\n\n\u003cp\u003e\nThis has two implications:\n\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003ethe lines of two text files can be concatenated simply by concatenating their byte streams; and\n\u003c/li\u003e\u003cli\u003eit makes clear the distinction between a file containing one (empty) line, and a file containing zero lines.\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\nSo I concur that the error message should be made more explicit.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1276410299,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzg=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503338"},"message":"\u003cp\u003e\nreassigning ticket to our new IMCC hacker.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"74bf5b369ba601db5534b6a77d32aaccc8876d4b"},"timestamp":1310947979,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzMzk=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503339"},"message":"\u003cp\u003e\nA simple fix for this issue:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003ediff --git a/compilers/imcc/imcc.l b/compilers/imcc/imcc.l\nindex 7b01b74..e2088ed 100644\n--- a/compilers/imcc/imcc.l\n+++ b/compilers/imcc/imcc.l\n@@ -251,7 +251,7 @@ SP              [ ]\n         yy_push_state(cmt5, yyscanner);\n     }\n-\u0026lt;cmt5\u0026gt;._{EOL} {\n+\u0026lt;cmt5\u0026gt;._({EOL})? {\n         if (imcc-\u0026gt;expect_pasm == 2)\n             BEGIN(INITIAL);\n         else\n\u003c/pre\u003e\u003cp\u003e\nApplying such fix will require to change t/op/basic.t test, which currently expects failure, because it has no newline in the end of file.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1310978084,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDA=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503340"},"message":"\u003cp\u003e\nI applied the patch, rebuilt, and then tried the command AustinHastings recommended -- with no better results:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e./parrot --output tt1424.pbc tt1424.pir\nerror:imcc:syntax error, unexpected $undefined, expecting $end (' ')\n        in file 'tt1424.pir' line 2\nerror:imcc:syntax error ... somewhere\n        in file 'tt1424.pir' line 2\nsyntax error ... somewhere\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"74bf5b369ba601db5534b6a77d32aaccc8876d4b"},"timestamp":1310978629,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDE=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-3503341"},"message":"\u003cp\u003e\nIt works fine for me.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003efelipe:~/dev/parrot$ perl -e 'print \".sub foo\\n\\tsay \\\"Hello, world\\\"\\n.end\\n# Last line\"' \u0026gt; x.pir\nfelipe:~/dev/parrot$ ./parrot --output x.pbc x.pir\nfelipe:~/dev/parrot$ ./parrot x.pir\nHello, world\n\u003c/pre\u003e\u003cp\u003e\nHave Bison been detected when you ran Configure.pl? (--maintainer)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336521065,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1ODk2MTU=","github-url":"https://github.com/parrot/parrot/issues/482#issuecomment-5589615"},"message":"Do we have a verdict here? @kurahaupo seems to suggest that the \"fail if there isn't a newline\" behavior is expected and is something larger than just Parrot's use case. @aghast seems fine with that, so long as we improve the error message (which I'm not even sure yet that we can do). @felipensp provided a patch to make this work, but @kid51 says it doesn't work for him.\n\nAnybody else have input before I pull a resolution out of my backside?","files":null}]}