{"version":1,"ops":[{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1311244596,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMyMTE=","github-url":"https://github.com/parrot/parrot/issues/455#issuecomment-3503211"},"message":"\u003cp\u003e\nacosh, asech, and atanh are implemented incorrectly.\n\u003c/p\u003e\n\n\u003cp\u003e\nI am working on the problem in branch Util/tt_1891_complex_trig :\n\u003ca   href=\"https://github.com/parrot/parrot/tree/Util%2Ftt_1891_complex_trig\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ehttps://github.com/parrot/parrot/tree/Util%2Ftt_1891_complex_trig\u003c/a\u003e\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1311249776,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMyMTI=","github-url":"https://github.com/parrot/parrot/issues/455#issuecomment-3503212"},"message":"\u003cp\u003e\nBe advised, problems are turning up in other data sources:\n\u003c/p\u003e\n\n\u003cp\u003e\nI will rely on the standard C library as the \"absolute truth\", until counter-evidence arrives.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e    #include \u0026lt;stdio.h\u0026gt;\n    #include \u0026lt;complex.h\u0026gt;\n    int main(void) {\n        const double complex z = 2.0 - 3.0 \\* I;\n        const double complex c = cacosh(z);\n        printf(\n            \"cacosh(%lg%+lgi) is %lf%+lfi\\n\",\n            creal(z), cimag(z),\n            creal(c), cimag(c)\n        );\n        return 0;\n    }\n\u003c/pre\u003e\u003cp\u003e\nOutputs:\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\ncacosh(2-3i) is 1.983387-1.000144i\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\n\u003ca   href=\"http://www.wolframalpha.com/input/?i=acosh(2-3i\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ehttp://www.wolframalpha.com/input/?i=acosh(2-3i\u003c/a\u003e)\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\n1.983387-1.00014354247i\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\nMore evidence that the C answer is correct.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nperl -MMath::Complex               -wle '$f=cplxe(2,-3); $g = acosh $f;   print \"$g\"'\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\n1.32074266859523-2.97863118461102i\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\nLooks completely wrong to me. Also, when fed back into cosh(), does not even come close to (2,-3).\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nperl -MMath::Cephes::Complex=cmplx -wle '$f=cmplx(2,-3); $g = $f-\u0026gt;cacosh; print $g-\u0026gt;as_string'\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\n-1.983387 + 1.000144 i\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\nThe signs are backwards, but cosh(z) == cosh(-z), so maybe this is just another form of \"correct\"?\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nWill pursue further tomorrow.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1355294132,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMjc4NDgx","github-url":"https://github.com/parrot/parrot/issues/455#issuecomment-11278481"},"message":"Any updates on this issue? @Util , do you need any help getting this branch up to date to continue hacking on it?","files":null}]}