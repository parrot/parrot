{"version":1,"ops":[{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1316636359,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTU=","github-url":"https://github.com/parrot/parrot/issues/603#issuecomment-3503715"},"message":"\u003cp\u003e\nThis message has 0 attachment(s)\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"6d59fc378929d99368e023bcfc49aacae1e68aad"},"timestamp":1316752063,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3MTY=","github-url":"https://github.com/parrot/parrot/issues/603#issuecomment-3503716"},"message":"\u003cpre class=\"wiki\"\u003eI have included a patch below that avoids the alignment problem on\nSolaris/SPARC.  I don't understand parrot's pools and arenas deeply\nenough to know if the fix is in the right place, but I present it anyway\nas it's better than crashing.\nIn the function allocate_new_pool_arena() in src/gc/fixed_allocator.c,\nnew_arena is assigned to a new chunk of space allocated by malloc.\nThen, line 553 of src/gc/fixed_allocator.c sets up the \"next\" pointer\nas follows:\n   next            = (Pool_Allocator_Free_List *)(new_arena + 1);\nThe problem on SPARC is that sizeof(Pool_Allocator_Free_list) == 4,\nbut some items (such as doubles) must be aligned on 8-byte boundaries.\nThus the \"next\" pointer is not suitably aligned for all uses.  From here,\nthe story gets fuzzy, but at least in some test cases, parrot crashes\nwhile accessing an \"N\" register.  (The original errors reported in this\nticket might be mostly due to other problems in the same file, which\nhave subsequently been fixed, so they are probably not too relevant.)\nThe following hacky patch makes the alignment problem go away by\nmaking Pool_Allocator_Free_list larger (and Pool_Allocator_Arena --\nI don't understand the difference between them, and didn't have time to\nexperiment with all possible permutations of this fix).  This means it\nis now 8 bytes, and the \"next\" pointer is suitably aligned for all uses.\nA better way would be to have the compiler automatically align stuff for\nus, but I'm unclear where the relevant assignments are actually happening,\nso I don't know where to do it correctly.\ndiff --git a/src/gc/fixed_allocator.h b/src/gc/fixed_allocator.h\nindex 8c2f1b8..7a8366e 100644\n--- a/src/gc/fixed_allocator.h\n+++ b/src/gc/fixed_allocator.h\n@@ -28,11 +28,12 @@ src/gc/fixed_allocator.h - implementation of allocator for small-size objects.\n typedef struct Pool_Allocator_Free_List {\n     struct Pool_Allocator_Free_List * next;\n-\n+    char *dummy; /* XXX minimal hack to force alignment suitable for doubles */\n } Pool_Allocator_Free_List;\n typedef struct Pool_Allocator_Arena {\n     struct Pool_Allocator_Arena * next;\n+    char *dummy; /* XXX minimal hack to force alignment suitable for doubles */\n } Pool_Allocator_Arena;\n typedef struct Pool_Allocator {\n--\n    Andy Dougherty      doughera@lafayette.edu\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1355291973,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDExMjc3ODIz","github-url":"https://github.com/parrot/parrot/issues/603#issuecomment-11277823"},"message":"Can anybody confirm or deny that this is still happening?","files":null}]}