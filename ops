{"version":1,"ops":[{"type":1,"author":{"id":"8c86ede03c8e80b0dad5131138f96e957a4ee66b"},"timestamp":1380770964,"metadata":{"github-id":"MDU6SXNzdWUyMDQzNTU0Ng==","github-url":"https://github.com/parrot/parrot/issues/986","origin":"github"},"title":"Integer does not round as advertised","message":"Reported by: zefram@fysh.org\n\ndocs/pdds/pdd17_pmc.pod says of the Integer PMC class:\n\n\u003e Floating point, string, and bignum values assigned to an Integer\n\u003e PMC round to the nearest integer.\n\nLeaving aside that this doesn't actually happen for assignment (addressed in a separate report), it seems to be implied that this rounding would apply when initialising a new Integer PMC. In fact, when initialising from a String PMC it doesn't round to nearest, but truncates (towards zero):\n\n```\n$ cat t12.pir \n.sub main :main\n        $P0 = new \"String\"\n        assign $P0, \"123.678\"\n        $P1 = new \"Integer\", $P0\n        say $P1\n.end\n$ ./parrot t12.pir \n123\n```\n\nThe same goes for initialisation from a Float PMC.\nI expect this is a documentation bug, rather than an implementation bug.\n\n-zefram","files":null}]}