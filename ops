{"version":1,"ops":[{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1283594144,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NzQ=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503774"},"message":"\u003cp\u003e\n\u003ci\u003etools/dev/create_language.pl\u003c/i\u003e was added to the repository by pmichaud last December:\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003er38147 | pmichaud | 2009-04-16 01:21:25 -0400 (Thu, 16 Apr 2009) | 13 lines\nAdd tools/dev/create_language.pl, a substantially modified version\nof tools/dev/mk_language_shell.pl .\n\u003c/pre\u003e\u003cp\u003e\n... and further maintained by pmichaud:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003er42889 | pmichaud | 2009-12-04 12:26:19 -0500 (Fri, 04 Dec 2009) | 3 lines\n[tools]  Update create_language.pl to build for nqp-based toolchain.\nAdd create_language.pl to files in installed Parrot.\n\u003c/pre\u003e\u003cp\u003e\n\u003ci\u003etools/dev/mk_language_shell.pl\u003c/i\u003e now appears to be generated from \u003ci\u003etools/dev/mk_language_shell.in\u003c/i\u003e.  gerd and fperrad appear to be the principal contributors to this program.\n\u003c/p\u003e\n\n\u003cp\u003e\nGerd, Fran√ßois, Patrick:  Can you comment on any of the issues cotto has raised?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bd4ae1c77edc81aa7bb32abf5c1babd84abdff35"},"timestamp":1283631813,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NzU=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503775"},"message":"\u003cp\u003e\nOkay here is my comment without knowing much about it.\n\u003c/p\u003e\n\n\u003cp\u003e\nmk_language_shell.pl is the one that the PCT-Tutorial in examples/languages/squaak/doc refer to.\n\u003c/p\u003e\n\n\u003cp\u003e\ncreate_language.pl seams to be newer.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e\u0026gt; perl /usr/lib64/parrot/2.7.0/tools/dev/create_language.pl Blabla Blabla.dir\n...\nYour new language has been created in the Blabla.dir directory.\nTo do an initial build and test of the language:\n    cd Blabla.dir\n    perl Configure.pl [--gen-parrot]\n    make\n    make test\n\u003c/pre\u003e\u003cp\u003e\nIf the language is created with mk_language_shell.pl, the same is done with this commands:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e\u0026gt; cat README\nLanguage 'Blabla' was created with /usr/lib64/parrot/2.7.0/tools/dev/mk_language_shell.pl, r47087.\n    $ parrot setup.pir\n    $ parrot setup.pir test\n\u003c/pre\u003e\u003cp\u003e\nIt seams to be a question of design.\n\u003c/p\u003e\n\n\u003cp\u003e\nThat is what I am thinking:\n\u003c/p\u003e\n\n\u003cp\u003e\nIf \"create_language.pl\" is newer and better then \"mk_language_shell.pl\" can removed und the PCT Tutorial should be updated to have a nice starting point for potential HLL developer.\nPerhaps the PCT-Tutorial can refer to both.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1283634582,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3NzY=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503776"},"message":"\u003cp\u003e\nMy vote is to pick ONE. I don't care which one, but having 2 is just confusing to incoming HLL devs.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"bd4ae1c77edc81aa7bb32abf5c1babd84abdff35"},"timestamp":1283779111,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Nzc=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503777"},"message":"\u003cp\u003e\nThe basic language files (Action.pm, Compiler.pm ...) generated from both scripts have the same content. So it should be possible to merge \"mk_language_shell.pl\" and \"create_language.pl\" and give the result an option to choose the design that should be used for the generating of a language. I will start putting both scripts together. I will call the result of the merge \"create_language.pl\", because I like this name more.\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n create_language.pl [--generate-with=make|setup]\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nI will give the option \"generate-with\" as default the value \"setup\". Better names for the option as \"generate-with\" are welcome.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1283801592,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Nzg=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503778"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1491#comment:4\" title=\"Comment 4 for Ticket #1491\"\u003egerd\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n So it should be possible to merge \"mk_language_shell.pl\" and \"create_language.pl\" and give the result an option to choose the design that should be used for the generating of a language. I will start putting both scripts together.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nGerd, Thanks for taking this on.  I'm just hoping that we can hear from Patrick as to his thoughts around \u003ci\u003ecreate_language.pl\u003c/i\u003e.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1284165323,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3Nzk=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503779"},"message":"\u003cpre class=\"wiki\"\u003eOn Mon, Sep 06, 2010 at 12:33:12PM -0000, Parrot wrote:\n\u0026gt; Comment(by jkeenan):\n\u0026gt;\n\u0026gt;  Replying to [comment:4 gerd]:\n\u0026gt;  \u0026gt; So it should be possible to merge \"mk_language_shell.pl\" and\n\u0026gt;  \u0026gt; \"create_language.pl\" and give the result an option to choose the design\n\u0026gt;  \u0026gt; that should be used for the generating of a language. I will start putting\n\u0026gt;  \u0026gt; both scripts together.\n\u0026gt;\n\u0026gt;  Gerd, Thanks for taking this on.  I'm just hoping that we can hear from\n\u0026gt;  Patrick as to his thoughts around ''create_language.pl''.\nSorry it's taken me so long to respond -- I've been trying (and largely\nfailing) to formulate a positive and clear response.  Overall I'm -0.5 on\nthe proposal to merge the two scripts into a single tool.\nAs gerd++ points out earlier in the thread, behind the two tools lie\nstrong differences of opinion regarding the mechanics of the build and\ninstall system.  In fact, the primary reason I abandoned mk_language_shell.pl\nand started create_language.pl is because I was extremely uncomfortable\nwith the many modifications being made to mk_language_shell.pl, and it was\nfar easier to start again from scratch with a new tool than to try to\nwork around the changes being made to the existing one.\nAt this point I'm still strongly in favor of a build system similar to\nwhat create_language.pl, NQP, and Rakudo currently use, and I don't want\nto feel \"encumbered\" by setup.pir.  I don't find the proposal to provide\na \"make vs. setup\" option switch to create_language.pl to be all that\ncompelling; to a large degree I think it just converts the newbie question\nof \"Which script do I choose, and why?\" to \"Which --generate-with= option\ndo I choose, and why?\".  The fact that --generate-with= is proposed to\ndefault to \"setup\" makes me even less happy with the proposed merger, as\nit basically eliminates the whole reason behind why I started\ncreate_language.pl in the first place.\nThe reason my vote is -0.5 instead of a full -1.0 is because I recognize\nthe current situation is not ideal, and I don't have any strong alternatives\nto offer at this time.  I'm also trying to avoid an appearance of\n\"my way of doing things is the only correct answer\", because I do\nacknowledge that there are justifications for the setup.pir approach\nas well and I respect the efforts the setup.pir authors have put into\nthat system.\nSo, I'm not wanting to say \"absolutely don't go down this path\".  I'm\njust trying to flag up that I think that trying to develop a single\nlanguage creation script that supports setup.pir isn't likely\nto work out at all well for the projects I'm working on, I'm not likely\nto support the resulting script if it is merged, and that perhaps\nwe could continue searching for other means of resolving the\nexisting confusion.\nPm\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"bd4ae1c77edc81aa7bb32abf5c1babd84abdff35"},"timestamp":1284338134,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODA=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503780"},"message":"\u003cp\u003e\nI don't care about the default value of \"--genetate-with=\". Setting it to \"setup\" was only a suggestion. I only think that the \"setup.pir\" approach should not completely ignored. I think a script with an option is more easy to maintain then two scripts and an option is easier to explain then a reason for two scripts.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe \"setup.pir\" part could go in a separate subroutine and even in a separate file and this part could be maintained from the setup.pir group.\n\u003c/p\u003e\n\n\u003cp\u003e\nIn consideration to Patick's comment I still suggest the merge:\n\u003c/p\u003e\n\n\u003cp\u003e\n- by start writing a merge in create_language.pl.in\n\u003c/p\u003e\n\n\u003cp\u003e\n- generate the file create_language_new.pl from it\n\u003c/p\u003e\n\n\u003cp\u003e\n- setting --generate-with to \"make\" as default\n\u003c/p\u003e\n\n\u003cp\u003e\n- working on it as long everybody agree with it\n\u003c/p\u003e\n\n\u003cp\u003e\n- then delete create_language.pl and mk_language_shell.pl and let create_language.pl be generated from create_language.pl.in\n\u003c/p\u003e\n\n\u003cp\u003e\n- I would like that create_language.pl has a correct shebang, is executable and installed in the bin path\n\u003c/p\u003e\n\n\u003cp\u003e\nWould it be okay if I start to do this? Or may be the composers of the scripts want to do this by themselves? May be someone has a better or complete other idea. Means are welcome.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1286243421,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODE=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503781"},"message":"\u003cp\u003e\nI am +1 to gerd++'s merging of the scripts, which should default to \"make\". Another possibility is to keep the scripts separate but have them use the same backend code.\n\u003c/p\u003e\n\n\u003cp\u003e\nAt the least, we need some basic tests for these scripts.\n\u003c/p\u003e\n\n\u003cp\u003e\nAs for installing the scripts, I think they should have the word \"parrot\" in them somewhere, such as \"create_parrot_language\", if we are going to install them.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1286244142,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODI=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503782"},"message":"\u003cp\u003e\nI vote for the shared backend code. If people insist, we can have two thin front-ends which call the shared backend code. The benefit to this kind of setup is less duplicated logic, easier maintainability, etc. Also, if this is a tool that we're going to be using and relying on in the long term, we need to add unit tests and lots of good documentation and examples (and tests for those examples).\n\u003c/p\u003e\n\n\u003cp\u003e\nIt's probably worth taking some effort to get the design of this tool correct, especially since this is going to be the first introduction to Parrot that many developers are going to have, and if it's an absolute piece of shit a first impression will be created that is going to be hard for us to overcome later. Plus, this tool is going to create a foundation for new projects, and problems in this setup will be difficult for people to correct later.\n\u003c/p\u003e\n\n\u003cp\u003e\nI suggest the following:\n\u003c/p\u003e\n\n\u003cul\u003e\u003cli\u003eMerge core logic between the two modules. Add a script with a front-end that takes a switch. Whichever default we use is inconsequential\n\u003c/li\u003e\u003cli\u003eCreate two new front-end scripts, create_language and mk_language_shell, that are thin wrappers around the core utility to force the switch argument to one value or the other\n\u003c/li\u003e\u003cli\u003eAbstract away the generated files and folder structure into some kind of template file format. That way people will be able to use any existing template, or create their own. This may be important on certain platforms where the default setup.pir or makefile might not be correct, or in cases where certain types of project need different templates. One thing that comes to mind here is creating extension/embedding applications or shared bytecode libraries that do not use the same format as a new HLL project, but for which a template would be very valuable.\n\u003c/li\u003e\u003c/ul\u003e","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1289488110,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODM=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503783"},"message":"\u003cp\u003e\nFixing this ticket will make \u003ca   href=\"http://trac.parrot.org/parrot/ticket/1845\"\u003e\u003cspan class=\"icon\"\u003e¬†\u003c/span\u003ehttp://trac.parrot.org/parrot/ticket/1845\u003c/a\u003e trivially easy, which is a very important ticket to close.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1297639295,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODQ=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503784"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1491#comment:10\" title=\"Comment 10 for Ticket #1491\"\u003edukeleto\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n Fixing this ticket will make TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/1845\" title=\"bug: Need comparable revision information in parrot_config output (closed: fixed)\"\u003e#1845\u003c/a\u003e trivially easy, which is a very important ticket to close.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nThat ticket has been closed, but see also TT \u003ca class=\"assigned ticket\" href=\"http://trac.parrot.org/parrot/ticket/2003\" title=\"bug: Configure.pl from tools/dev/create_language.pl doesn't play nice with git (assigned)\"\u003e#2003\u003c/a\u003e and TT \u003ca class=\"closed ticket\" href=\"http://trac.parrot.org/parrot/ticket/2009\" title=\"cage: Remove dead svn-related code from Perl modules (closed: fixed)\"\u003e#2009\u003c/a\u003e.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1312363419,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDM3ODU=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-3503785"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1491#comment:12\" title=\"Comment 12 for Ticket #1491\"\u003ejkeenan\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cp\u003e\nduke, Can we get an update on the status of this ticket?\n\u003c/p\u003e\n\n\u003cp\u003e\nThank you very much.\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1332008554,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NTU5Mjc=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-4555927"},"message":"pmichaud mentioned in a private thread that his focus will be on nqp-based language creation scripts (not nqp-rx) and that we should drop create_language.pl unless someone cares to maintain it.  If nobody steps forward in the next few weeks, consider it a license to delete the script and close this issue.","files":null},{"type":3,"author":{"id":"2da6485217cbb88ff96be8f3dcc7f9ae44cf6bf0"},"timestamp":1332009111,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NTYwMDE=","github-url":"https://github.com/parrot/parrot/issues/622#issuecomment-4556001"},"message":"Yeah, it needs to be totally rewritten.\n\nI have a slightly improved fork of it in https://github.com/letolabs/app-parrot-create/blob/master/bin/new_parrot_language.pl but I think I am leaning towards just starting fresh with Module::Starter. \n\napp-parrot-create is a webapp that will allow people to choose a few drop-downs and create a language skeleton. It would make a good GSoC project as well.","files":null}]}