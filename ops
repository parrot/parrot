{"version":1,"ops":[{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257292924,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDQ=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503344"},"message":"\u003cp\u003e\n+1\n\u003c/p\u003e\n\n\u003cp\u003e\n--Andrew Whitworth\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257292937,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDU=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503345"},"message":"\u003cp\u003e\nIf we're going to remove one, let's deprecate .const outside of sub\nblocks, and make .globalconst mean a global constant everywhere.\nConsistency is a good thing, but so are clear distinctions between\nsimilar-but-different things.\n\u003c/p\u003e\n\n\u003cp\u003e\nAllison\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257292947,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDY=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503346"},"message":"\u003cp\u003e\nI thought a bit more on this, and global .consts are more common than\nsub-local consts (I think). Following the Huffman principle, I think it\nwould be nicer then to use '.localconst' for a local const, only\navailable in a sub, and .const for global constants. (and thus removing\n.globalconst).\n\u003c/p\u003e\n\n\u003cp\u003e\n(I'm not sure where sub-local constants are stored; are they stored in\nthe constants table of a PBC file? In that case the only thing\npreventing code from using a local constant in a global context would be\nthe pir compiler.)\n\u003c/p\u003e\n\n\u003cp\u003e\ncomments welcome,\nkjs\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"b06e3ac6b5400499d4c972ae8fd19b799ea1eb1f"},"timestamp":1257292954,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDc=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503347"},"message":"\u003cp\u003e\n+1\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1309672593,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDg=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503348"},"message":"\u003cp\u003e\nI don't see any location where \u003ctt\u003eglobalconst\u003c/tt\u003e is implemented.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e$ ack  globalconst *\ndocs/book/draft/ch11_directive_reference.pod\n78:=head3 .globalconst\n80:X\u0026lt;.globalconst directive\u0026gt;\n82:  .globalconst R\u0026lt;TYPE\u0026gt;R\u0026lt;NAME\u0026gt; = R\u0026lt;VALUE\u0026gt;\ndocs/pdds/pdd19_pir.pod\n293:=item .globalconst \u0026lt;type\u0026gt; \u0026lt;identifier\u0026gt; = \u0026lt;const\u0026gt;\n296:C\u0026lt;.globalconst\u0026gt; may only be used within a C\u0026lt;.sub\u0026gt;.\neditor/kate_syntax.pl\n27:my @imcc_spdirec = qw(.call .result .return .local .const .globalconst\neditor/pir-mode.el\n230:    \".endnamespace\" \".eom\" \".get_results\" \".global\" \".globalconst\"\nexamples/library/ncurses_life.pir\n66:    .globalconst int KEY_DOWN = 258\n67:    .globalconst int KEY_UP   = 259\n68:    .globalconst int KEY_LEFT = 260\n69:    .globalconst int KEY_RIGHT= 261\n70:    .globalconst int KEY_HOME = 262\nruntime/parrot/library/Archive/Tar.pir\n45:    .globalconst int MODE = 0o666\n46:    .globalconst string FILE = '0'\n47:    .globalconst string MAGIC = 'ustar'\n48:    .globalconst string TAR_VERSION = '00'\n49:    .globalconst int BLOCK = 512\nruntime/parrot/library/Archive/Zip.pir\n36:    .globalconst int AZ_OK = 0\n37:    .globalconst int AZ_STREAM_END = 1\n38:    .globalconst int AZ_ERROR = 2\n39:    .globalconst int AZ_FORMAT_ERROR = 3\n40:    .globalconst int AZ_IO_ERROR = 4\n41:    .globalconst int FA_UNIX = 3\n42:    .globalconst int GPBF_HAS_DATA_DESCRIPTOR_MASK = 8\n43:    .globalconst int COMPRESSION_STORED = 0\n44:    .globalconst int COMPRESSION_DEFLATED = 8\n45:    .globalconst int SIGNATURE_LENGTH = 4\n46:    .globalconst int LOCAL_FILE_HEADER_LENGTH = 26\n47:    .globalconst int DATA_DESCRIPTOR_LENGTH = 12\n48:    .globalconst int CENTRAL_DIRECTORY_FILE_HEADER_LENGTH = 42\nruntime/parrot/library/LWP/Protocol.pir\n93:    .globalconst int RC_OK = 200\n94:    .globalconst int RC_BAD_REQUEST = 400\n95:    .globalconst int RC_NOT_FOUND = 404\n96:    .globalconst int RC_INTERNAL_SERVER_ERROR = 500\nruntime/parrot/library/LWP/UserAgent.pir\n33:    .globalconst int RC_MOVED_PERMANENTLY = 301\n34:    .globalconst int RC_FOUND = 302\n35:    .globalconst int RC_SEE_OTHER = 303\n36:    .globalconst int RC_TEMPORARY_REDIRECT = 307\n37:    .globalconst int RC_UNAUTHORIZED = 401\n38:    .globalconst int RC_PROXY_AUTHENTICATION_REQUIRED = 407\n39:    .globalconst int RC_NOT_IMPLEMENTED = 501\nt/compilers/imcc/syn/const.t\n13:pir_output_is( \u0026lt;\u0026lt;'CODE', \u0026lt;\u0026lt;'OUT', \"globalconst 1\" );\n16:    .globalconst int N = 5\n32:pir_output_is( \u0026lt;\u0026lt;'CODE', \u0026lt;\u0026lt;'OUT', \"globalconst 2\" );\n34:    .globalconst int N = 5\n52:pir_output_is( \u0026lt;\u0026lt;'CODE', \u0026lt;\u0026lt;'OUT', \"globalconst 3\" );\n59:    .globalconst int N = 5\nt/compilers/imcc/syn/scope.t\n12:     .globalconst string ok1 = \"ok\\n\"\n\u003c/pre\u003e\u003cp\u003e\nAm I missing something?\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"9f0ac2e546d9697509103ae8e55e8228cd05cab1"},"timestamp":1309796190,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNDk=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503349"},"message":"\u003cp\u003e\nack doesn't seem to know about lex files.\n\u003c/p\u003e\n\n\u003cpre class=\"wiki\"\u003e[chemnitz@10:12 ~/parrot]$ aack  globalconst\ncompilers/imcc/imcc.l\n342:\".globalconst\"                return GLOBAL_CONST;\n[snip]\n\u003c/pre\u003e\u003cp\u003e\nthe GLOBAL_CONST token is in turn used in the following places:\n\u003c/p\u003e\n\u003cpre class=\"wiki\"\u003e[chemnitz@10:15 ~/parrot]$ aack  GLOBAL_CONST\ncompilers/imcc/imcc.l\n342:\".globalconst\"                return GLOBAL_CONST;\ncompilers/imcc/imcc.y\n1045:%token \u0026lt;t\u0026gt; GLOBAL_CONST\n1911:   | GLOBAL_CONST { imcc-\u0026gt;is_def = 1; } type IDENTIFIER '=' const\ncompilers/imcc/imclexer.c\n3027:return GLOBAL_CONST;\ncompilers/imcc/imcparser.h\n81:     GLOBAL_CONST = 287,\n198:#define GLOBAL_CONST 287\ncompilers/imcc/imcparser.c\n1164:     GLOBAL_CONST = 287,\n1281:#define GLOBAL_CONST 287\n1863:  \"ANNOTATE\", \"GLOBAL_CONST\", \"PLUS_ASSIGN\", \"MINUS_ASSIGN\", \"MUL_ASSIGN\",\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"9f0ac2e546d9697509103ae8e55e8228cd05cab1"},"timestamp":1309796219,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDMzNTA=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-3503350"},"message":"\u003cp\u003e\nuh, aack being an alias i've got set up for \"ack -a\"...\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1336403164,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NTIwODE=","github-url":"https://github.com/parrot/parrot/issues/485#issuecomment-5552081"},"message":"With PIRC not in development any more and IMCC not exactly well-loved by developers, is this kind of breaking syntax change something we want to devote any manpower to? At this point, I suggest that breaking changes to PIR syntax be reserved for some of the most important functional issues we have to deal with and keep the aesthetic changes to a minimum. I think I'd like to close this ticket with a WONTFIX marker unless somebody objects.","files":null}]}