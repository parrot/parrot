{"version":1,"ops":[{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1258459870,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTA=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502510"},"message":"\u003cp\u003e\nOriginally reported in \u003ca   href=\"http://rt.perl.org/rt3/Ticket/Display.html?id=39856\"\u003e\u003cspan class=\"icon\"\u003e \u003c/span\u003ehttp://rt.perl.org/rt3/Ticket/Display.html?id=39856\u003c/a\u003e\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1258460230,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTE=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502511"},"message":"\u003cp\u003e\nFurther discussion on the original ticket points at pbc_merge as a potential alternative; There were some worries about multiple :loads per single file, but that doesn't seem to be an issue.\n\u003c/p\u003e\n\n\u003cp\u003e\nOther discussion on the ticket suggested using (instead of a pbc_merge-style tool) a package format. (e.g. zip/jar, etc.) It's possible that that could obviate the original need for pbc_merge, even.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1258460339,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTI=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502512"},"message":"\u003cp\u003e\n+1\n\u003c/p\u003e\n\n\u003cp\u003e\nPm\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1284798485,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTM=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502513"},"message":"\u003cp\u003e\nIs this RFC still under consideration?  If so, which direction do we expect to take?\n\u003c/p\u003e\n\n\u003cp\u003e\nkid51\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aeaa659130ab92a2084a11638a6eb1a6beb03360"},"timestamp":1294917651,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTQ=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502514"},"message":"\u003cp\u003e\n+1.  It's definitely not a high-priority feature, though, since pbc_merge makes it possible to do the same thing, if less efficiently.\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"d9b4aee65ce8c18d4a43eced1eecb0d154e1eebb"},"timestamp":1306056102,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTU=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502515"},"message":"\u003cp\u003e\nReplying to \u003ca href=\"http://trac.parrot.org/parrot/ticket/1290#comment:6\" title=\"Comment 6 for Ticket #1290\"\u003ecotto\u003c/a\u003e:\n\u003c/p\u003e\n\n\u003cblockquote class=\"citation\"\u003e\n\u003cp\u003e\n +1.  It's definitely not a high-priority feature, though, since pbc_merge makes it possible to do the same thing, if less efficiently.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\nWhat would it take to do it?  Whom could we ask to work on it?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"aef4977f5ea786238d7c9581a2f192f4adc3f39d"},"timestamp":1306188637,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTY=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502516"},"message":"\u003cp\u003e\nWe would need to rework the command-line parsing logic to handle multiple input files if the -o option were used (I suspect listing multiple input files without -o should be treated as an error because it's nonsensical). We would need to compile each, merge each one into a single master packfile, and then output that packfile to file. With the new embedding API and some of the IMCC/Packfile changes recently, this actually should not be too hard of a project.\n\u003c/p\u003e\n\n\u003cp\u003e\nThe question is whether we want to do this with pbc_merge available. And, if so, do we want to keep pbc_merge or deprecate that?\n\u003c/p\u003e","files":null},{"type":3,"author":{"id":"0782f66a529ccd24e18226f5eebab20a90bea166"},"timestamp":1306193920,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTc=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502517"},"message":"\u003cpre class=\"wiki\"\u003eOn Mon, May 23, 2011 at 11:10 AM, Parrot\n\u0026lt;parrot-tickets@lists.parrot.org\u0026gt; wrote:\n\u0026gt; #1290: Produce Single PBC from Multiple PIR Files with -o\n\u0026gt; -----------------------+----------------------------------------------------\n\u0026gt;  Reporter:  chromatic  |       Owner:\n\u0026gt;     Type:  feature    |      Status:  new\n\u0026gt;  Priority:  normal     |   Milestone:\n\u0026gt; Component:  core       |     Version:\n\u0026gt;  Severity:  medium     |    Keywords:\n\u0026gt;     Lang:             |       Patch:\n\u0026gt;  Platform:             |\n\u0026gt; -----------------------+----------------------------------------------------\n\u0026gt;\n\u0026gt; Comment(by whiteknight):\n\u0026gt;\n\u0026gt;  We would need to rework the command-line parsing logic to handle multiple\n\u0026gt;  input files if the -o option were used (I suspect listing multiple input\n\u0026gt;  files without -o should be treated as an error because it's nonsensical).\n\u0026gt;  We would need to compile each, merge each one into a single master\n\u0026gt;  packfile, and then output that packfile to file. With the new embedding\n\u0026gt;  API and some of the IMCC/Packfile changes recently, this actually should\n\u0026gt;  not be too hard of a project.\n\u0026gt;\n\u0026gt;  The question is whether we want to do this with pbc_merge available. And,\n\u0026gt;  if so, do we want to keep pbc_merge or deprecate that?\nFYI, pbc_merge merges already-generated PBC files, which is different\nthan the request on this ticket (to generate a single PBC from\nmultiple PIR files.)\nAs long as the functionality is still there, I don't care which way I\nhave to invoke it (barring normal deprecation issues.)\n--\nWill \"Coke\" Coleda\n\u003c/pre\u003e","files":null},{"type":3,"author":{"id":"0c9c62332064205b2d799407019fa3e7e2f43862"},"timestamp":1306203823,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDM1MDI1MTg=","github-url":"https://github.com/parrot/parrot/issues/257#issuecomment-3502518"},"message":"\u003cpre class=\"wiki\"\u003eOn Mon, May 23, 2011 at 12:38:16PM -0400, Will Coleda wrote:\n\u0026gt; FYI, pbc_merge merges already-generated PBC files, which is different\n\u0026gt; than the request on this ticket (to generate a single PBC from\n\u0026gt; multiple PIR files.)\n\u0026gt;\n\u0026gt; As long as the functionality is still there, I don't care which way I\n\u0026gt; have to invoke it (barring normal deprecation issues.)\nThe workaround I've used in nearly every project I've done is to\ncreate a PIR file with .include directives for the files to\nbe combined as one.  In other words, all_files.pir can contain\n    .include 'file1.pir'\n    .include 'file2.pir'\n    ...\n    .include 'filen.pir'\nand then the parrot command to compile them together is\n    parrot -o all_files.pbc all_files.pir\nOf course, the workaround doesn't address the request on this\nticket directly, but it's how I've managed to achieve the same\nresult since pretty much my first days working with Parrot.\nPm\n\u003c/pre\u003e","files":null}]}