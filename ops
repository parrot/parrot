{"version":1,"ops":[{"type":1,"author":{"id":"41c0d07f33c8ae02cd64cae92a7438e4a1465e88"},"timestamp":1264476150,"metadata":{"github-id":"MDU6SXNzdWUyODQ4NjYx","github-url":"https://github.com/parrot/parrot/issues/454","origin":"github"},"title":"Unreasonably painful to add a method to all *Array PMCs","message":"Adding a method that works for all *Array PMCs (in either PIR or NQP) should be really easy, but it isn't.  If all *Array PMCs had a common ancestor (Array, say), you could do this:\n\n```\nmodule Array {\n    method reverse () {\n        my @reversed;\n        for self { @reversed.unshift($_); }\n        @reversed;\n    }\n}\n```\n\nUnfortunately, there is no such common ancestor.  Likewise, they \nshare no common role, so that's not an in either.\n\nOne could copy and paste the above block for each *Array module, but that's just nuts.  Talk about a DRY violation.\n\nIt's possible one might create one method code object, then iterate over all the known *Array types and use add_method to add that code to them as a method, but this will fail if the list of *Array types changes, which it reasonably might.  Plus it's just ugly for what should be a simple task.\n\nOriginally http://trac.parrot.org/parrot/ticket/1416","files":null}]}