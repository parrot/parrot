/*
Copyright (C) 2008-2011, Parrot Foundation.

=head1 NAME

src/pmc/lexinfo.pmc - LexInfo PMC

=head1 DESCRIPTION

These are the vtable functions for the lexinfo PMC.

=head2 Functions

=over 4

=cut

*/

#include "pmc/pmc_hash.h"

/* HEADERIZER HFILE: none */
/* HEADERIZER BEGIN: static */
/* HEADERIZER END: static */

/*
 * LexInfo contains a constant Hash with constant string
 * keys and integer indices
 */

pmclass LexInfo extends Hash  provides hash no_ro auto_attrs {

/*

=item C<init_pmc(PMC *sub)>

Initialize the LexInfo PMC and remember the associate
subroutine.

=cut

*/

    VTABLE void init() {
        /* Set value type to INTVAL */
        SELF.init_int((INTVAL)enum_type_INTVAL);
    }

    VTABLE void init_pmc(PMC *sub) {
        /* Set value type to INTVAL */
        SELF.init_int((INTVAL)enum_type_INTVAL);
    }

/*

=item C<void declare_lex_preg(STRING *name, INTVAL preg)>

Declare a lexical variable that is an alias for a PMC register.  The PIR
compiler calls this method in response to a ".lex STRING, PREG" directive.

=cut

*/

    METHOD declare_lex_preg(STRING *name, INTVAL preg) {
        VTABLE_set_integer_keyed_str(INTERP, SELF, name,
            (preg << 2) | REGNO_PMC);
    }


/*

=item C<PMC *inspect_str(STRING *what)>

Introspects this LexInfo structure. The only valid introspection key is
C<symbols>, which gets an array of the names of the symbols in this lexpad.

=cut

*/

    VTABLE PMC *inspect_str(STRING *what) {
        if (STRING_equal(INTERP, what, CONST_STRING(INTERP, "symbols"))) {
            PMC * const result    = Parrot_pmc_new(INTERP, enum_class_ResizableStringArray);
            const Hash *hash      = (Hash *)SELF.get_pointer();

            parrot_hash_iterate(hash,
                PARROT_ASSERT(_bucket->key);
                VTABLE_push_string(INTERP, result, (STRING *)_bucket->key););

            return result;
        }
        else
            Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
                "Unknown introspection value '%S'", what);
    }
}


/*

=back

=head1 SEE ALSO

F<docs/pdds/pdd20_lexical_vars.pod>, F<src/classes/lexpad.pmc>.

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4 cinoptions='\:2=2' :
 */
